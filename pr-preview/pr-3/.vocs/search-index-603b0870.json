{"documentCount":314,"nextId":314,"documentIds":{"0":"docs/pages/overview.mdx#reth","1":"docs/pages/overview.mdx#what-is-this-about","2":"docs/pages/overview.mdx#what-are-the-goals-of-reth","3":"docs/pages/overview.mdx#who-is-this-for","4":"docs/pages/overview.mdx#is-this-secure","5":"docs/pages/overview.mdx#sections","6":"docs/pages/cli/op-reth.md#op-reth","7":"docs/pages/cli/reth.mdx#reth","8":"docs/pages/developers/contribute.mdx#contribute","9":"docs/pages/developers/developers.mdx#developers","10":"docs/pages/developers/profiling.mdx#profiling-reth","11":"docs/pages/developers/profiling.mdx#table-of-contents","12":"docs/pages/developers/profiling.mdx#memory-profiling","13":"docs/pages/developers/profiling.mdx#jemalloc","14":"docs/pages/developers/profiling.mdx#enabling-jemalloc-in-reth","15":"docs/pages/developers/profiling.mdx#monitoring-memory-usage","16":"docs/pages/developers/profiling.mdx#limiting-process-memory","17":"docs/pages/developers/profiling.mdx#how-to-use-cgroups-to-limit-process-memory","18":"docs/pages/developers/profiling.mdx#understanding-allocation-with-jeprof","19":"docs/pages/installation/binaries.mdx#binaries","20":"docs/pages/installation/binaries.mdx#signature-verification","21":"docs/pages/installation/binaries.mdx#release-signing-key","22":"docs/pages/installation/build-for-arm-devices.mdx#building-for-arm-devices","23":"docs/pages/installation/build-for-arm-devices.mdx#cpu-architecture","24":"docs/pages/installation/build-for-arm-devices.mdx#memory-layout-on-aarch64","25":"docs/pages/installation/build-for-arm-devices.mdx#arm-board-virtual-memory-limitation","26":"docs/pages/installation/build-for-arm-devices.mdx#issue-description","27":"docs/pages/installation/build-for-arm-devices.mdx#understanding-the-limitation","28":"docs/pages/installation/build-for-arm-devices.mdx#additional-context","29":"docs/pages/installation/build-for-arm-devices.mdx#additional-resources","30":"docs/pages/installation/build-for-arm-devices.mdx#build-reth","31":"docs/pages/installation/build-for-arm-devices.mdx#troubleshooting","32":"docs/pages/installation/build-for-arm-devices.mdx#failed-to-open-database","33":"docs/pages/installation/docker.mdx#docker","34":"docs/pages/installation/docker.mdx#github","35":"docs/pages/installation/docker.mdx#building-the-docker-image","36":"docs/pages/installation/docker.mdx#using-the-docker-image","37":"docs/pages/installation/docker.mdx#using-plain-docker","38":"docs/pages/installation/docker.mdx#using-docker-compose","39":"docs/pages/installation/docker.mdx#interacting-with-reth-inside-docker","40":"docs/pages/installation/docker.mdx#run-only-grafana-in-docker","41":"docs/pages/installation/overview.mdx#installation","42":"docs/pages/installation/overview.mdx#hardware-requirements","43":"docs/pages/installation/overview.mdx#qlc-and-tlc","44":"docs/pages/installation/overview.mdx#disk","45":"docs/pages/installation/overview.mdx#cpu","46":"docs/pages/installation/overview.mdx#memory","47":"docs/pages/installation/overview.mdx#bandwidth","48":"docs/pages/installation/overview.mdx#what-hardware-can-i-get","49":"docs/pages/installation/priorities.mdx#update-priorities","50":"docs/pages/installation/source.mdx#build-from-source","51":"docs/pages/installation/source.mdx#dependencies","52":"docs/pages/installation/source.mdx#build-reth","53":"docs/pages/installation/source.mdx#update-reth","54":"docs/pages/installation/source.mdx#optimizations","55":"docs/pages/installation/source.mdx#troubleshooting","56":"docs/pages/installation/source.mdx#command-is-not-found","57":"docs/pages/installation/source.mdx#compilation-error","58":"docs/pages/installation/source.mdx#bus-error-wsl2","59":"docs/pages/jsonrpc/admin.mdx#admin-namespace","60":"docs/pages/jsonrpc/admin.mdx#admin_addpeer","61":"docs/pages/jsonrpc/admin.mdx#example","62":"docs/pages/jsonrpc/admin.mdx#admin_removepeer","63":"docs/pages/jsonrpc/admin.mdx#example-1","64":"docs/pages/jsonrpc/admin.mdx#admin_addtrustedpeer","65":"docs/pages/jsonrpc/admin.mdx#example-2","66":"docs/pages/jsonrpc/admin.mdx#admin_removetrustedpeer","67":"docs/pages/jsonrpc/admin.mdx#example-3","68":"docs/pages/jsonrpc/admin.mdx#admin_nodeinfo","69":"docs/pages/jsonrpc/admin.mdx#example-4","70":"docs/pages/jsonrpc/admin.mdx#admin_peerevents-admin_peerevents_unsubscribe","71":"docs/pages/jsonrpc/admin.mdx#event-types","72":"docs/pages/jsonrpc/admin.mdx#example-5","73":"docs/pages/jsonrpc/debug.mdx#debug-namespace","74":"docs/pages/jsonrpc/debug.mdx#debug_getrawheader","75":"docs/pages/jsonrpc/debug.mdx#debug_getrawblock","76":"docs/pages/jsonrpc/debug.mdx#debug_getrawtransaction","77":"docs/pages/jsonrpc/debug.mdx#debug_getrawreceipts","78":"docs/pages/jsonrpc/debug.mdx#debug_getbadblocks","79":"docs/pages/jsonrpc/debug.mdx#debug_tracechain","80":"docs/pages/jsonrpc/debug.mdx#debug_traceblock","81":"docs/pages/jsonrpc/debug.mdx#debug_traceblockbyhash","82":"docs/pages/jsonrpc/debug.mdx#debug_traceblockbynumber","83":"docs/pages/jsonrpc/debug.mdx#debug_tracetransaction","84":"docs/pages/jsonrpc/debug.mdx#debug_tracecall","85":"docs/pages/jsonrpc/eth.mdx#eth-namespace","86":"docs/pages/jsonrpc/intro.mdx#json-rpc","87":"docs/pages/jsonrpc/intro.mdx#namespaces","88":"docs/pages/jsonrpc/intro.mdx#transports","89":"docs/pages/jsonrpc/intro.mdx#http","90":"docs/pages/jsonrpc/intro.mdx#websockets","91":"docs/pages/jsonrpc/intro.mdx#ipc","92":"docs/pages/jsonrpc/intro.mdx#interacting-with-the-rpc","93":"docs/pages/jsonrpc/net.mdx#net-namespace","94":"docs/pages/jsonrpc/net.mdx#net_listening","95":"docs/pages/jsonrpc/net.mdx#example","96":"docs/pages/jsonrpc/net.mdx#net_peercount","97":"docs/pages/jsonrpc/net.mdx#example-1","98":"docs/pages/jsonrpc/net.mdx#net_version","99":"docs/pages/jsonrpc/net.mdx#example-2","100":"docs/pages/jsonrpc/rpc.mdx#rpc-namespace","101":"docs/pages/jsonrpc/rpc.mdx#rpc_modules","102":"docs/pages/jsonrpc/rpc.mdx#example","103":"docs/pages/jsonrpc/rpc.mdx#handling-responses-during-syncing","104":"docs/pages/jsonrpc/trace.mdx#trace-namespace","105":"docs/pages/jsonrpc/trace.mdx#ad-hoc-tracing-apis","106":"docs/pages/jsonrpc/trace.mdx#transaction-trace-filtering-apis","107":"docs/pages/jsonrpc/trace.mdx#trace_call","108":"docs/pages/jsonrpc/trace.mdx#example","109":"docs/pages/jsonrpc/trace.mdx#trace_callmany","110":"docs/pages/jsonrpc/trace.mdx#example-1","111":"docs/pages/jsonrpc/trace.mdx#trace_rawtransaction","112":"docs/pages/jsonrpc/trace.mdx#example-2","113":"docs/pages/jsonrpc/trace.mdx#trace_replayblocktransactions","114":"docs/pages/jsonrpc/trace.mdx#example-3","115":"docs/pages/jsonrpc/trace.mdx#trace_replaytransaction","116":"docs/pages/jsonrpc/trace.mdx#example-4","117":"docs/pages/jsonrpc/trace.mdx#trace_block","118":"docs/pages/jsonrpc/trace.mdx#example-5","119":"docs/pages/jsonrpc/trace.mdx#trace_filter","120":"docs/pages/jsonrpc/trace.mdx#example-6","121":"docs/pages/jsonrpc/trace.mdx#trace_get","122":"docs/pages/jsonrpc/trace.mdx#example-7","123":"docs/pages/jsonrpc/trace.mdx#trace_transaction","124":"docs/pages/jsonrpc/trace.mdx#example-8","125":"docs/pages/jsonrpc/txpool.mdx#txpool-namespace","126":"docs/pages/jsonrpc/txpool.mdx#txpool_content","127":"docs/pages/jsonrpc/txpool.mdx#txpool_contentfrom","128":"docs/pages/jsonrpc/txpool.mdx#txpool_inspect","129":"docs/pages/jsonrpc/txpool.mdx#txpool_status","130":"docs/pages/jsonrpc/web3.mdx#web3-namespace","131":"docs/pages/jsonrpc/web3.mdx#web3_clientversion","132":"docs/pages/jsonrpc/web3.mdx#example","133":"docs/pages/jsonrpc/web3.mdx#web3_sha3","134":"docs/pages/jsonrpc/web3.mdx#example-1","135":"docs/pages/run/config.mdx#configuring-reth","136":"docs/pages/run/config.mdx#the-stages-section","137":"docs/pages/run/config.mdx#headers","138":"docs/pages/run/config.mdx#bodies","139":"docs/pages/run/config.mdx#sender_recovery","140":"docs/pages/run/config.mdx#execution","141":"docs/pages/run/config.mdx#account_hashing","142":"docs/pages/run/config.mdx#storage_hashing","143":"docs/pages/run/config.mdx#merkle","144":"docs/pages/run/config.mdx#transaction_lookup","145":"docs/pages/run/config.mdx#index_account_history","146":"docs/pages/run/config.mdx#index_storage_history","147":"docs/pages/run/config.mdx#etl","148":"docs/pages/run/config.mdx#the-peers-section","149":"docs/pages/run/config.mdx#connection_info","150":"docs/pages/run/config.mdx#reputation_weights","151":"docs/pages/run/config.mdx#backoff_durations","152":"docs/pages/run/config.mdx#the-sessions-section","153":"docs/pages/run/config.mdx#the-prune-section","154":"docs/pages/run/config.mdx#default-config","155":"docs/pages/run/config.mdx#example-of-the-custom-pruning-configuration","156":"docs/pages/run/mainnet.mdx#running-reth-on-ethereum-mainnet-or-testnets","157":"docs/pages/run/mainnet.mdx#running-the-reth-node","158":"docs/pages/run/mainnet.mdx#running-the-consensus-layer","159":"docs/pages/run/mainnet.mdx#verify-the-chain-is-growing","160":"docs/pages/run/mainnet.mdx#running-without-a-consensus-layer","161":"docs/pages/run/mainnet.mdx#running-with-etherscan-as-block-source","162":"docs/pages/run/observability.mdx#observability-with-prometheus--grafana","163":"docs/pages/run/observability.mdx#prometheus--grafana","164":"docs/pages/run/observability.mdx#macos","165":"docs/pages/run/observability.mdx#linux","166":"docs/pages/run/observability.mdx#debianubuntu","167":"docs/pages/run/observability.mdx#fedorarhelcentos","168":"docs/pages/run/observability.mdx#windows","169":"docs/pages/run/observability.mdx#using-chocolatey","170":"docs/pages/run/observability.mdx#manual-installation","171":"docs/pages/run/observability.mdx#conclusion","172":"docs/pages/run/optimism.mdx#running-reth-on-op-stack-chains","173":"docs/pages/run/optimism.mdx#superchain-registry","174":"docs/pages/run/optimism.mdx#running-on-optimism","175":"docs/pages/run/optimism.mdx#installing-op-reth","176":"docs/pages/run/optimism.mdx#installing-a-rollup-node","177":"docs/pages/run/optimism.mdx#running-op-reth","178":"docs/pages/run/ports.mdx#ports","179":"docs/pages/run/ports.mdx#peering-ports","180":"docs/pages/run/ports.mdx#metrics-port","181":"docs/pages/run/ports.mdx#http-rpc-port","182":"docs/pages/run/ports.mdx#ws-rpc-port","183":"docs/pages/run/ports.mdx#engine-api-port","184":"docs/pages/run/private-testnet.mdx#run-reth-in-a-private-testnet-using-kurtosis","185":"docs/pages/run/private-testnet.mdx#using-docker-locally","186":"docs/pages/run/private-testnet.mdx#step-1-define-the-parameters-and-shape-of-your-private-network","187":"docs/pages/run/private-testnet.mdx#step-2-spin-up-your-network","188":"docs/pages/run/private-testnet.mdx#using-kurtosis-on-kubernetes","189":"docs/pages/run/private-testnet.mdx#running-the-network-with-additional-services","190":"docs/pages/run/private-testnet.mdx#questions","191":"docs/pages/run/pruning.mdx#pruning--full-node","192":"docs/pages/run/pruning.mdx#basic-concepts","193":"docs/pages/run/pruning.mdx#modes","194":"docs/pages/run/pruning.mdx#archive-node","195":"docs/pages/run/pruning.mdx#pruned-node","196":"docs/pages/run/pruning.mdx#full-node","197":"docs/pages/run/pruning.mdx#size","198":"docs/pages/run/pruning.mdx#archive-node-1","199":"docs/pages/run/pruning.mdx#pruned-node-1","200":"docs/pages/run/pruning.mdx#full-node-1","201":"docs/pages/run/pruning.mdx#rpc-support","202":"docs/pages/run/pruning.mdx#full-node-2","203":"docs/pages/run/pruning.mdx#debug-namespace","204":"docs/pages/run/pruning.mdx#eth-namespace","205":"docs/pages/run/pruning.mdx#net-namespace","206":"docs/pages/run/pruning.mdx#trace-namespace","207":"docs/pages/run/pruning.mdx#txpool-namespace","208":"docs/pages/run/pruning.mdx#pruned-node-2","209":"docs/pages/run/pruning.mdx#debug-namespace-1","210":"docs/pages/run/pruning.mdx#eth-namespace-1","211":"docs/pages/run/pruning.mdx#net-namespace-1","212":"docs/pages/run/pruning.mdx#trace-namespace-1","213":"docs/pages/run/pruning.mdx#txpool-namespace-1","214":"docs/pages/run/run-a-node.mdx#run-a-node","215":"docs/pages/run/sync-op-mainnet.mdx#sync-op-mainnet","216":"docs/pages/run/sync-op-mainnet.mdx#minimal-bootstrap-recommended","217":"docs/pages/run/sync-op-mainnet.mdx#full-bootstrap-not-recommended","218":"docs/pages/run/sync-op-mainnet.mdx#import-state","219":"docs/pages/run/sync-op-mainnet.mdx#manual-export-steps","220":"docs/pages/run/sync-op-mainnet.mdx#manual-import-steps","221":"docs/pages/run/sync-op-mainnet.mdx#1-import-blocks","222":"docs/pages/run/sync-op-mainnet.mdx#2-import-receipts","223":"docs/pages/run/sync-op-mainnet.mdx#3-import-state","224":"docs/pages/run/sync-op-mainnet.mdx#sync-from-bedrock-to-tip","225":"docs/pages/run/transactions.mdx#transaction-types","226":"docs/pages/run/transactions.mdx#legacy-transactions","227":"docs/pages/run/transactions.mdx#eip-2930-transactions","228":"docs/pages/run/transactions.mdx#eip-1559-transactions","229":"docs/pages/run/transactions.mdx#eip-4844-transactions","230":"docs/pages/run/troubleshooting.mdx#troubleshooting","231":"docs/pages/run/troubleshooting.mdx#database","232":"docs/pages/run/troubleshooting.mdx#docker","233":"docs/pages/run/troubleshooting.mdx#error-code-13","234":"docs/pages/run/troubleshooting.mdx#slow-database-inserts-and-updates","235":"docs/pages/run/troubleshooting.mdx#compact-the-database","236":"docs/pages/run/troubleshooting.mdx#re-sync-from-scratch","237":"docs/pages/run/troubleshooting.mdx#database-write-error","238":"docs/pages/run/troubleshooting.mdx#concurrent-database-access-error-using-containersdocker","239":"docs/pages/run/troubleshooting.mdx#hardware-performance-testing","240":"docs/pages/run/troubleshooting.mdx#disk-speed-testing-with-iozone","241":"docs/pages/run/troubleshooting.mdx#ram-speed-and-health-testing","242":"docs/pages/cli/reth/config.mdx#reth-config","243":"docs/pages/cli/reth/db.mdx#reth-db","244":"docs/pages/cli/reth/debug.mdx#reth-debug","245":"docs/pages/cli/reth/download.mdx#reth-download","246":"docs/pages/cli/reth/dump-genesis.mdx#reth-dump-genesis","247":"docs/pages/cli/reth/import-era.mdx#reth-import-era","248":"docs/pages/cli/reth/import.mdx#reth-import","249":"docs/pages/cli/reth/init-state.mdx#reth-init-state","250":"docs/pages/cli/reth/init.mdx#reth-init","251":"docs/pages/cli/reth/node.mdx#reth-node","252":"docs/pages/cli/reth/p2p.mdx#reth-p2p","253":"docs/pages/cli/reth/prune.mdx#reth-prune","254":"docs/pages/cli/reth/recover.mdx#reth-recover","255":"docs/pages/cli/reth/stage.mdx#reth-stage","256":"docs/pages/developers/exex/hello-world.mdx#hello-world","257":"docs/pages/developers/exex/hello-world.mdx#create-a-project","258":"docs/pages/developers/exex/hello-world.mdx#default-reth-node","259":"docs/pages/developers/exex/hello-world.mdx#simplest-exex","260":"docs/pages/developers/exex/hello-world.mdx#hello-world-exex","261":"docs/pages/developers/exex/hello-world.mdx#whats-next","262":"docs/pages/developers/exex/how-it-works.mdx#how-do-exexes-work","263":"docs/pages/developers/exex/how-it-works.mdx#pruning","264":"docs/pages/developers/exex/overview.mdx#execution-extensions-exex","265":"docs/pages/developers/exex/overview.mdx#what-are-execution-extensions","266":"docs/pages/developers/exex/overview.mdx#what-execution-extensions-are-not","267":"docs/pages/developers/exex/overview.mdx#how-do-i-build-an-execution-extension","268":"docs/pages/developers/exex/remote.mdx#remote-execution-extensions","269":"docs/pages/developers/exex/remote.mdx#prerequisites","270":"docs/pages/developers/exex/remote.mdx#create-a-new-project","271":"docs/pages/developers/exex/remote.mdx#create-the-protobuf-definitions","272":"docs/pages/developers/exex/remote.mdx#exex-and-grpc-server","273":"docs/pages/developers/exex/remote.mdx#grpc-server","274":"docs/pages/developers/exex/remote.mdx#exex","275":"docs/pages/developers/exex/remote.mdx#full-exexrs-code","276":"docs/pages/developers/exex/remote.mdx#consumer","277":"docs/pages/developers/exex/remote.mdx#running","278":"docs/pages/developers/exex/tracking-state.mdx#tracking-state","279":"docs/pages/developers/exex/tracking-state.mdx#turning-exex-into-a-struct","280":"docs/pages/developers/exex/tracking-state.mdx#adding-state","281":"docs/pages/cli/reth/db/checksum.mdx#reth-db-checksum","282":"docs/pages/cli/reth/db/clear.mdx#reth-db-clear","283":"docs/pages/cli/reth/db/diff.mdx#reth-db-diff","284":"docs/pages/cli/reth/db/drop.mdx#reth-db-drop","285":"docs/pages/cli/reth/db/get.mdx#reth-db-get","286":"docs/pages/cli/reth/db/list.mdx#reth-db-list","287":"docs/pages/cli/reth/db/path.mdx#reth-db-path","288":"docs/pages/cli/reth/db/stats.mdx#reth-db-stats","289":"docs/pages/cli/reth/db/version.mdx#reth-db-version","290":"docs/pages/cli/reth/debug/build-block.mdx#reth-debug-build-block","291":"docs/pages/cli/reth/debug/execution.mdx#reth-debug-execution","292":"docs/pages/cli/reth/debug/in-memory-merkle.mdx#reth-debug-in-memory-merkle","293":"docs/pages/cli/reth/debug/merkle.mdx#reth-debug-merkle","294":"docs/pages/cli/reth/p2p/body.mdx#reth-p2p-body","295":"docs/pages/cli/reth/p2p/header.mdx#reth-p2p-header","296":"docs/pages/cli/reth/p2p/rlpx.mdx#reth-p2p-rlpx","297":"docs/pages/cli/reth/recover/storage-tries.mdx#reth-recover-storage-tries","298":"docs/pages/cli/reth/stage/drop.mdx#reth-stage-drop","299":"docs/pages/cli/reth/stage/dump.mdx#reth-stage-dump","300":"docs/pages/cli/reth/stage/run.mdx#reth-stage-run","301":"docs/pages/cli/reth/stage/unwind.mdx#reth-stage-unwind","302":"docs/pages/cli/reth/test-vectors/tables.mdx#reth-test-vectors-tables","303":"docs/pages/cli/reth/db/clear/mdbx.mdx#reth-db-clear-mdbx","304":"docs/pages/cli/reth/db/clear/static-file.mdx#reth-db-clear-static-file","305":"docs/pages/cli/reth/db/get/mdbx.mdx#reth-db-get-mdbx","306":"docs/pages/cli/reth/db/get/static-file.mdx#reth-db-get-static-file","307":"docs/pages/cli/reth/p2p/rlpx/ping.mdx#reth-p2p-rlpx-ping","308":"docs/pages/cli/reth/stage/dump/account-hashing.mdx#reth-stage-dump-account-hashing","309":"docs/pages/cli/reth/stage/dump/execution.mdx#reth-stage-dump-execution","310":"docs/pages/cli/reth/stage/dump/merkle.mdx#reth-stage-dump-merkle","311":"docs/pages/cli/reth/stage/dump/storage-hashing.mdx#reth-stage-dump-storage-hashing","312":"docs/pages/cli/reth/stage/unwind/num-blocks.mdx#reth-stage-unwind-num-blocks","313":"docs/pages/cli/reth/stage/unwind/to-block.mdx#reth-stage-unwind-to-block"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[1,1,66],"1":[5,1,84],"2":[7,1,176],"3":[5,1,70],"4":[4,1,97],"5":[1,1,53],"6":[2,1,152],"7":[1,1,194],"8":[1,1,35],"9":[1,1,34],"10":[2,1,1],"11":[3,3,13],"12":[2,2,124],"13":[1,4,50],"14":[4,5,86],"15":[3,4,107],"16":[3,4,85],"17":[7,4,123],"18":[4,4,107],"19":[1,1,59],"20":[2,1,65],"21":[3,3,34],"22":[4,1,22],"23":[2,4,26],"24":[4,4,45],"25":[5,4,1],"26":[2,8,46],"27":[3,8,56],"28":[2,8,107],"29":[2,8,6],"30":[2,4,22],"31":[1,4,31],"32":[4,5,143],"33":[1,1,39],"34":[1,1,54],"35":[4,1,32],"36":[4,1,12],"37":[3,4,63],"38":[3,4,94],"39":[5,1,35],"40":[5,1,58],"41":[1,1,48],"42":[2,1,57],"43":[3,4,114],"44":[1,3,98],"45":[1,3,53],"46":[1,3,51],"47":[1,3,81],"48":[6,1,90],"49":[2,1,85],"50":[3,1,15],"51":[1,3,119],"52":[2,3,90],"53":[2,3,39],"54":[1,3,167],"55":[1,3,1],"56":[4,4,32],"57":[2,4,104],"58":[4,4,34],"59":[2,1,28],"60":[2,2,36],"61":[1,3,21],"62":[2,2,26],"63":[1,3,21],"64":[2,2,42],"65":[1,3,21],"66":[2,2,30],"67":[1,3,21],"68":[2,2,30],"69":[1,3,38],"70":[3,2,75],"71":[2,4,38],"72":[1,4,35],"73":[2,1,16],"74":[2,2,14],"75":[2,2,20],"76":[2,2,17],"77":[2,2,18],"78":[2,2,22],"79":[2,2,28],"80":[2,2,41],"81":[2,2,26],"82":[2,2,26],"83":[2,2,44],"84":[2,2,47],"85":[2,1,15],"86":[2,1,60],"87":[1,2,91],"88":[1,2,7],"89":[1,3,107],"90":[1,3,73],"91":[1,3,57],"92":[4,2,71],"93":[2,1,12],"94":[2,2,21],"95":[1,3,14],"96":[2,2,16],"97":[1,3,14],"98":[2,2,17],"99":[1,3,13],"100":[2,1,18],"101":[2,2,17],"102":[1,3,15],"103":[4,2,104],"104":[2,1,60],"105":[4,2,33],"106":[4,2,51],"107":[2,2,52],"108":[1,3,24],"109":[2,2,52],"110":[1,3,36],"111":[2,2,21],"112":[1,3,26],"113":[2,2,22],"114":[1,3,27],"115":[2,2,17],"116":[1,3,26],"117":[2,2,13],"118":[1,3,39],"119":[2,2,46],"120":[1,3,50],"121":[2,2,15],"122":[1,3,40],"123":[2,2,15],"124":[1,3,40],"125":[2,1,11],"126":[2,2,35],"127":[2,2,29],"128":[2,2,37],"129":[2,2,35],"130":[2,1,10],"131":[2,2,11],"132":[1,3,20],"133":[2,2,17],"134":[1,3,24],"135":[2,1,71],"136":[3,2,42],"137":[1,5,102],"138":[1,5,116],"139":[2,5,39],"140":[1,5,113],"141":[2,5,66],"142":[2,5,69],"143":[1,5,43],"144":[2,5,40],"145":[3,5,41],"146":[3,5,42],"147":[1,5,50],"148":[3,2,69],"149":[2,5,26],"150":[2,5,72],"151":[2,5,37],"152":[3,2,79],"153":[3,2,24],"154":[2,5,7],"155":[6,5,104],"156":[7,1,111],"157":[4,7,152],"158":[4,7,79],"159":[5,7,42],"160":[5,7,79],"161":[6,7,47],"162":[5,1,101],"163":[3,5,25],"164":[1,5,8],"165":[1,5,1],"166":[2,6,71],"167":[3,6,56],"168":[1,5,1],"169":[2,6,5],"170":[2,6,212],"171":[1,5,58],"172":[6,1,116],"173":[2,7,29],"174":[3,6,46],"175":[3,7,32],"176":[4,7,52],"177":[3,7,161],"178":[1,1,20],"179":[2,1,40],"180":[2,1,41],"181":[3,1,43],"182":[3,1,42],"183":[3,1,49],"184":[8,1,15],"185":[3,8,113],"186":[11,11,51],"187":[6,11,214],"188":[4,8,38],"189":[6,8,45],"190":[2,14,24],"191":[4,1,67],"192":[2,4,58],"193":[1,4,1],"194":[2,5,17],"195":[2,5,35],"196":[2,5,37],"197":[1,4,15],"198":[2,5,22],"199":[2,5,29],"200":[2,5,100],"201":[2,4,44],"202":[2,6,12],"203":[2,6,22],"204":[2,6,56],"205":[2,6,6],"206":[2,6,17],"207":[2,6,7],"208":[2,6,26],"209":[2,7,17],"210":[2,7,50],"211":[2,7,10],"212":[2,7,15],"213":[2,7,11],"214":[3,1,67],"215":[3,1,51],"216":[4,3,52],"217":[5,3,15],"218":[2,8,56],"219":[3,8,35],"220":[3,8,1],"221":[3,10,28],"222":[3,10,65],"223":[3,10,48],"224":[5,3,53],"225":[2,1,38],"226":[2,2,49],"227":[3,2,50],"228":[3,2,81],"229":[3,2,86],"230":[1,1,41],"231":[1,1,1],"232":[1,2,54],"233":[3,2,60],"234":[5,2,84],"235":[3,7,86],"236":[4,7,19],"237":[3,2,88],"238":[8,2,76],"239":[3,1,42],"240":[4,4,71],"241":[5,4,59],"242":[2,1,142],"243":[2,1,286],"244":[2,1,165],"245":[2,1,276],"246":[3,1,160],"247":[3,1,270],"248":[2,1,275],"249":[3,1,329],"250":[2,1,252],"251":[2,1,1038],"252":[2,1,479],"253":[2,1,254],"254":[2,1,155],"255":[2,1,167],"256":[2,1,25],"257":[3,3,62],"258":[3,3,101],"259":[2,3,108],"260":[3,3,176],"261":[5,2,23],"262":[5,1,71],"263":[1,5,56],"264":[4,1,1],"265":[5,4,74],"266":[5,4,44],"267":[8,4,33],"268":[3,1,33],"269":[1,3,11],"270":[4,3,130],"271":[4,7,87],"272":[4,3,16],"273":[2,7,174],"274":[1,7,170],"275":[4,7,137],"276":[1,3,99],"277":[1,3,54],"278":[2,1,28],"279":[5,3,218],"280":[2,3,192],"281":[3,1,176],"282":[3,1,171],"283":[3,1,241],"284":[3,1,168],"285":[3,1,172],"286":[3,1,236],"287":[3,1,160],"288":[3,1,192],"289":[3,1,163],"290":[4,1,287],"291":[3,1,477],"292":[5,1,480],"293":[3,1,485],"294":[3,1,146],"295":[3,1,146],"296":[3,1,151],"297":[4,1,255],"298":[3,1,269],"299":[3,1,270],"300":[3,1,531],"301":[3,1,283],"302":[4,1,209],"303":[4,1,165],"304":[5,1,182],"305":[4,1,176],"306":[5,1,191],"307":[4,1,144],"308":[5,1,185],"309":[4,1,183],"310":[4,1,184],"311":[5,1,185],"312":[5,1,173],"313":[5,1,173]},"averageFieldLength":[2.6624203821656067,3.114649681528662,82.87579617834393],"storedFields":{"0":{"href":"/overview#reth","html":"<div role=\"doc-subtitle\">Documentation for Reth users and developers</div></header>\n<p>Reth (short for Rust Ethereum, <a href=\"https://twitter.com/kelvinfichter/status/1597653609411268608\">pronunciation</a>) is an <strong>Ethereum full node implementation that is focused on being user-friendly, highly modular, as well as being fast and efficient.</strong></p>\n<p>Reth is production ready, and suitable for usage in mission-critical environments such as staking or high-uptime services. We also actively recommend professional node operators to switch to Reth in production for performance and cost reasons in use cases where high performance with great margins is required such as RPC, MEV, Indexing, Simulations, and P2P activities.</p>\n<p><img src=\"https://raw.githubusercontent.com/paradigmxyz/reth/main/assets/reth-prod.png\" alt=\"Reth\"/></p>\n","isPage":true,"text":"Documentation for Reth users and developers\nReth (short for Rust Ethereum, pronunciation) is an Ethereum full node implementation that is focused on being user-friendly, highly modular, as well as being fast and efficient.\nReth is production ready, and suitable for usage in mission-critical environments such as staking or high-uptime services. We also actively recommend professional node operators to switch to Reth in production for performance and cost reasons in use cases where high performance with great margins is required such as RPC, MEV, Indexing, Simulations, and P2P activities.\n\n","title":"Reth","titles":[]},"1":{"href":"/overview#what-is-this-about","html":"\n<p><a href=\"https://github.com/paradigmxyz/reth/\">Reth</a> is an execution layer (EL) implementation that is compatible with all Ethereum consensus layer (CL) implementations that support the <a href=\"https://github.com/ethereum/execution-apis/tree/59e3a719021f48c1ef5653840e3ea5750e6af693/src/engine\">Engine API</a>.</p>\n<p>It is originally built and driven forward by <a href=\"https://paradigm.xyz/\">Paradigm</a>, and is licensed under the Apache and MIT licenses.</p>\n<p>As a full Ethereum node, Reth allows users to connect to the Ethereum network and interact with the Ethereum blockchain.</p>\n<p>This includes sending and receiving transactions, querying logs and traces, as well as accessing and interacting with smart contracts.</p>\n<p>Building a successful Ethereum node requires creating a high-quality implementation that is both secure and efficient, as well as being easy to use on consumer hardware. It also requires building a strong community of contributors who can help support and improve the software.</p>\n","isPage":false,"text":"\nReth is an execution layer (EL) implementation that is compatible with all Ethereum consensus layer (CL) implementations that support the Engine API.\nIt is originally built and driven forward by Paradigm, and is licensed under the Apache and MIT licenses.\nAs a full Ethereum node, Reth allows users to connect to the Ethereum network and interact with the Ethereum blockchain.\nThis includes sending and receiving transactions, querying logs and traces, as well as accessing and interacting with smart contracts.\nBuilding a successful Ethereum node requires creating a high-quality implementation that is both secure and efficient, as well as being easy to use on consumer hardware. It also requires building a strong community of contributors who can help support and improve the software.\n","title":"What is this about?","titles":["Reth"]},"2":{"href":"/overview#what-are-the-goals-of-reth","html":"\n<strong>1. Modularity</strong>\n<p>Every component of Reth is built to be used as a library: well-tested, heavily documented and benchmarked. We envision that developers will import the node&#x27;s crates, mix and match, and innovate on top of them.</p>\n<p>Examples of such usage include, but are not limited to, spinning up standalone P2P networks, talking directly to a node&#x27;s database, or &quot;unbundling&quot; the node into the components you need.</p>\n<p>To achieve that, we are licensing Reth under the Apache/MIT permissive license.</p>\n<strong>2. Performance</strong>\n<p>Reth aims to be fast, so we used Rust and the <a href=\"https://erigon.substack.com/p/erigon-stage-sync-and-control-flows\">Erigon staged-sync</a> node architecture.</p>\n<p>We also use our Ethereum libraries (including <a href=\"https://github.com/alloy-rs/alloy/\">Alloy</a> and <a href=\"https://github.com/bluealloy/revm/\">revm</a>) which we’ve battle-tested and optimized via <a href=\"https://github.com/foundry-rs/foundry/\">Foundry</a>.</p>\n<strong>3. Free for anyone to use any way they want</strong>\n<p>Reth is free open-source software, built for the community, by the community.</p>\n<p>By licensing the software under the Apache/MIT license, we want developers to use it without being bound by business licenses, or having to think about the implications of GPL-like licenses.</p>\n<strong>4. Client Diversity</strong>\n<p>The Ethereum protocol becomes more antifragile when no node implementation dominates. This ensures that if there&#x27;s a software bug, the network does not finalize a bad block. By building a new client, we hope to contribute to Ethereum&#x27;s antifragility.</p>\n<strong>5. Used by a wide demographic</strong>\n<p>We want to solve for node operators that care about fast historical queries, but also for hobbyists who cannot operate on large hardware.</p>\n<p>We also want to support teams and individuals who want both sync from genesis and via &quot;fast sync&quot;.</p>\n<p>We envision that Reth will be configurable enough for the tradeoffs that each team faces.</p>\n","isPage":false,"text":"\n1. Modularity\nEvery component of Reth is built to be used as a library: well-tested, heavily documented and benchmarked. We envision that developers will import the node&#x27;s crates, mix and match, and innovate on top of them.\nExamples of such usage include, but are not limited to, spinning up standalone P2P networks, talking directly to a node&#x27;s database, or &quot;unbundling&quot; the node into the components you need.\nTo achieve that, we are licensing Reth under the Apache/MIT permissive license.\n2. Performance\nReth aims to be fast, so we used Rust and the Erigon staged-sync node architecture.\nWe also use our Ethereum libraries (including Alloy and revm) which we’ve battle-tested and optimized via Foundry.\n3. Free for anyone to use any way they want\nReth is free open-source software, built for the community, by the community.\nBy licensing the software under the Apache/MIT license, we want developers to use it without being bound by business licenses, or having to think about the implications of GPL-like licenses.\n4. Client Diversity\nThe Ethereum protocol becomes more antifragile when no node implementation dominates. This ensures that if there&#x27;s a software bug, the network does not finalize a bad block. By building a new client, we hope to contribute to Ethereum&#x27;s antifragility.\n5. Used by a wide demographic\nWe want to solve for node operators that care about fast historical queries, but also for hobbyists who cannot operate on large hardware.\nWe also want to support teams and individuals who want both sync from genesis and via &quot;fast sync&quot;.\nWe envision that Reth will be configurable enough for the tradeoffs that each team faces.\n","title":"What are the goals of Reth?","titles":["Reth"]},"3":{"href":"/overview#who-is-this-for","html":"\n<p>Reth is a new Ethereum full node that allows users to sync and interact with the entire blockchain, including its historical state if in archive mode.</p>\n<ul>\n<li>Full node: It can be used as a full node, which stores and processes the entire blockchain, validates blocks and transactions, and participates in the consensus process.</li>\n<li>Archive node: It can also be used as an archive node, which stores the entire history of the blockchain and is useful for applications that need access to historical data.</li>\n</ul>\n<p>As a data engineer/analyst, or as a data indexer, you&#x27;ll want to use Archive mode. For all other use cases where historical access is not needed, you can use Full mode.</p>\n","isPage":false,"text":"\nReth is a new Ethereum full node that allows users to sync and interact with the entire blockchain, including its historical state if in archive mode.\n\nFull node: It can be used as a full node, which stores and processes the entire blockchain, validates blocks and transactions, and participates in the consensus process.\nArchive node: It can also be used as an archive node, which stores the entire history of the blockchain and is useful for applications that need access to historical data.\n\nAs a data engineer/analyst, or as a data indexer, you&#x27;ll want to use Archive mode. For all other use cases where historical access is not needed, you can use Full mode.\n","title":"Who is this for?","titles":["Reth"]},"4":{"href":"/overview#is-this-secure","html":"\n<p>Reth implements the specification of Ethereum as defined in the <a href=\"https://github.com/ethereum/execution-specs/\">ethereum/execution-specs</a> repository. To make sure the node is built securely, we run the following tests:</p>\n<ol>\n<li>EVM state tests are run on every <a href=\"https://github.com/bluealloy/revm/blob/main/.github/workflows/ethereum-tests.yml\">Revm Pull Request</a></li>\n<li>Hive tests are <a href=\"https://github.com/paradigmxyz/reth/blob/main/.github/workflows/hive.yml\">run every 24 hours</a> in the main Reth repository.</li>\n<li>We regularly resync multiple nodes from scratch.</li>\n<li>We operate multiple nodes at the tip of the Ethereum mainnet and various testnets.</li>\n<li>We extensively unit test, fuzz test and document all our code, while also restricting PRs with aggressive lint rules.</li>\n</ol>\n<p>We have completed an audit of the <a href=\"https://github.com/paradigmxyz/reth/releases/tag/v1.0.0-rc.2\">Reth v1.0.0-rc.2</a> with <a href=\"https://sigmaprime.io/\">Sigma Prime</a>, the developers of <a href=\"https://github.com/sigp/lighthouse\">Lighthouse</a>, the Rust Consensus Layer implementation. Find it <a href=\"https://github.com/paradigmxyz/reth/blob/main/audit/sigma_prime_audit_v2.pdf\">here</a>.</p>\n<p><a href=\"https://github.com/bluealloy/revm\">Revm</a> (the EVM used in Reth) underwent an audit with <a href=\"https://twitter.com/guidovranken\">Guido Vranken</a> (#1 <a href=\"https://ethereum.org/en/bug-bounty\">Ethereum Bug Bounty</a>). We will publish the results soon.</p>\n","isPage":false,"text":"\nReth implements the specification of Ethereum as defined in the ethereum/execution-specs repository. To make sure the node is built securely, we run the following tests:\n\nEVM state tests are run on every Revm Pull Request\nHive tests are run every 24 hours in the main Reth repository.\nWe regularly resync multiple nodes from scratch.\nWe operate multiple nodes at the tip of the Ethereum mainnet and various testnets.\nWe extensively unit test, fuzz test and document all our code, while also restricting PRs with aggressive lint rules.\n\nWe have completed an audit of the Reth v1.0.0-rc.2 with Sigma Prime, the developers of Lighthouse, the Rust Consensus Layer implementation. Find it here.\nRevm (the EVM used in Reth) underwent an audit with Guido Vranken (#1 Ethereum Bug Bounty). We will publish the results soon.\n","title":"Is this secure?","titles":["Reth"]},"5":{"href":"/overview#sections","html":"\n<p>Here are some useful sections to jump to:</p>\n<ul>\n<li>Install Reth by following the <a href=\"/installation/overview\">guide</a>.</li>\n<li>Sync your node on any <a href=\"./run/run-a-node\">official network</a>.</li>\n<li>View <a href=\"./run/observability\">statistics and metrics</a> about your node.</li>\n<li>Query the <a href=\"./jsonrpc/intro\">JSON-RPC</a> using Foundry&#x27;s <code>cast</code> or <code>curl</code>.</li>\n<li>Set up your <a href=\"./developers/contribute\">development environment and contribute</a>!</li>\n</ul>\n<blockquote>\n<p>📖 <strong>About this book</strong></p>\n<p>The book is continuously rendered <a href=\"https://paradigmxyz.github.io/reth/\">here</a>!\nYou can contribute to this book on <a href=\"https://github.com/paradigmxyz/reth/tree/main/book\">GitHub</a>.</p>\n</blockquote>","isPage":false,"text":"\nHere are some useful sections to jump to:\n\nInstall Reth by following the guide.\nSync your node on any official network.\nView statistics and metrics about your node.\nQuery the JSON-RPC using Foundry&#x27;s cast or curl.\nSet up your development environment and contribute!\n\n\n📖 About this book\nThe book is continuously rendered here!\nYou can contribute to this book on GitHub.\n","title":"Sections","titles":["Reth"]},"6":{"href":"/cli/op-reth#op-reth","html":"</header>\n<p>Additional op-reth commands.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> op-reth</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Usage:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> op-reth</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [OPTIONS] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">COMMAND</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Commands:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">  import-op</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">           Imports</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> the</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> Bedrock</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> datadir</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> blocks</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> a</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> file</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">  import-receipts-op</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  Imports</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> the</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> Bedrock</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> datadir</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> receipts</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> a</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> file</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Options:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">  -h,</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Print</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> help</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (see </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">a</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> summary</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> with</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;-h&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">  -V,</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --version</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Print</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> version</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Logging:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --log.stdout.format</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">FORMA</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">T</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          The</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> format</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> use</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logs</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> written</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stdout</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          [default: terminal]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Possible</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> values:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> json:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">     Represents</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> JSON</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> formatting</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logs.</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> This</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> format</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> outputs</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> records</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> as</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> JSON</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> objects,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> making</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> it</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> suitable</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> structured</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logging</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> log-fmt:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  Represents</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logfmt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (key=value) formatting </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> terminal:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> Represents</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> terminal-friendly</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> formatting</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logs</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --log.stdout.filter</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">FILTE</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">R</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          The</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> filter</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> use</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logs</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> written</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stdout</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          [default: ]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --log.file.format</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">FORMA</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">T</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          The</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> format</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> use</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logs</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> written</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> the</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> file</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          [default: terminal]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Possible</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> values:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> json:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">     Represents</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> JSON</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> formatting</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logs.</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> This</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> format</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> outputs</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> records</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> as</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> JSON</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> objects,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> making</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> it</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> suitable</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> structured</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logging</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> log-fmt:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  Represents</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logfmt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (key=value) formatting </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> terminal:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> Represents</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> terminal-friendly</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> formatting</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logs</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --log.file.filter</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">FILTE</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">R</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          The</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> filter</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> use</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logs</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> written</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> the</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> file</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          [default: debug]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --log.file.directory</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">PAT</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">H</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          The</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> path</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> put</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> files</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> in</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          [default: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">CACHE_DIR</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">/logs]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --log.file.max-size</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">SIZ</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">E</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          The</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> maximum</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> size</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (in </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">MB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) of one log file</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          [default: 200]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --log.file.max-files</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">COUN</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">T</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          The</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> maximum</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> amount</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> of</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> files</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> that</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> will</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> be</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stored.</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> If</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> set</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 0,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> background</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> file</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logging</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> is</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> disabled</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          [default: 5]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --log.journald</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Write</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logs</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> journald</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --log.journald.filter</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">FILTE</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">R</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          The</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> filter</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> use</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logs</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> written</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> journald</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          [default: error]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --color</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">COLO</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">R</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Sets</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> whether</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> or</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> not</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> the</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> formatter</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> emits</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ANSI</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> terminal</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> escape</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> codes</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> colors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> and</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> other</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> text</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> formatting</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          [default: always]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Possible</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> values:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> always:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> Colors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> on</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> auto:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">   Colors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> on</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> never:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  Colors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> off</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Display:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">  -v,</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --verbosity...</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Set</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> the</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> minimum</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> level.</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      Errors</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -vv</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">     Warnings</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -vvv</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    Info</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -vvvv</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">   Debug</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          -vvvvv</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  Traces</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (warning: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">very</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> verbose!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">  -q,</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --quiet</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Silence</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> all</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> output</span></span></code></pre>","isPage":true,"text":"\nAdditional op-reth commands.\n$ op-reth --help\nUsage: op-reth [OPTIONS] &lt;COMMAND&gt;\n \nCommands:\n  import-op           Imports the Bedrock datadir blocks from a file\n  import-receipts-op  Imports the Bedrock datadir receipts from a file\n \nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n \n  -V, --version\n          Print version\n \nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n \n          [default: terminal]\n \n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n \n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n \n          [default: ]\n \n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n \n          [default: terminal]\n \n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n \n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n \n          [default: debug]\n \n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n \n          [default: &lt;CACHE_DIR&gt;/logs]\n \n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n \n          [default: 200]\n \n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n \n          [default: 5]\n \n      --log.journald\n          Write logs to journald\n \n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n \n          [default: error]\n \n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n \n          [default: always]\n \n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n \nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n \n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n \n  -q, --quiet\n          Silence all log output","title":"op-reth","titles":[]},"7":{"href":"/cli/reth#reth","html":"</header>\n<p>Reth</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth [OPTIONS] &lt;COMMAND&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Commands:</span></span>\n<span class=\"line\"><span>  node          Start the node</span></span>\n<span class=\"line\"><span>  init          Initialize the database from a genesis file</span></span>\n<span class=\"line\"><span>  init-state    Initialize the database from a state dump file</span></span>\n<span class=\"line\"><span>  import        This syncs RLP encoded blocks from a file</span></span>\n<span class=\"line\"><span>  import-era    This syncs ERA encoded blocks from a directory</span></span>\n<span class=\"line\"><span>  dump-genesis  Dumps genesis block JSON configuration to stdout</span></span>\n<span class=\"line\"><span>  db            Database debugging utilities</span></span>\n<span class=\"line\"><span>  download      Download public node snapshots</span></span>\n<span class=\"line\"><span>  stage         Manipulate individual stages</span></span>\n<span class=\"line\"><span>  p2p           P2P Debugging utilities</span></span>\n<span class=\"line\"><span>  config        Write config to stdout</span></span>\n<span class=\"line\"><span>  debug         Various debug routines</span></span>\n<span class=\"line\"><span>  recover       Scripts for node recovery</span></span>\n<span class=\"line\"><span>  prune         Prune according to the configuration without any limits</span></span>\n<span class=\"line\"><span>  help          Print this message or the help of the given subcommand(s)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -V, --version</span></span>\n<span class=\"line\"><span>          Print version</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nReth\n$ reth --help\nUsage: reth [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  node          Start the node\n  init          Initialize the database from a genesis file\n  init-state    Initialize the database from a state dump file\n  import        This syncs RLP encoded blocks from a file\n  import-era    This syncs ERA encoded blocks from a directory\n  dump-genesis  Dumps genesis block JSON configuration to stdout\n  db            Database debugging utilities\n  download      Download public node snapshots\n  stage         Manipulate individual stages\n  p2p           P2P Debugging utilities\n  config        Write config to stdout\n  debug         Various debug routines\n  recover       Scripts for node recovery\n  prune         Prune according to the configuration without any limits\n  help          Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\n  -V, --version\n          Print version\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth","titles":[]},"8":{"href":"/developers/contribute#contribute","html":"</header>\n\n<p>Reth has docs specifically geared for developers and contributors, including documentation on the structure and architecture of reth, the general workflow we employ, and other useful tips.</p>\n<p>You can find these docs <a href=\"https://github.com/paradigmxyz/reth/tree/main/docs\">here</a>.</p>\n<p>Check out our contributing guidelines <a href=\"https://github.com/paradigmxyz/reth/blob/main/CONTRIBUTING\">here</a>.</p>","isPage":true,"text":"\n\nReth has docs specifically geared for developers and contributors, including documentation on the structure and architecture of reth, the general workflow we employ, and other useful tips.\nYou can find these docs here.\nCheck out our contributing guidelines here.","title":"Contribute","titles":[]},"9":{"href":"/developers/developers#developers","html":"</header>\n<p>Reth is composed of several crates that can be used in standalone projects. If you are interested in using one or more of the crates, you can get an overview of them in the <a href=\"https://github.com/paradigmxyz/reth/tree/main/docs\">developer docs</a>, or take a look at the <a href=\"https://paradigmxyz.github.io/reth/docs\">crate docs</a>.</p>","isPage":true,"text":"\nReth is composed of several crates that can be used in standalone projects. If you are interested in using one or more of the crates, you can get an overview of them in the developer docs, or take a look at the crate docs.","title":"Developers","titles":[]},"10":{"href":"/developers/profiling#profiling-reth","html":"</header>\n","isPage":true,"text":"\n","title":"Profiling reth","titles":[]},"11":{"href":"/developers/profiling#table-of-contents","html":"\n<ul>\n<li><a href=\"#memory-profiling\">Memory profiling</a>\n<ul>\n<li><a href=\"#jemalloc\">Jemalloc</a></li>\n<li><a href=\"#monitoring-memory-usage\">Monitoring memory usage</a></li>\n<li><a href=\"#limiting-process-memory\">Limiting process memory</a></li>\n<li><a href=\"#understanding-allocation-with-jeprof\">Understanding allocation with jeprof</a></li>\n</ul>\n</li>\n</ul>\n","isPage":false,"text":"\n\nMemory profiling\n\nJemalloc\nMonitoring memory usage\nLimiting process memory\nUnderstanding allocation with jeprof\n\n\n\n","title":"Table of Contents","titles":["Profiling reth",null,null]},"12":{"href":"/developers/profiling#memory-profiling","html":"\n<p>When a program consumes all of the system&#x27;s available memory (and swap, if any), the OOM killer starts killing processes that are taking up the most memory, until the system has\nmemory available again. <a href=\"https://www.kernel.org/doc/gorman/html/understand/understand016.html\">See kernel.org for a great (although outdated) introduction to out-of-memory management.</a>.\nReth distributes to many different hardware targets, some with less memory than others. As a result, sometimes bugs can cause memory leaks or out-of-memory crashes for <em>some</em> users, but not others.\nReth is also a complex program, with many moving pieces, and it can be difficult to know where to start when debugging an OOM or other memory leak.\nUnderstanding how to profile memory usage is an extremely valuable skill when faced with this type of problem, and can quickly help shed light on the root cause of a memory leak.</p>\n<p>In this tutorial, we will be reviewing:</p>\n<ul>\n<li>How to monitor reth&#x27;s memory usage,</li>\n<li>How to emulate a low-memory environment to lab-reproduce OOM crashes,</li>\n<li>How to enable <code>jemalloc</code> and its built-in memory profiling, and</li>\n<li>How to use <code>jeprof</code> to interpret heap profiles and identify potential root causes for a memory leak.</li>\n</ul>\n","isPage":false,"text":"\nWhen a program consumes all of the system&#x27;s available memory (and swap, if any), the OOM killer starts killing processes that are taking up the most memory, until the system has\nmemory available again. See kernel.org for a great (although outdated) introduction to out-of-memory management..\nReth distributes to many different hardware targets, some with less memory than others. As a result, sometimes bugs can cause memory leaks or out-of-memory crashes for some users, but not others.\nReth is also a complex program, with many moving pieces, and it can be difficult to know where to start when debugging an OOM or other memory leak.\nUnderstanding how to profile memory usage is an extremely valuable skill when faced with this type of problem, and can quickly help shed light on the root cause of a memory leak.\nIn this tutorial, we will be reviewing:\n\nHow to monitor reth&#x27;s memory usage,\nHow to emulate a low-memory environment to lab-reproduce OOM crashes,\nHow to enable jemalloc and its built-in memory profiling, and\nHow to use jeprof to interpret heap profiles and identify potential root causes for a memory leak.\n\n","title":"Memory profiling","titles":["Profiling reth"]},"13":{"href":"/developers/profiling#jemalloc","html":"\n<p><a href=\"https://jemalloc.net/\">Jemalloc</a> is a general-purpose allocator that is used <a href=\"https://engineering.fb.com/2011/01/03/core-data/scalable-memory-allocation-using-jemalloc/\">across the industry in production</a>, well known for its performance benefits, predictability, and profiling capabilities.\nWe&#x27;ve seen significant performance benefits in reth when using jemalloc, but will be primarily focusing on its profiling capabilities.\nJemalloc also provides tools for analyzing and visualizing its allocation profiles it generates, notably <code>jeprof</code>.</p>\n","isPage":false,"text":"\nJemalloc is a general-purpose allocator that is used across the industry in production, well known for its performance benefits, predictability, and profiling capabilities.\nWe&#x27;ve seen significant performance benefits in reth when using jemalloc, but will be primarily focusing on its profiling capabilities.\nJemalloc also provides tools for analyzing and visualizing its allocation profiles it generates, notably jeprof.\n","title":"Jemalloc","titles":["Profiling reth","Memory profiling"]},"14":{"href":"/developers/profiling#enabling-jemalloc-in-reth","html":"\n<p>Reth includes a <code>jemalloc</code> feature to explicitly use jemalloc instead of the system allocator:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">cargo build --features jemalloc</span></span></code></pre>\n<p>While the <code>jemalloc</code> feature does enable jemalloc, reth has an additional feature, <code>profiling</code>, that must be used to enable heap profiling. This feature implicitly enables the <code>jemalloc</code>\nfeature as well:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">cargo build --features jemalloc-prof</span></span></code></pre>\n<p>When performing a longer-running or performance-sensitive task with reth, such as a sync test or load benchmark, it&#x27;s usually recommended to use the <code>maxperf</code> profile. However, the <code>maxperf</code>\nprofile does not enable debug symbols, which are required for tools like <code>perf</code> and <code>jemalloc</code> to produce results that a human can interpret. Reth includes a performance profile with debug symbols called <code>profiling</code>. To compile reth with debug symbols, jemalloc, profiling, and a performance profile:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">cargo build --features jemalloc-prof --profile profiling</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;font-weight:bold;--shiki-dark:#6CB6FF;--shiki-dark-font-weight:bold\"># May improve performance even more</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">RUSTFLAGS=&quot;-C target-cpu=native&quot; cargo build --features jemalloc-prof --profile profiling</span></span></code></pre>\n","isPage":false,"text":"\nReth includes a jemalloc feature to explicitly use jemalloc instead of the system allocator:\ncargo build --features jemalloc\nWhile the jemalloc feature does enable jemalloc, reth has an additional feature, profiling, that must be used to enable heap profiling. This feature implicitly enables the jemalloc\nfeature as well:\ncargo build --features jemalloc-prof\nWhen performing a longer-running or performance-sensitive task with reth, such as a sync test or load benchmark, it&#x27;s usually recommended to use the maxperf profile. However, the maxperf\nprofile does not enable debug symbols, which are required for tools like perf and jemalloc to produce results that a human can interpret. Reth includes a performance profile with debug symbols called profiling. To compile reth with debug symbols, jemalloc, profiling, and a performance profile:\ncargo build --features jemalloc-prof --profile profiling\n \n# May improve performance even more\nRUSTFLAGS=&quot;-C target-cpu=native&quot; cargo build --features jemalloc-prof --profile profiling\n","title":"Enabling jemalloc in reth","titles":["Profiling reth","Memory profiling","Jemalloc"]},"15":{"href":"/developers/profiling#monitoring-memory-usage","html":"\n<p>Reth&#x27;s dashboard has a few metrics that are important when monitoring memory usage. The <strong>Jemalloc memory</strong> graph shows reth&#x27;s memory usage. The <em>allocated</em> label shows the memory used by the reth process which cannot be reclaimed unless reth frees that memory. This metric exceeding the available system memory would cause reth to be killed by the OOM killer.</p>\n<img width=\"749\" alt=\"Jemalloc memory\" src=\"https://github.com/paradigmxyz/reth/assets/6798349/2653c5a2-bd7c-46a6-a593-23809389628e\"/>\n<p>Some of reth&#x27;s internal components also have metrics for the memory usage of certain data structures, usually data structures that are likely to contain many elements or may consume a lot of memory at peak load.</p>\n<p><strong>The bodies downloader buffer</strong>:</p>\n<img width=\"749\" alt=\"The bodies downloader buffer graph\" src=\"https://github.com/paradigmxyz/reth/assets/6798349/75383724-24ae-4f4f-98a9-72d01731a5f9\"/>\n<p><strong>The blockchain tree block buffer</strong>:</p>\n<img width=\"749\" alt=\"The blockchain tree block buffer graph\" src=\"https://github.com/paradigmxyz/reth/assets/6798349/7162c6d4-ed18-48c1-a327-50a245dabc95\"/>\n<p><strong>The transaction pool subpools</strong>:</p>\n<img width=\"749\" alt=\"The transaction pool subpool size graph\" src=\"https://github.com/paradigmxyz/reth/assets/6798349/c5066fd6-7ff7-4e62-9226-89327c7a802c\"/>\n<p>One of these metrics growing beyond, 2GB for example, is likely a bug and could lead to an OOM on a low memory machine. It isn&#x27;t likely for that to happen frequently, so in the best case these metrics can be used to\nrule out these components from having a leak, if an OOM is occurring.</p>\n","isPage":false,"text":"\nReth&#x27;s dashboard has a few metrics that are important when monitoring memory usage. The Jemalloc memory graph shows reth&#x27;s memory usage. The allocated label shows the memory used by the reth process which cannot be reclaimed unless reth frees that memory. This metric exceeding the available system memory would cause reth to be killed by the OOM killer.\n\nSome of reth&#x27;s internal components also have metrics for the memory usage of certain data structures, usually data structures that are likely to contain many elements or may consume a lot of memory at peak load.\nThe bodies downloader buffer:\n\nThe blockchain tree block buffer:\n\nThe transaction pool subpools:\n\nOne of these metrics growing beyond, 2GB for example, is likely a bug and could lead to an OOM on a low memory machine. It isn&#x27;t likely for that to happen frequently, so in the best case these metrics can be used to\nrule out these components from having a leak, if an OOM is occurring.\n","title":"Monitoring memory usage","titles":["Profiling reth","Memory profiling"]},"16":{"href":"/developers/profiling#limiting-process-memory","html":"\n<p>Memory leaks that cause OOMs can be difficult to trigger sometimes, and highly depend on the testing hardware. A testing machine with 128GB of RAM is not going to encounter OOMs caused by\nmemory spikes or leaks as often as a machine with only 8GB of RAM. Development machines are powerful for a reason, so artificially limiting memory usage is often the best way to replicate a\nuser&#x27;s hardware. This can help developers debug issues that only occur on devices with limited hardware. <code>cgroups</code> is a tool that allows developers to limit the memory usage of a process,\nmaking it extremely useful to developers in understanding how their application performs in low-memory environments.</p>\n<p>See the <a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup.git/tree/Documentation/admin-guide/cgroup-v2.rst\">canonical documentation for cgroups</a> for more information.</p>\n","isPage":false,"text":"\nMemory leaks that cause OOMs can be difficult to trigger sometimes, and highly depend on the testing hardware. A testing machine with 128GB of RAM is not going to encounter OOMs caused by\nmemory spikes or leaks as often as a machine with only 8GB of RAM. Development machines are powerful for a reason, so artificially limiting memory usage is often the best way to replicate a\nuser&#x27;s hardware. This can help developers debug issues that only occur on devices with limited hardware. cgroups is a tool that allows developers to limit the memory usage of a process,\nmaking it extremely useful to developers in understanding how their application performs in low-memory environments.\nSee the canonical documentation for cgroups for more information.\n","title":"Limiting process memory","titles":["Profiling reth","Memory profiling"]},"17":{"href":"/developers/profiling#how-to-use-cgroups-to-limit-process-memory","html":"\n<p>In order to use cgroups to limit process memory, sometimes it must be explicitly enabled as a kernel parameter. For example, the following line is sometimes necessary to enable cgroup memory limits on\nUbuntu machines that use GRUB:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">GRUB_CMDLINE_LINUX_DEFAULT=&quot;cgroup_enable=memory&quot;</span></span></code></pre>\n<p>Then, create a named cgroup:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sudo cgcreate -t $USER:$USER -a $USER:$USER -g memory:rethMemory</span></span></code></pre>\n<p>The memory limit for the named cgroup can be set in <code>sys/fs/cgroup/memory</code>. This for example sets an 8 gigabyte memory limit:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">echo 8G &gt; /sys/fs/cgroup/memory/rethMemory/memory.limit_in_bytes</span></span></code></pre>\n<p>If the intention of setting up the cgroup is to strictly limit memory and simulate OOMs, a high amount of swap may prevent those OOMs from happening.\nTo check swap, use <code>free -m</code>:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ubuntu@bench-box:~/reth$ free -m</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">              total        used        free      shared  buff/cache   available</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">Mem:         257668       10695      218760          12       28213      244761</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">Swap:          8191         159        8032</span></span></code></pre>\n<p>If this is a problem, it may be worth either adjusting the system swappiness or disabling swap overall.</p>\n<p>Finally, <code>cgexec</code> can be used to run reth under the cgroup:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">cgexec -g memory:rethMemory reth node</span></span></code></pre>\n","isPage":false,"text":"\nIn order to use cgroups to limit process memory, sometimes it must be explicitly enabled as a kernel parameter. For example, the following line is sometimes necessary to enable cgroup memory limits on\nUbuntu machines that use GRUB:\nGRUB_CMDLINE_LINUX_DEFAULT=&quot;cgroup_enable=memory&quot;\nThen, create a named cgroup:\nsudo cgcreate -t $USER:$USER -a $USER:$USER -g memory:rethMemory\nThe memory limit for the named cgroup can be set in sys/fs/cgroup/memory. This for example sets an 8 gigabyte memory limit:\necho 8G &gt; /sys/fs/cgroup/memory/rethMemory/memory.limit_in_bytes\nIf the intention of setting up the cgroup is to strictly limit memory and simulate OOMs, a high amount of swap may prevent those OOMs from happening.\nTo check swap, use free -m:\nubuntu@bench-box:~/reth$ free -m\n              total        used        free      shared  buff/cache   available\nMem:         257668       10695      218760          12       28213      244761\nSwap:          8191         159        8032\nIf this is a problem, it may be worth either adjusting the system swappiness or disabling swap overall.\nFinally, cgexec can be used to run reth under the cgroup:\ncgexec -g memory:rethMemory reth node\n","title":"How to use cgroups to limit process memory","titles":["Profiling reth","Memory profiling"]},"18":{"href":"/developers/profiling#understanding-allocation-with-jeprof","html":"\n<p>When reth is built with the <code>jemalloc-prof</code> feature and debug symbols, the profiling still needs to be configured and enabled at runtime. This is done with the <code>_RJEM_MALLOC_CONF</code> environment variable. Take the following\ncommand to launch reth with jemalloc profiling enabled:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">_RJEM_MALLOC_CONF=prof:true,lg_prof_interval:32,lg_prof_sample:19 reth node</span></span></code></pre>\n<p>If reth is not built properly, you will see this when you try to run reth:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">~/p/reth (dan/managing-memory)&gt; _RJEM_MALLOC_CONF=prof:true,lg_prof_interval:32,lg_prof_sample:19 reth node</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">jemalloc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;: Invalid conf pair: prof:true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">jemalloc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;: Invalid conf pair: lg_prof_interval:32</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">jemalloc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;: Invalid conf pair: lg_prof_sample:19</span></span></code></pre>\n<p>If this happens, jemalloc likely needs to be rebuilt with the <code>jemalloc-prof</code> feature enabled.</p>\n<p>If everything is working, this will output <code>jeprof.*.heap</code> files while reth is running.\n<a href=\"https://jemalloc.net/jemalloc.3.html#opt.abort\">The jemalloc website</a> has a helpful overview of the options available, for example <code>lg_prof_interval</code>, <code>lg_prof_sample</code>, <code>prof_leak</code>, and <code>prof_final</code>.</p>\n<p>Now that we have the heap snapshots, we can analyze them using <code>jeprof</code>. An example of jeprof usage and output can be seen on the jemalloc github repository: <a href=\"https://github.com/jemalloc/jemalloc/wiki/Use-Case:-Leak-Checking\">https://github.com/jemalloc/jemalloc/wiki/Use-Case:-Leak-Checking</a></p>","isPage":false,"text":"\nWhen reth is built with the jemalloc-prof feature and debug symbols, the profiling still needs to be configured and enabled at runtime. This is done with the _RJEM_MALLOC_CONF environment variable. Take the following\ncommand to launch reth with jemalloc profiling enabled:\n_RJEM_MALLOC_CONF=prof:true,lg_prof_interval:32,lg_prof_sample:19 reth node\nIf reth is not built properly, you will see this when you try to run reth:\n~/p/reth (dan/managing-memory)&gt; _RJEM_MALLOC_CONF=prof:true,lg_prof_interval:32,lg_prof_sample:19 reth node\n&lt;jemalloc&gt;: Invalid conf pair: prof:true\n&lt;jemalloc&gt;: Invalid conf pair: lg_prof_interval:32\n&lt;jemalloc&gt;: Invalid conf pair: lg_prof_sample:19\nIf this happens, jemalloc likely needs to be rebuilt with the jemalloc-prof feature enabled.\nIf everything is working, this will output jeprof.*.heap files while reth is running.\nThe jemalloc website has a helpful overview of the options available, for example lg_prof_interval, lg_prof_sample, prof_leak, and prof_final.\nNow that we have the heap snapshots, we can analyze them using jeprof. An example of jeprof usage and output can be seen on the jemalloc github repository: https://github.com/jemalloc/jemalloc/wiki/Use-Case:-Leak-Checking","title":"Understanding allocation with jeprof","titles":["Profiling reth","Memory profiling"]},"19":{"href":"/installation/binaries#binaries","html":"</header>\n<p><a href=\"https://github.com/paradigmxyz/reth/releases\"><strong>Archives of precompiled binaries of reth are available for Windows, macOS and Linux.</strong></a> They are static executables. Users of platforms not explicitly listed below should download one of these archives.</p>\n<p>If you use <strong>macOS Homebrew</strong> or <strong>Linuxbrew</strong>, you can install Reth from Paradigm&#x27;s homebrew tap:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>brew install paradigmxyz/brew/reth</span></span></code></pre>\n<p>If you use <strong>Arch Linux</strong> you can install stable Reth from the AUR using an <a href=\"https://wiki.archlinux.org/title/AUR_helpers\">AUR helper</a> (<a href=\"https://github.com/Morganamilo/paru\">paru</a> as an example here):</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>paru -S reth # Stable</span></span>\n<span class=\"line\"><span>paru -S reth-git # Unstable (git)</span></span></code></pre>\n","isPage":true,"text":"\nArchives of precompiled binaries of reth are available for Windows, macOS and Linux. They are static executables. Users of platforms not explicitly listed below should download one of these archives.\nIf you use macOS Homebrew or Linuxbrew, you can install Reth from Paradigm&#x27;s homebrew tap:\nbrew install paradigmxyz/brew/reth\nIf you use Arch Linux you can install stable Reth from the AUR using an AUR helper (paru as an example here):\nparu -S reth # Stable\nparu -S reth-git # Unstable (git)\n","title":"Binaries","titles":[]},"20":{"href":"/installation/binaries#signature-verification","html":"\n<p>You can verify the integrity of a Reth release by checking the signature using GPG.</p>\n<p>The release signing key can be fetched from the Ubuntu keyserver using the following command:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">gpg</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --keyserver</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> keyserver.ubuntu.com</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --recv-keys</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 50FB7CC55B2E8AFA59FE03B7AA5ED56A7FBF253E</span></span></code></pre>\n<p>A copy of the key is also included <a href=\"#release-signing-key\">below</a>. Once you have\nimported the key you can verify a release signature (<code>.asc</code> file) using a\ncommand like this:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">gpg</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --verify</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth-v0.2.0-beta.9-x86_64-unknown-linux-gnu.tar.gz.asc</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth-v0.1.0-beta.9-x86_64-unknown-linux-gnu.tar.gz</span></span></code></pre>\n<p>Replace the filenames by those corresponding to the downloaded Reth release.</p>\n","isPage":false,"text":"\nYou can verify the integrity of a Reth release by checking the signature using GPG.\nThe release signing key can be fetched from the Ubuntu keyserver using the following command:\ngpg --keyserver keyserver.ubuntu.com --recv-keys 50FB7CC55B2E8AFA59FE03B7AA5ED56A7FBF253E\nA copy of the key is also included below. Once you have\nimported the key you can verify a release signature (.asc file) using a\ncommand like this:\ngpg --verify reth-v0.2.0-beta.9-x86_64-unknown-linux-gnu.tar.gz.asc reth-v0.1.0-beta.9-x86_64-unknown-linux-gnu.tar.gz\nReplace the filenames by those corresponding to the downloaded Reth release.\n","title":"Signature Verification","titles":["Binaries"]},"21":{"href":"/installation/binaries#release-signing-key","html":"\n<p>Releases are signed using the key with ID <a href=\"https://keyserver.ubuntu.com/pks/lookup?search=50FB7CC55B2E8AFA59FE03B7AA5ED56A7FBF253E&amp;fingerprint=on&amp;op=index\"><code>50FB7CC55B2E8AFA59FE03B7AA5ED56A7FBF253E</code></a>.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>-----BEGIN PGP PUBLIC KEY BLOCK-----</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>mDMEZl4GjhYJKwYBBAHaRw8BAQdAU5gnINBAfIgF9S9GzZ1zHDwZtv/WcJRIQI+h</span></span>\n<span class=\"line\"><span>wwSJCDS0U0dlb3JnaW9zIEtvbnN0YW50b3BvdWxvcyAoUmV0aCBzaWduaW5nIGtl</span></span>\n<span class=\"line\"><span>eSBmb3IgMjAyNCBhbmQgb24pIDxnZW9yZ2lvc0BwYXJhZGlnbS54eXo+iJMEExYK</span></span>\n<span class=\"line\"><span>ADsWIQRQ+3zFWy6K+ln+A7eqXtVqf78lPgUCZl4GjgIbAwULCQgHAgIiAgYVCgkI</span></span>\n<span class=\"line\"><span>CwIEFgIDAQIeBwIXgAAKCRCqXtVqf78lPtg6APwJXCdEG3OCrYTbOIWtLs5cdFlu</span></span>\n<span class=\"line\"><span>UqqUy9J/6Frn7Ss/lwD+PtqDy6AbpX83IcdlSU2cDQQkZWOHG1JPsK33l1lieQy4</span></span>\n<span class=\"line\"><span>OARmXgaOEgorBgEEAZdVAQUBAQdApFaGkJqDMd9RMuAlQVbqWy23w3TxSTHS4Oy8</span></span>\n<span class=\"line\"><span>dD7tvUIDAQgHiHgEGBYKACAWIQRQ+3zFWy6K+ln+A7eqXtVqf78lPgUCZl4GjgIb</span></span>\n<span class=\"line\"><span>DAAKCRCqXtVqf78lPlR7AP42Qr+RGsdneH73y2yd26sJpUvRoQ/IcbNMXmxAU3YZ</span></span>\n<span class=\"line\"><span>zwEA/K0/Im6d1n9d7fjE9fHh4gjNwZufzVTMJhX6byOo/wM=</span></span>\n<span class=\"line\"><span>=zczG</span></span>\n<span class=\"line\"><span>-----END PGP PUBLIC KEY BLOCK-----</span></span></code></pre>","isPage":false,"text":"\nReleases are signed using the key with ID 50FB7CC55B2E8AFA59FE03B7AA5ED56A7FBF253E.\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmDMEZl4GjhYJKwYBBAHaRw8BAQdAU5gnINBAfIgF9S9GzZ1zHDwZtv/WcJRIQI+h\nwwSJCDS0U0dlb3JnaW9zIEtvbnN0YW50b3BvdWxvcyAoUmV0aCBzaWduaW5nIGtl\neSBmb3IgMjAyNCBhbmQgb24pIDxnZW9yZ2lvc0BwYXJhZGlnbS54eXo+iJMEExYK\nADsWIQRQ+3zFWy6K+ln+A7eqXtVqf78lPgUCZl4GjgIbAwULCQgHAgIiAgYVCgkI\nCwIEFgIDAQIeBwIXgAAKCRCqXtVqf78lPtg6APwJXCdEG3OCrYTbOIWtLs5cdFlu\nUqqUy9J/6Frn7Ss/lwD+PtqDy6AbpX83IcdlSU2cDQQkZWOHG1JPsK33l1lieQy4\nOARmXgaOEgorBgEEAZdVAQUBAQdApFaGkJqDMd9RMuAlQVbqWy23w3TxSTHS4Oy8\ndD7tvUIDAQgHiHgEGBYKACAWIQRQ+3zFWy6K+ln+A7eqXtVqf78lPgUCZl4GjgIb\nDAAKCRCqXtVqf78lPlR7AP42Qr+RGsdneH73y2yd26sJpUvRoQ/IcbNMXmxAU3YZ\nzwEA/K0/Im6d1n9d7fjE9fHh4gjNwZufzVTMJhX6byOo/wM=\n=zczG\n-----END PGP PUBLIC KEY BLOCK-----","title":"Release Signing Key","titles":["Binaries","Signature Verification"]},"22":{"href":"/installation/build-for-arm-devices#building-for-arm-devices","html":"</header>\n<p>Reth can be built for and run on ARM devices, but there are a few things to take into consideration before.</p>\n","isPage":true,"text":"\nReth can be built for and run on ARM devices, but there are a few things to take into consideration before.\n","title":"Building for ARM devices","titles":[]},"23":{"href":"/installation/build-for-arm-devices#cpu-architecture","html":"\n<p>First, you must have a 64-bit CPU and Operating System, otherwise some of the project dependencies will not be able to compile or be executed.</p>\n","isPage":false,"text":"\nFirst, you must have a 64-bit CPU and Operating System, otherwise some of the project dependencies will not be able to compile or be executed.\n","title":"CPU Architecture","titles":["Building for ARM devices"]},"24":{"href":"/installation/build-for-arm-devices#memory-layout-on-aarch64","html":"\n<p>Then, you must set up the virtual memory layout in such that the user space is sufficiently large.\nFrom <a href=\"https://www.kernel.org/doc/html/v5.3/arm64/memory.html#:~:text=AArch64%20Linux%20uses%20either%203,for%20both%20user%20and%20kernel.\">the Linux Kernel documentation</a>, you can see that the memory layout with 4KB pages and a level-3 translation table limits the user space to 512GB, which is too low for Reth to sync on Ethereum mainnet.</p>\n","isPage":false,"text":"\nThen, you must set up the virtual memory layout in such that the user space is sufficiently large.\nFrom the Linux Kernel documentation, you can see that the memory layout with 4KB pages and a level-3 translation table limits the user space to 512GB, which is too low for Reth to sync on Ethereum mainnet.\n","title":"Memory Layout on AArch64","titles":["Building for ARM devices"]},"25":{"href":"/installation/build-for-arm-devices#arm-board-virtual-memory-limitation","html":"\n","isPage":false,"text":"\n","title":"ARM Board Virtual Memory Limitation","titles":["Building for ARM devices"]},"26":{"href":"/installation/build-for-arm-devices#issue-description","html":"\n<p>Some ARM boards are equipped with only 3-level paging, which imposes a virtual memory limitation of 256GB for user space on Linux. This limitation can be a challenge for running applications like &quot;reth&quot;, as the MDBX (Memory-mapped Database eXtreme) library requires a larger virtual memory allocation by design.</p>\n","isPage":false,"text":"\nSome ARM boards are equipped with only 3-level paging, which imposes a virtual memory limitation of 256GB for user space on Linux. This limitation can be a challenge for running applications like &quot;reth&quot;, as the MDBX (Memory-mapped Database eXtreme) library requires a larger virtual memory allocation by design.\n","title":"Issue Description","titles":["Building for ARM devices","ARM Board Virtual Memory Limitation"]},"27":{"href":"/installation/build-for-arm-devices#understanding-the-limitation","html":"\n<p>To determine if a specific ARM board is affected by this virtual memory limitation:</p>\n<ol>\n<li>\n<p><strong>Check Specifications:</strong> When considering an ARM board, review its specifications for information on paging levels. Boards with 3-level paging may have a 256GB virtual memory limit.</p>\n</li>\n<li>\n<p><strong>Manufacturer Documentation:</strong> Consult the official ARM board documentation for details on supported paging levels.</p>\n</li>\n<li>\n<p><strong>Community Discussions:</strong> Search online ARM and Linux forums for insights into virtual memory limitations of specific boards.</p>\n</li>\n</ol>\n","isPage":false,"text":"\nTo determine if a specific ARM board is affected by this virtual memory limitation:\n\n\nCheck Specifications: When considering an ARM board, review its specifications for information on paging levels. Boards with 3-level paging may have a 256GB virtual memory limit.\n\n\nManufacturer Documentation: Consult the official ARM board documentation for details on supported paging levels.\n\n\nCommunity Discussions: Search online ARM and Linux forums for insights into virtual memory limitations of specific boards.\n\n\n","title":"Understanding the Limitation","titles":["Building for ARM devices","ARM Board Virtual Memory Limitation"]},"28":{"href":"/installation/build-for-arm-devices#additional-context","html":"\n<p>According to MDBX documentation, changing this upper bound, which dictates the maximum size the database can reach, is a costly operation. Therefore, a reasonably large value was chosen. Given that the upper bound is currently set to 4TB, the assumption was that growth to 3TB might occur relatively soon. If the upper bound size is set to only 342GB, then &quot;reth&quot; cannot store more than 342GB of data, which is insufficient for a full sync.</p>\n<p>It&#x27;s worth noting that on x86_64 architecture, there is a 48-bit address space divided in half between user space and the kernel, providing each with 128TB of address space. In contrast, AArch64 architecture features a user space address space of 512GB and a kernel address space of 256TB.</p>\n<p>Some newer versions of ARM architecture offer support for Large Virtual Address space, but enabling this requires running with a 64KB page size. The specifics of how to enable this functionality might vary.</p>\n","isPage":false,"text":"\nAccording to MDBX documentation, changing this upper bound, which dictates the maximum size the database can reach, is a costly operation. Therefore, a reasonably large value was chosen. Given that the upper bound is currently set to 4TB, the assumption was that growth to 3TB might occur relatively soon. If the upper bound size is set to only 342GB, then &quot;reth&quot; cannot store more than 342GB of data, which is insufficient for a full sync.\nIt&#x27;s worth noting that on x86_64 architecture, there is a 48-bit address space divided in half between user space and the kernel, providing each with 128TB of address space. In contrast, AArch64 architecture features a user space address space of 512GB and a kernel address space of 256TB.\nSome newer versions of ARM architecture offer support for Large Virtual Address space, but enabling this requires running with a 64KB page size. The specifics of how to enable this functionality might vary.\n","title":"Additional Context","titles":["Building for ARM devices","ARM Board Virtual Memory Limitation"]},"29":{"href":"/installation/build-for-arm-devices#additional-resources","html":"\n<ul>\n<li><a href=\"https://developer.arm.com/documentation/ddi0406/cb/Appendixes/ARMv4-and-ARMv5-Differences/System-level-memory-model/Virtual-memory-support\">ARM developer documentation</a></li>\n<li><a href=\"https://community.arm.com\">ARM Community Forums</a></li>\n</ul>\n","isPage":false,"text":"\n\nARM developer documentation\nARM Community Forums\n\n","title":"Additional Resources","titles":["Building for ARM devices","ARM Board Virtual Memory Limitation"]},"30":{"href":"/installation/build-for-arm-devices#build-reth","html":"\n<p>If both your CPU architecture and the memory layout are valid, the instructions for building Reth will not differ from <a href=\"https://paradigmxyz.github.io/reth/installation/source.html\">the standard process</a>.</p>\n","isPage":false,"text":"\nIf both your CPU architecture and the memory layout are valid, the instructions for building Reth will not differ from the standard process.\n","title":"Build Reth","titles":["Building for ARM devices"]},"31":{"href":"/installation/build-for-arm-devices#troubleshooting","html":"\n<blockquote>\n<p>If you ever need to recompile the Linux Kernel because the official OS images for your ARM board don&#x27;t have the right memory layout configuration, you can use <a href=\"https://github.com/armbian/build\">the Armbian build framework</a>.</p>\n</blockquote>\n","isPage":false,"text":"\n\nIf you ever need to recompile the Linux Kernel because the official OS images for your ARM board don&#x27;t have the right memory layout configuration, you can use the Armbian build framework.\n\n","title":"Troubleshooting","titles":["Building for ARM devices"]},"32":{"href":"/installation/build-for-arm-devices#failed-to-open-database","html":"\n<blockquote>\n<p>This error is documented <a href=\"https://github.com/paradigmxyz/reth/issues/2211\">here</a>.</p>\n</blockquote>\n<p>This error is raised whenever MDBX can not open a database due to the limitations imposed by the memory layout of your kernel. If the user space is limited to 512GB, the database will not be able to grow below this size.</p>\n<p>You will need to recompile the Linux Kernel to fix the issue.</p>\n<p>A simple and safe approach to achieve this is to use the Armbian build framework to create a new image of the OS that will be flashed to a storage device of your choice - an SD card for example - with the following kernel feature values:</p>\n<ul>\n<li><strong>Page Size</strong>: 64 KB</li>\n<li><strong>Virtual Address Space Size</strong>: 48 Bits</li>\n</ul>\n<p>To be able to build an Armbian image and set those values, you will need to:</p>\n<ul>\n<li>Clone the Armbian build framework repository</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> clone</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/armbian/build</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> build</span></span></code></pre>\n<ul>\n<li>Run the compile script with the following parameters:</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">./compile.sh</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">BUILD_MINIMAL=yes </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">BUILD_DESKTOP=no </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">KERNEL_CONFIGURE=yes </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">CARD_DEVICE=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/dev/sdX&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> # Replace sdX with your own storage device</span></span></code></pre>\n<ul>\n<li>From there, you will be able to select the target board, the OS release and branch. Then, once you get in the <strong>Kernel Configuration</strong> screen, select the <strong>Kernel Features options</strong> and set the previous values accordingly.</li>\n<li>Wait for the process to finish, plug your storage device into your board and start it. You can now download or install Reth and it should work properly.</li>\n</ul>","isPage":false,"text":"\n\nThis error is documented here.\n\nThis error is raised whenever MDBX can not open a database due to the limitations imposed by the memory layout of your kernel. If the user space is limited to 512GB, the database will not be able to grow below this size.\nYou will need to recompile the Linux Kernel to fix the issue.\nA simple and safe approach to achieve this is to use the Armbian build framework to create a new image of the OS that will be flashed to a storage device of your choice - an SD card for example - with the following kernel feature values:\n\nPage Size: 64 KB\nVirtual Address Space Size: 48 Bits\n\nTo be able to build an Armbian image and set those values, you will need to:\n\nClone the Armbian build framework repository\n\ngit clone https://github.com/armbian/build\ncd build\n\nRun the compile script with the following parameters:\n\n./compile.sh \\\nBUILD_MINIMAL=yes \\\nBUILD_DESKTOP=no \\\nKERNEL_CONFIGURE=yes \\\nCARD_DEVICE=&quot;/dev/sdX&quot; # Replace sdX with your own storage device\n\nFrom there, you will be able to select the target board, the OS release and branch. Then, once you get in the Kernel Configuration screen, select the Kernel Features options and set the previous values accordingly.\nWait for the process to finish, plug your storage device into your board and start it. You can now download or install Reth and it should work properly.\n","title":"Failed to open database","titles":["Building for ARM devices","Troubleshooting"]},"33":{"href":"/installation/docker#docker","html":"</header>\n<p>There are two ways to obtain a Reth Docker image:</p>\n<ol>\n<li><a href=\"#github\">GitHub</a></li>\n<li><a href=\"#building-the-docker-image\">Building it from source</a></li>\n</ol>\n<p>Once you have obtained the Docker image, proceed to <a href=\"#using-the-docker-image\">Using the Docker\nimage</a>.</p>\n<aside data-callout=\"note\"><p>Reth requires Docker Engine version 20.10.10 or higher due to <a href=\"https://docs.docker.com/engine/release-notes/20.10/#201010\">missing support</a> for the <code>clone3</code> syscall in previous versions.</p></aside>\n","isPage":true,"text":"\nThere are two ways to obtain a Reth Docker image:\n\nGitHub\nBuilding it from source\n\nOnce you have obtained the Docker image, proceed to Using the Docker\nimage.\nReth requires Docker Engine version 20.10.10 or higher due to missing support for the clone3 syscall in previous versions.\n","title":"Docker","titles":[]},"34":{"href":"/installation/docker#github","html":"\n<p>Reth docker images for both x86_64 and ARM64 machines are published with every release of reth on GitHub Container Registry.</p>\n<p>You can obtain the latest image with:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> pull</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ghcr.io/paradigmxyz/reth</span></span></code></pre>\n<p>Or a specific version (e.g. v0.0.1) with:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> pull</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ghcr.io/paradigmxyz/reth:v0.0.1</span></span></code></pre>\n<p>You can test the image with:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --rm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ghcr.io/paradigmxyz/reth</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --version</span></span></code></pre>\n<p>If you can see the latest <a href=\"https://github.com/paradigmxyz/reth/releases\">Reth release</a> version, then you&#x27;ve successfully installed Reth via Docker.</p>\n","isPage":false,"text":"\nReth docker images for both x86_64 and ARM64 machines are published with every release of reth on GitHub Container Registry.\nYou can obtain the latest image with:\ndocker pull ghcr.io/paradigmxyz/reth\nOr a specific version (e.g. v0.0.1) with:\ndocker pull ghcr.io/paradigmxyz/reth:v0.0.1\nYou can test the image with:\ndocker run --rm ghcr.io/paradigmxyz/reth --version\nIf you can see the latest Reth release version, then you&#x27;ve successfully installed Reth via Docker.\n","title":"GitHub","titles":["Docker"]},"35":{"href":"/installation/docker#building-the-docker-image","html":"\n<p>To build the image from source, navigate to the root of the repository and run:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> build</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> .</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -t</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth:local</span></span></code></pre>\n<p>The build will likely take several minutes. Once it&#x27;s built, test it with:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth:local</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --version</span></span></code></pre>\n","isPage":false,"text":"\nTo build the image from source, navigate to the root of the repository and run:\ndocker build . -t reth:local\nThe build will likely take several minutes. Once it&#x27;s built, test it with:\ndocker run reth:local --version\n","title":"Building the Docker image","titles":["Docker"]},"36":{"href":"/installation/docker#using-the-docker-image","html":"\n<p>There are two ways to use the Docker image:</p>\n<ol>\n<li><a href=\"#using-plain-docker\">Using Docker</a></li>\n<li><a href=\"#using-docker-compose\">Using Docker Compose</a></li>\n</ol>\n","isPage":false,"text":"\nThere are two ways to use the Docker image:\n\nUsing Docker\nUsing Docker Compose\n\n","title":"Using the Docker image","titles":["Docker"]},"37":{"href":"/installation/docker#using-plain-docker","html":"\n<p>To run Reth with Docker, run:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    -v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> rethdata:/root/.local/share/reth/mainnet</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    -d</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    -p</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 9001:9001</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    -p</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 30303:30303</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    -p</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 30303:30303/udp</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --name</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    reth:local</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    node</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --metrics</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 0.0.0.0:9001</span></span></code></pre>\n<p>The above command will create a container named <code>reth</code> and a named volume called <code>rethdata</code> for data persistence.\nIt will also expose the <code>30303</code> port (TCP and UDP) for peering with other nodes and the <code>9001</code> port for metrics.</p>\n<p>It will use the local image <code>reth:local</code>. If you want to use the GitHub Container Registry remote image, use <code>ghcr.io/paradigmxyz/reth</code> with your preferred tag.</p>\n","isPage":false,"text":"\nTo run Reth with Docker, run:\ndocker run \\\n    -v rethdata:/root/.local/share/reth/mainnet \\\n    -d \\\n    -p 9001:9001 \\\n    -p 30303:30303 \\\n    -p 30303:30303/udp \\\n    --name reth \\\n    reth:local \\\n    node \\\n    --metrics 0.0.0.0:9001\nThe above command will create a container named reth and a named volume called rethdata for data persistence.\nIt will also expose the 30303 port (TCP and UDP) for peering with other nodes and the 9001 port for metrics.\nIt will use the local image reth:local. If you want to use the GitHub Container Registry remote image, use ghcr.io/paradigmxyz/reth with your preferred tag.\n","title":"Using Plain Docker","titles":["Docker","Using the Docker image"]},"38":{"href":"/installation/docker#using-docker-compose","html":"\n<p>To run Reth with Docker Compose, run the following command from a shell inside the root directory of this repository:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">./etc/generate-jwt.sh</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> compose</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> etc/docker-compose.yml</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> etc/lighthouse.yml</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> up</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -d</span></span></code></pre>\n<aside data-callout=\"note\"><p>If you want to run Reth with a CL that is not Lighthouse:</p><ul>\n<li>The JWT for the consensus client can be found at <code>etc/jwttoken/jwt.hex</code> in this repository, after the <code>etc/generate-jwt.sh</code> script is run</li>\n<li>The Reth Engine API is accessible on <code>localhost:8551</code></li>\n</ul></aside>\n<p>To check if Reth is running correctly, run:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> compose</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> etc/docker-compose.yml</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> etc/lighthouse.yml</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> logs</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span></span></code></pre>\n<p>The default <code>docker-compose.yml</code> file will create three containers:</p>\n<ul>\n<li>Reth</li>\n<li>Prometheus</li>\n<li>Grafana</li>\n</ul>\n<p>The optional <code>lighthouse.yml</code> file will create two containers:</p>\n<ul>\n<li>Lighthouse</li>\n<li><a href=\"https://github.com/ethpandaops/ethereum-metrics-exporter\"><code>ethereum-metrics-exporter</code></a></li>\n</ul>\n<p>Grafana will be exposed on <code>localhost:3000</code> and accessible via default credentials (username and password is <code>admin</code>), with two available dashboards:</p>\n<ul>\n<li>reth</li>\n<li>Ethereum Metrics Exporter (works only if Lighthouse is also running)</li>\n</ul>\n","isPage":false,"text":"\nTo run Reth with Docker Compose, run the following command from a shell inside the root directory of this repository:\n./etc/generate-jwt.sh\ndocker compose -f etc/docker-compose.yml -f etc/lighthouse.yml up -d\nIf you want to run Reth with a CL that is not Lighthouse:\nThe JWT for the consensus client can be found at etc/jwttoken/jwt.hex in this repository, after the etc/generate-jwt.sh script is run\nThe Reth Engine API is accessible on localhost:8551\n\nTo check if Reth is running correctly, run:\ndocker compose -f etc/docker-compose.yml -f etc/lighthouse.yml logs -f reth\nThe default docker-compose.yml file will create three containers:\n\nReth\nPrometheus\nGrafana\n\nThe optional lighthouse.yml file will create two containers:\n\nLighthouse\nethereum-metrics-exporter\n\nGrafana will be exposed on localhost:3000 and accessible via default credentials (username and password is admin), with two available dashboards:\n\nreth\nEthereum Metrics Exporter (works only if Lighthouse is also running)\n\n","title":"Using Docker Compose","titles":["Docker","Using the Docker image"]},"39":{"href":"/installation/docker#interacting-with-reth-inside-docker","html":"\n<p>To interact with Reth you must first open a shell inside the Reth container by running:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> exec</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -it</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> bash</span></span></code></pre>\n<strong>If Reth is running with Docker Compose, replace <code>reth</code> with <code>reth-reth-1</code> in the above command</strong>\n<p>Refer to the <a href=\"#TODO\">CLI docs</a> to interact with Reth once inside the Reth container.</p>\n","isPage":false,"text":"\nTo interact with Reth you must first open a shell inside the Reth container by running:\ndocker exec -it reth bash\nIf Reth is running with Docker Compose, replace reth with reth-reth-1 in the above command\nRefer to the CLI docs to interact with Reth once inside the Reth container.\n","title":"Interacting with Reth inside Docker","titles":["Docker"]},"40":{"href":"/installation/docker#run-only-grafana-in-docker","html":"\n<p>This allows importing existing Grafana dashboards, without running Reth in Docker.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> compose</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> etc/docker-compose.yml</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> up</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -d</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --no-deps</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> grafana</span></span></code></pre>\n<p>After login with <code>admin:admin</code> credentials, Prometheus should be listed under <a href=\"http://localhost:3000/connections/datasources\"><code>Grafana datasources</code></a>. Replace its <code>Prometheus server URL</code> so it points to locally running one. On Mac or Windows, use <code>http://host.docker.internal:9090</code>. On Linux, try <code>http://172.17.0.1:9090</code>.</p>","isPage":false,"text":"\nThis allows importing existing Grafana dashboards, without running Reth in Docker.\ndocker compose -f etc/docker-compose.yml up -d --no-deps grafana\nAfter login with admin:admin credentials, Prometheus should be listed under Grafana datasources. Replace its Prometheus server URL so it points to locally running one. On Mac or Windows, use http://host.docker.internal:9090. On Linux, try http://172.17.0.1:9090.","title":"Run only Grafana in Docker","titles":["Docker"]},"41":{"href":"/installation/overview#installation","html":"</header>\n<p>Reth runs on Linux and macOS (Windows tracked).</p>\n<p>There are three core methods to obtain Reth:</p>\n<ul>\n<li><a href=\"./binaries\">Pre-built binaries</a></li>\n<li><a href=\"./docker\">Docker images</a></li>\n<li><a href=\"./source\">Building from source.</a></li>\n</ul>\n<aside data-callout=\"note\"><p>If you have Docker installed, we recommend using the <a href=\"./docker#using-docker-compose\">Docker Compose</a> configuration\nthat will get you Reth, Lighthouse (Consensus Client), Prometheus and Grafana running and syncing with just one command.</p></aside>\n","isPage":true,"text":"\nReth runs on Linux and macOS (Windows tracked).\nThere are three core methods to obtain Reth:\n\nPre-built binaries\nDocker images\nBuilding from source.\n\nIf you have Docker installed, we recommend using the Docker Compose configuration\nthat will get you Reth, Lighthouse (Consensus Client), Prometheus and Grafana running and syncing with just one command.\n","title":"Installation","titles":[]},"42":{"href":"/installation/overview#hardware-requirements","html":"\n<p>The hardware requirements for running Reth depend on the node configuration and can change over time as the network grows or new features are implemented.</p>\n<p>The most important requirement is by far the disk, whereas CPU and RAM requirements are relatively flexible.</p>\n<table><thead><tr><th></th><th>Archive Node</th><th>Full Node</th></tr></thead><tbody><tr><td>Disk</td><td>At least 2.8TB (TLC NVMe recommended)</td><td>At least 1.8TB (TLC NVMe recommended)</td></tr><tr><td>Memory</td><td>16GB+</td><td>8GB+</td></tr><tr><td>CPU</td><td>Higher clock speed over core count</td><td>Higher clock speeds over core count</td></tr><tr><td>Bandwidth</td><td>Stable 24Mbps+</td><td>Stable 24Mbps+</td></tr></tbody></table>\n","isPage":false,"text":"\nThe hardware requirements for running Reth depend on the node configuration and can change over time as the network grows or new features are implemented.\nThe most important requirement is by far the disk, whereas CPU and RAM requirements are relatively flexible.\nArchive NodeFull NodeDiskAt least 2.8TB (TLC NVMe recommended)At least 1.8TB (TLC NVMe recommended)Memory16GB+8GB+CPUHigher clock speed over core countHigher clock speeds over core countBandwidthStable 24Mbps+Stable 24Mbps+\n","title":"Hardware Requirements","titles":["Installation"]},"43":{"href":"/installation/overview#qlc-and-tlc","html":"\n<p>It is crucial to understand the difference between QLC and TLC NVMe drives when considering the disk requirement.</p>\n<p>QLC (Quad-Level Cell) NVMe drives utilize four bits of data per cell, allowing for higher storage density and lower manufacturing costs. However, this increased density comes at the expense of performance. QLC drives have slower read and write speeds compared to TLC drives. They also have a lower endurance, meaning they may have a shorter lifespan and be less suitable for heavy workloads or constant data rewriting.</p>\n<p>TLC (Triple-Level Cell) NVMe drives, on the other hand, use three bits of data per cell. While they have a slightly lower storage density compared to QLC drives, TLC drives offer faster performance. They typically have higher read and write speeds, making them more suitable for demanding tasks such as data-intensive applications, gaming, and multimedia editing. TLC drives also tend to have a higher endurance, making them more durable and longer-lasting.</p>\n<p>Prior to purchasing an NVMe drive, it is advisable to research and determine whether the disk will be based on QLC or TLC technology. An overview of recommended and not-so-recommended NVMe boards can be found at <a href=\"https://gist.github.com/yorickdowne/f3a3e79a573bf35767cd002cc977b038\">here</a>.</p>\n","isPage":false,"text":"\nIt is crucial to understand the difference between QLC and TLC NVMe drives when considering the disk requirement.\nQLC (Quad-Level Cell) NVMe drives utilize four bits of data per cell, allowing for higher storage density and lower manufacturing costs. However, this increased density comes at the expense of performance. QLC drives have slower read and write speeds compared to TLC drives. They also have a lower endurance, meaning they may have a shorter lifespan and be less suitable for heavy workloads or constant data rewriting.\nTLC (Triple-Level Cell) NVMe drives, on the other hand, use three bits of data per cell. While they have a slightly lower storage density compared to QLC drives, TLC drives offer faster performance. They typically have higher read and write speeds, making them more suitable for demanding tasks such as data-intensive applications, gaming, and multimedia editing. TLC drives also tend to have a higher endurance, making them more durable and longer-lasting.\nPrior to purchasing an NVMe drive, it is advisable to research and determine whether the disk will be based on QLC or TLC technology. An overview of recommended and not-so-recommended NVMe boards can be found at here.\n","title":"QLC and TLC","titles":["Installation","Hardware Requirements",null]},"44":{"href":"/installation/overview#disk","html":"\n<p>There are multiple types of disks to sync Reth, with varying size requirements, depending on the syncing mode.\nAs of April 2025 at block number 22.1M:</p>\n<ul>\n<li>Archive Node: At least 2.8TB is required</li>\n<li>Full Node: At least 1.8TB is required</li>\n</ul>\n<p>NVMe based SSD drives are recommended for the best performance, with SATA SSDs being a cheaper alternative. HDDs are the cheapest option, but they will take the longest to sync, and are not recommended.</p>\n<p>As of February 2024, syncing an Ethereum mainnet node to block 19.3M on NVMe drives takes about 50 hours, while on a GCP &quot;Persistent SSD&quot; it takes around 5 days.</p>\n<aside data-callout=\"tip\"><p>It is highly recommended to choose a TLC drive when using an NVMe drive, and not a QLC drive. See <a href=\"#qlc-and-tlc\">the note</a> above. A list of recommended drives can be found <a href=\"https://gist.github.com/yorickdowne/f3a3e79a573bf35767cd002cc977b038\">here</a>.</p></aside>\n","isPage":false,"text":"\nThere are multiple types of disks to sync Reth, with varying size requirements, depending on the syncing mode.\nAs of April 2025 at block number 22.1M:\n\nArchive Node: At least 2.8TB is required\nFull Node: At least 1.8TB is required\n\nNVMe based SSD drives are recommended for the best performance, with SATA SSDs being a cheaper alternative. HDDs are the cheapest option, but they will take the longest to sync, and are not recommended.\nAs of February 2024, syncing an Ethereum mainnet node to block 19.3M on NVMe drives takes about 50 hours, while on a GCP &quot;Persistent SSD&quot; it takes around 5 days.\nIt is highly recommended to choose a TLC drive when using an NVMe drive, and not a QLC drive. See the note above. A list of recommended drives can be found here.\n","title":"Disk","titles":["Installation","Hardware Requirements"]},"45":{"href":"/installation/overview#cpu","html":"\n<p>Most of the time during syncing is spent executing transactions, which is a single-threaded operation due to potential state dependencies of a transaction on previous ones.</p>\n<p>As a result, the number of cores matters less, but in general higher clock speeds are better. More cores are better for parallelizable <a href=\"https://github.com/paradigmxyz/reth/blob/main/docs/crates/stages\">stages</a> (like sender recovery or bodies downloading), but these stages are not the primary bottleneck for syncing.</p>\n","isPage":false,"text":"\nMost of the time during syncing is spent executing transactions, which is a single-threaded operation due to potential state dependencies of a transaction on previous ones.\nAs a result, the number of cores matters less, but in general higher clock speeds are better. More cores are better for parallelizable stages (like sender recovery or bodies downloading), but these stages are not the primary bottleneck for syncing.\n","title":"CPU","titles":["Installation","Hardware Requirements"]},"46":{"href":"/installation/overview#memory","html":"\n<p>It is recommended to use at least 8GB of RAM.</p>\n<p>Most of Reth&#x27;s components tend to consume a low amount of memory, unless you are under heavy RPC load, so this should matter less than the other requirements.</p>\n<p>Higher memory is generally better as it allows for better caching, resulting in less stress on the disk.</p>\n","isPage":false,"text":"\nIt is recommended to use at least 8GB of RAM.\nMost of Reth&#x27;s components tend to consume a low amount of memory, unless you are under heavy RPC load, so this should matter less than the other requirements.\nHigher memory is generally better as it allows for better caching, resulting in less stress on the disk.\n","title":"Memory","titles":["Installation","Hardware Requirements"]},"47":{"href":"/installation/overview#bandwidth","html":"\n<p>A stable and dependable internet connection is crucial for both syncing a node from genesis and for keeping up with the chain&#x27;s tip.</p>\n<p>Note that due to Reth&#x27;s staged sync, you only need an internet connection for the Headers and Bodies stages. This means that the first 1-3 hours (depending on your internet connection) will be online, downloading all necessary data, and the rest will be done offline and does not require an internet connection.</p>\n<p>Once you&#x27;re synced to the tip you will need a reliable connection, especially if you&#x27;re operating a validator. A 24Mbps connection is recommended, but you can probably get away with less. Make sure your ISP does not cap your bandwidth.</p>\n","isPage":false,"text":"\nA stable and dependable internet connection is crucial for both syncing a node from genesis and for keeping up with the chain&#x27;s tip.\nNote that due to Reth&#x27;s staged sync, you only need an internet connection for the Headers and Bodies stages. This means that the first 1-3 hours (depending on your internet connection) will be online, downloading all necessary data, and the rest will be done offline and does not require an internet connection.\nOnce you&#x27;re synced to the tip you will need a reliable connection, especially if you&#x27;re operating a validator. A 24Mbps connection is recommended, but you can probably get away with less. Make sure your ISP does not cap your bandwidth.\n","title":"Bandwidth","titles":["Installation","Hardware Requirements"]},"48":{"href":"/installation/overview#what-hardware-can-i-get","html":"\n<p>If you are buying your own NVMe SSD, please consult <a href=\"https://gist.github.com/yorickdowne/f3a3e79a573bf35767cd002cc977b038\">this hardware comparison</a> which is being actively maintained. We recommend against buying DRAM-less or QLC devices as these are noticeably slower.</p>\n<p>All our benchmarks have been produced on <a href=\"https://www.latitude.sh/\">Latitude.sh</a>, a bare metal provider. We use <code>c3.large.x86</code> boxes, and also recommend trying the <code>c3.small.x86</code> box for pruned/full nodes. So far our experience has been smooth with some users reporting that the NVMEs there outperform AWS NVMEs by 3x or more. We&#x27;re excited for more Reth nodes on Latitude.sh, so for a limited time you can use <code>RETH400</code> for a $250 discount. <a href=\"https://metal.new/reth\">Run a node now!</a></p>","isPage":false,"text":"\nIf you are buying your own NVMe SSD, please consult this hardware comparison which is being actively maintained. We recommend against buying DRAM-less or QLC devices as these are noticeably slower.\nAll our benchmarks have been produced on Latitude.sh, a bare metal provider. We use c3.large.x86 boxes, and also recommend trying the c3.small.x86 box for pruned/full nodes. So far our experience has been smooth with some users reporting that the NVMEs there outperform AWS NVMEs by 3x or more. We&#x27;re excited for more Reth nodes on Latitude.sh, so for a limited time you can use RETH400 for a $250 discount. Run a node now!","title":"What hardware can I get?","titles":["Installation"]},"49":{"href":"/installation/priorities#update-priorities","html":"</header>\n<p>When publishing releases, reth will include an &quot;Update Priority&quot; section in the release notes, in the same manner Lighthouse does.</p>\n<p>The &quot;Update Priority&quot; section will include a table which may appear like so:</p>\n<table><thead><tr><th>User Class</th><th>Priority</th></tr></thead><tbody><tr><td>Payload Builders</td><td>Medium Priority</td></tr><tr><td>Non-Payload Builders</td><td>Low Priority</td></tr></tbody></table>\n<p>To understand this table, the following terms are important:</p>\n<ul>\n<li><em>Payload builders</em> are those who use reth to build and validate payloads.</li>\n<li><em>Non-payload builders</em> are those who run reth for other purposes (e.g., data analysis, RPC or applications).</li>\n<li><em>High priority</em> updates should be completed as soon as possible (e.g., hours or days).</li>\n<li><em>Medium priority</em> updates should be completed at the next convenience (e.g., days or a week).</li>\n<li><em>Low priority</em> updates should be completed in the next routine update cycle (e.g., two weeks).</li>\n</ul>","isPage":true,"text":"\nWhen publishing releases, reth will include an &quot;Update Priority&quot; section in the release notes, in the same manner Lighthouse does.\nThe &quot;Update Priority&quot; section will include a table which may appear like so:\nUser ClassPriorityPayload BuildersMedium PriorityNon-Payload BuildersLow Priority\nTo understand this table, the following terms are important:\n\nPayload builders are those who use reth to build and validate payloads.\nNon-payload builders are those who run reth for other purposes (e.g., data analysis, RPC or applications).\nHigh priority updates should be completed as soon as possible (e.g., hours or days).\nMedium priority updates should be completed at the next convenience (e.g., days or a week).\nLow priority updates should be completed in the next routine update cycle (e.g., two weeks).\n","title":"Update Priorities","titles":[]},"50":{"href":"/installation/source#build-from-source","html":"</header>\n<p>You can build Reth on Linux, macOS, Windows, and Windows WSL2.</p>\n<aside data-callout=\"note\"><p>Reth does <strong>not</strong> work on Windows WSL1.</p></aside>\n","isPage":true,"text":"\nYou can build Reth on Linux, macOS, Windows, and Windows WSL2.\nReth does not work on Windows WSL1.\n","title":"Build from Source","titles":[]},"51":{"href":"/installation/source#dependencies","html":"\n<p>First, <strong>install Rust</strong> using <a href=\"https://rustup.rs/\">rustup</a>：</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">curl</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --proto</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;=https&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --tlsv1.2</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -sSf</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://sh.rustup.rs</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> sh</span></span></code></pre>\n<p>The rustup installer provides an easy way to update the Rust compiler, and works on all platforms.</p>\n<aside data-callout=\"tip\"><ul>\n<li>During installation, when prompted, enter <code>1</code> for the default installation.</li>\n<li>After Rust installation completes, try running <code>cargo version</code> . If it cannot\nbe found, run <code>source $HOME/.cargo/env</code>. After that, running <code>cargo version</code> should return the version, for example <code>cargo 1.68.2</code>.</li>\n<li>It&#x27;s generally advisable to append <code>source $HOME/.cargo/env</code> to <code>~/.bashrc</code>.</li>\n</ul></aside>\n<p>With Rust installed, follow the instructions below to install dependencies relevant to your\noperating system:</p>\n<ul>\n<li><strong>Ubuntu</strong>: <code>apt-get install libclang-dev pkg-config build-essential</code></li>\n<li><strong>macOS</strong>: <code>brew install llvm pkg-config</code></li>\n<li><strong>Windows</strong>: <code>choco install llvm</code> or <code>winget install LLVM.LLVM</code></li>\n</ul>\n<p>These are needed to build bindings for Reth&#x27;s database.</p>\n<p>The Minimum Supported Rust Version (MSRV) of this project is 1.80.0. If you already have a version of Rust installed,\nyou can check your version by running <code>rustc --version</code>. To update your version of Rust, run <code>rustup update</code>.</p>\n","isPage":false,"text":"\nFirst, install Rust using rustup：\ncurl --proto &#x27;=https&#x27; --tlsv1.2 -sSf https://sh.rustup.rs | sh\nThe rustup installer provides an easy way to update the Rust compiler, and works on all platforms.\n\nDuring installation, when prompted, enter 1 for the default installation.\nAfter Rust installation completes, try running cargo version . If it cannot\nbe found, run source $HOME/.cargo/env. After that, running cargo version should return the version, for example cargo 1.68.2.\nIt&#x27;s generally advisable to append source $HOME/.cargo/env to ~/.bashrc.\n\nWith Rust installed, follow the instructions below to install dependencies relevant to your\noperating system:\n\nUbuntu: apt-get install libclang-dev pkg-config build-essential\nmacOS: brew install llvm pkg-config\nWindows: choco install llvm or winget install LLVM.LLVM\n\nThese are needed to build bindings for Reth&#x27;s database.\nThe Minimum Supported Rust Version (MSRV) of this project is 1.80.0. If you already have a version of Rust installed,\nyou can check your version by running rustc --version. To update your version of Rust, run rustup update.\n","title":"Dependencies","titles":["Build from Source"]},"52":{"href":"/installation/source#build-reth","html":"\n<p>With Rust and the dependencies installed, you&#x27;re ready to build Reth. First, clone the repository:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> clone</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/paradigmxyz/reth</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span></span></code></pre>\n<p>Then, install Reth into your <code>PATH</code> directly via:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cargo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --locked</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --path</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> bin/reth</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --bin</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span></span></code></pre>\n<p>The binary will now be accessible as <code>reth</code> via the command line, and exist under your default <code>.cargo/bin</code> folder.</p>\n<p>Alternatively, you can build yourself with:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cargo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> build</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --release</span></span></code></pre>\n<p>This will place the reth binary under <code>./target/release/reth</code>, and you can copy it to your directory of preference after that.</p>\n<p>Compilation may take around 10 minutes. Installation was successful if <code>reth --help</code> displays the <a href=\"#TODO\">command-line documentation</a>.</p>\n<p>If you run into any issues, please check the <a href=\"#troubleshooting\">Troubleshooting</a> section, or reach out to us on <a href=\"https://t.me/paradigm_reth\">Telegram</a>.</p>\n","isPage":false,"text":"\nWith Rust and the dependencies installed, you&#x27;re ready to build Reth. First, clone the repository:\ngit clone https://github.com/paradigmxyz/reth\ncd reth\nThen, install Reth into your PATH directly via:\ncargo install --locked --path bin/reth --bin reth\nThe binary will now be accessible as reth via the command line, and exist under your default .cargo/bin folder.\nAlternatively, you can build yourself with:\ncargo build --release\nThis will place the reth binary under ./target/release/reth, and you can copy it to your directory of preference after that.\nCompilation may take around 10 minutes. Installation was successful if reth --help displays the command-line documentation.\nIf you run into any issues, please check the Troubleshooting section, or reach out to us on Telegram.\n","title":"Build Reth","titles":["Build from Source"]},"53":{"href":"/installation/source#update-reth","html":"\n<p>You can update Reth to a specific version by running the commands below.</p>\n<p>The <code>reth</code> directory will be the location you cloned reth to during the installation process.</p>\n<p><code>${VERSION}</code> will be the version you wish to build in the format <code>vX.X.X</code>.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> fetch</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> checkout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ${VERSION}</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cargo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> build</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --release</span></span></code></pre>\n","isPage":false,"text":"\nYou can update Reth to a specific version by running the commands below.\nThe reth directory will be the location you cloned reth to during the installation process.\n${VERSION} will be the version you wish to build in the format vX.X.X.\ncd reth\ngit fetch\ngit checkout ${VERSION}\ncargo build --release\n","title":"Update Reth","titles":["Build from Source"]},"54":{"href":"/installation/source#optimizations","html":"\n<strong>Profiles</strong>\n<p>You can customise the compiler settings used to compile Reth via\n<a href=\"https://doc.rust-lang.org/cargo/reference/profiles.html\">Cargo profiles</a>.</p>\n<p>Reth includes several profiles which can be selected via the Cargo flag <code>--profile</code>.</p>\n<ul>\n<li><code>release</code>: default for source builds, enables most optimisations while not taking too long to\ncompile.</li>\n<li><code>maxperf</code>: default for binary releases, enables aggressive optimisations including full LTO.\nAlthough compiling with this profile improves some benchmarks by around 20% compared to <code>release</code>,\nit imposes a <em>significant</em> cost at compile time and is only recommended if you have a fast CPU.</li>\n</ul>\n<strong>Rust compiler flags</strong>\n<p>You can also use <code>RUSTFLAGS=&quot;-C target-cpu=native&quot;</code> to enable CPU-specific optimisations. In order to get\nthe highest performance out of your build:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">RUSTFLAGS</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;-C target-cpu=native&quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cargo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> build</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --profile</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> maxperf</span></span></code></pre>\n<strong>Features</strong>\n<p>Finally, some optional features are present that may improve performance, but may not very portable,\nand as such might not compile on your particular system. These are currently:</p>\n<ul>\n<li><code>jemalloc</code>: replaces the default system memory allocator with <a href=\"https://jemalloc.net/\"><code>jemalloc</code></a>; this feature is unstable on Windows</li>\n<li><code>asm-keccak</code>: replaces the default, pure-Rust implementation of Keccak256 with one implemented in assembly; see <a href=\"https://github.com/DaniPopes/keccak-asm\">the <code>keccak-asm</code> crate</a> for more details and supported targets</li>\n<li><code>min-LEVEL-logs</code>, where <code>LEVEL</code> is one of <code>error</code>, <code>warn</code>, <code>info</code>, <code>debug</code>, <code>trace</code>: disables compilation of logs of lower level than the given one; this in general isn&#x27;t that significant, and is not recommended due to the loss of debugging that the logs would provide</li>\n</ul>\n<p>You can activate features by passing them to the <code>--features</code> or <code>-F</code> Cargo flag;\nmultiple features can be activated with a space- or comma-separated list to the flag:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">RUSTFLAGS</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;-C target-cpu=native&quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cargo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> build</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --profile</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> maxperf</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --features</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> jemalloc,asm-keccak</span></span></code></pre>\n","isPage":false,"text":"\nProfiles\nYou can customise the compiler settings used to compile Reth via\nCargo profiles.\nReth includes several profiles which can be selected via the Cargo flag --profile.\n\nrelease: default for source builds, enables most optimisations while not taking too long to\ncompile.\nmaxperf: default for binary releases, enables aggressive optimisations including full LTO.\nAlthough compiling with this profile improves some benchmarks by around 20% compared to release,\nit imposes a significant cost at compile time and is only recommended if you have a fast CPU.\n\nRust compiler flags\nYou can also use RUSTFLAGS=&quot;-C target-cpu=native&quot; to enable CPU-specific optimisations. In order to get\nthe highest performance out of your build:\nRUSTFLAGS=&quot;-C target-cpu=native&quot; cargo build --profile maxperf\nFeatures\nFinally, some optional features are present that may improve performance, but may not very portable,\nand as such might not compile on your particular system. These are currently:\n\njemalloc: replaces the default system memory allocator with jemalloc; this feature is unstable on Windows\nasm-keccak: replaces the default, pure-Rust implementation of Keccak256 with one implemented in assembly; see the keccak-asm crate for more details and supported targets\nmin-LEVEL-logs, where LEVEL is one of error, warn, info, debug, trace: disables compilation of logs of lower level than the given one; this in general isn&#x27;t that significant, and is not recommended due to the loss of debugging that the logs would provide\n\nYou can activate features by passing them to the --features or -F Cargo flag;\nmultiple features can be activated with a space- or comma-separated list to the flag:\nRUSTFLAGS=&quot;-C target-cpu=native&quot; cargo build --profile maxperf --features jemalloc,asm-keccak\n","title":"Optimizations","titles":["Build from Source"]},"55":{"href":"/installation/source#troubleshooting","html":"\n","isPage":false,"text":"\n","title":"Troubleshooting","titles":["Build from Source"]},"56":{"href":"/installation/source#command-is-not-found","html":"\n<p>Reth will be installed to <code>CARGO_HOME</code> or <code>$HOME/.cargo</code>. This directory needs to be on your <code>PATH</code> before you can run <code>$ reth</code>.</p>\n<p>See <a href=\"https://www.rust-lang.org/tools/install\">&quot;Configuring the <code>PATH</code> environment variable&quot;</a> for more information.</p>\n","isPage":false,"text":"\nReth will be installed to CARGO_HOME or $HOME/.cargo. This directory needs to be on your PATH before you can run $ reth.\nSee &quot;Configuring the PATH environment variable&quot; for more information.\n","title":"Command is not found","titles":["Build from Source","Troubleshooting"]},"57":{"href":"/installation/source#compilation-error","html":"\n<p>Make sure you are running the latest version of Rust. If you have installed Rust using rustup, simply run <code>rustup update</code>.</p>\n<p>If you can&#x27;t install the latest version of Rust you can instead compile using the Minimum Supported\nRust Version (MSRV) which is listed under the <code>rust-version</code> key in Reth&#x27;s\n<a href=\"https://github.com/paradigmxyz/reth/blob/main/Cargo.toml\">Cargo.toml</a>.</p>\n<p>If compilation fails with <code>(signal: 9, SIGKILL: kill)</code>, this could mean your machine ran out of\nmemory during compilation. If you are on Docker, consider increasing the memory of the container, or use a <a href=\"/installation/binaries\">pre-built\nbinary</a>.</p>\n<p>If compilation fails in either the <code>keccak-asm</code> or <code>sha3-asm</code> crates, it is likely that your current\nsystem configuration is not supported. See the <a href=\"https://github.com/DaniPopes/keccak-asm?tab=readme-ov-file#support\"><code>keccak-asm</code> target table</a> for supported targets.</p>\n<p>If compilation fails with <code>error: linking with cc failed: exit code: 1</code>, try running <code>cargo clean</code>.</p>\n<p><em>(Thanks to Sigma Prime for this section from <a href=\"https://lighthouse-book.sigmaprime.io/installation.html\">their Lighthouse book</a>!)</em></p>\n","isPage":false,"text":"\nMake sure you are running the latest version of Rust. If you have installed Rust using rustup, simply run rustup update.\nIf you can&#x27;t install the latest version of Rust you can instead compile using the Minimum Supported\nRust Version (MSRV) which is listed under the rust-version key in Reth&#x27;s\nCargo.toml.\nIf compilation fails with (signal: 9, SIGKILL: kill), this could mean your machine ran out of\nmemory during compilation. If you are on Docker, consider increasing the memory of the container, or use a pre-built\nbinary.\nIf compilation fails in either the keccak-asm or sha3-asm crates, it is likely that your current\nsystem configuration is not supported. See the keccak-asm target table for supported targets.\nIf compilation fails with error: linking with cc failed: exit code: 1, try running cargo clean.\n(Thanks to Sigma Prime for this section from their Lighthouse book!)\n","title":"Compilation error","titles":["Build from Source","Troubleshooting"]},"58":{"href":"/installation/source#bus-error-wsl2","html":"\n<p>In WSL 2 on Windows, the default virtual disk size is set to 1TB.</p>\n<p>You must increase the allocated disk size for your WSL2 instance before syncing reth.</p>\n<p>You can follow the instructions here: <a href=\"https://learn.microsoft.com/en-us/windows/wsl/disk-space#how-to-expand-the-size-of-your-wsl-2-virtual-hard-disk\">how to expand the size of your WSL2 virtual hard disk.</a></p>","isPage":false,"text":"\nIn WSL 2 on Windows, the default virtual disk size is set to 1TB.\nYou must increase the allocated disk size for your WSL2 instance before syncing reth.\nYou can follow the instructions here: how to expand the size of your WSL2 virtual hard disk.","title":"Bus error (WSL2)","titles":["Build from Source","Troubleshooting"]},"59":{"href":"/jsonrpc/admin#admin-namespace","html":"</header>\n<p>The <code>admin</code> API allows you to configure your node, including adding and removing peers.</p>\n<aside data-callout=\"note\"><p>As this namespace can configure your node at runtime, it is generally <strong>not advised</strong> to expose it publicly.</p></aside>\n","isPage":true,"text":"\nThe admin API allows you to configure your node, including adding and removing peers.\nAs this namespace can configure your node at runtime, it is generally not advised to expose it publicly.\n","title":"admin Namespace","titles":[]},"60":{"href":"/jsonrpc/admin#admin_addpeer","html":"\n<p>Add the given peer to the current peer set of the node.</p>\n<p>The method accepts a single argument, the <a href=\"https://ethereum.org/en/developers/docs/networking-layer/network-addresses/#enode\"><code>enode</code></a> URL of the remote peer to connect to, and returns a <code>bool</code> indicating whether the peer was accepted or not.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;admin_addPeer&quot;, &quot;params&quot;: [url]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nAdd the given peer to the current peer set of the node.\nThe method accepts a single argument, the enode URL of the remote peer to connect to, and returns a bool indicating whether the peer was accepted or not.\nClientMethod invocationRPC{&quot;method&quot;: &quot;admin_addPeer&quot;, &quot;params&quot;: [url]}\n","title":"admin_addPeer","titles":["admin Namespace"]},"61":{"href":"/jsonrpc/admin#example","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_addPeer&quot;,&quot;params&quot;:[&quot;enode://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@52.16.188.185:30303&quot;]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_addPeer&quot;,&quot;params&quot;:[&quot;enode://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@52.16.188.185:30303&quot;]}\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;result&quot;:true}\n","title":"Example","titles":["admin Namespace","admin_addPeer"]},"62":{"href":"/jsonrpc/admin#admin_removepeer","html":"\n<p>Disconnects from a peer if the connection exists. Returns a <code>bool</code> indicating whether the peer was successfully removed or not.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;admin_removePeer&quot;, &quot;params&quot;: [url]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nDisconnects from a peer if the connection exists. Returns a bool indicating whether the peer was successfully removed or not.\nClientMethod invocationRPC{&quot;method&quot;: &quot;admin_removePeer&quot;, &quot;params&quot;: [url]}\n","title":"admin_removePeer","titles":["admin Namespace"]},"63":{"href":"/jsonrpc/admin#example-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_removePeer&quot;,&quot;params&quot;:[&quot;enode://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@52.16.188.185:30303&quot;]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_removePeer&quot;,&quot;params&quot;:[&quot;enode://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@52.16.188.185:30303&quot;]}\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;result&quot;:true}\n","title":"Example","titles":["admin Namespace","admin_removePeer"]},"64":{"href":"/jsonrpc/admin#admin_addtrustedpeer","html":"\n<p>Adds the given peer to a list of trusted peers, which allows the peer to always connect, even if there would be no room for it otherwise.</p>\n<p>It returns a <code>bool</code> indicating whether the peer was added to the list or not.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;admin_addTrustedPeer&quot;, &quot;params&quot;: [url]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nAdds the given peer to a list of trusted peers, which allows the peer to always connect, even if there would be no room for it otherwise.\nIt returns a bool indicating whether the peer was added to the list or not.\nClientMethod invocationRPC{&quot;method&quot;: &quot;admin_addTrustedPeer&quot;, &quot;params&quot;: [url]}\n","title":"admin_addTrustedPeer","titles":["admin Namespace"]},"65":{"href":"/jsonrpc/admin#example-2","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_addTrustedPeer&quot;,&quot;params&quot;:[&quot;enode://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@52.16.188.185:30303&quot;]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_addTrustedPeer&quot;,&quot;params&quot;:[&quot;enode://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@52.16.188.185:30303&quot;]}\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;result&quot;:true}\n","title":"Example","titles":["admin Namespace","admin_addTrustedPeer"]},"66":{"href":"/jsonrpc/admin#admin_removetrustedpeer","html":"\n<p>Removes a remote node from the trusted peer set, but it does not disconnect it automatically.</p>\n<p>Returns true if the peer was successfully removed.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;admin_removeTrustedPeer&quot;, &quot;params&quot;: [url]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nRemoves a remote node from the trusted peer set, but it does not disconnect it automatically.\nReturns true if the peer was successfully removed.\nClientMethod invocationRPC{&quot;method&quot;: &quot;admin_removeTrustedPeer&quot;, &quot;params&quot;: [url]}\n","title":"admin_removeTrustedPeer","titles":["admin Namespace"]},"67":{"href":"/jsonrpc/admin#example-3","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_removeTrustedPeer&quot;,&quot;params&quot;:[&quot;enode://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@52.16.188.185:30303&quot;]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_removeTrustedPeer&quot;,&quot;params&quot;:[&quot;enode://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@52.16.188.185:30303&quot;]}\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;result&quot;:true}\n","title":"Example","titles":["admin Namespace","admin_removeTrustedPeer"]},"68":{"href":"/jsonrpc/admin#admin_nodeinfo","html":"\n<p>Returns all information known about the running node.</p>\n<p>These include general information about the node itself, as well as what protocols it participates in, its IP and ports.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;admin_nodeInfo&quot;}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns all information known about the running node.\nThese include general information about the node itself, as well as what protocols it participates in, its IP and ports.\nClientMethod invocationRPC{&quot;method&quot;: &quot;admin_nodeInfo&quot;}\n","title":"admin_nodeInfo","titles":["admin Namespace"]},"69":{"href":"/jsonrpc/admin#example-4","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_nodeInfo&quot;,&quot;params&quot;:[]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;enode&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enode://44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d@[::]:30303&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;ip&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;::&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;listenAddr&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;[::]:30303&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;reth/v0.0.1/x86_64-unknown-linux-gnu&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;ports&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;discovery&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30303</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;listener&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30303</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;protocols&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;eth&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;difficulty&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">17334254859343145000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;genesis&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;head&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xb83f73fbe6220c111136aefd27b160bf4a34085c65ba89f24246b3162257c36a&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;network&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_nodeInfo&quot;,&quot;params&quot;:[]}\n{\n    &quot;jsonrpc&quot;: &quot;2.0&quot;,\n    &quot;id&quot;: 1,\n    &quot;result&quot;: {\n        &quot;enode&quot;: &quot;enode://44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d@[::]:30303&quot;,\n            &quot;id&quot;: &quot;44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d&quot;,\n            &quot;ip&quot;: &quot;::&quot;,\n            &quot;listenAddr&quot;: &quot;[::]:30303&quot;,\n            &quot;name&quot;: &quot;reth/v0.0.1/x86_64-unknown-linux-gnu&quot;,\n            &quot;ports&quot;: {\n                &quot;discovery&quot;: 30303,\n                &quot;listener&quot;: 30303\n        },\n        &quot;protocols&quot;: {\n            &quot;eth&quot;: {\n                &quot;difficulty&quot;: 17334254859343145000,\n                &quot;genesis&quot;: &quot;0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3&quot;,\n                &quot;head&quot;: &quot;0xb83f73fbe6220c111136aefd27b160bf4a34085c65ba89f24246b3162257c36a&quot;,\n                &quot;network&quot;: 1\n            }\n        }\n    }\n}\n","title":"Example","titles":["admin Namespace","admin_nodeInfo"]},"70":{"href":"/jsonrpc/admin#admin_peerevents-admin_peerevents_unsubscribe","html":"\n<p>Subscribe to events received by peers over the network. This creates a subscription that emits notifications about peer connections and disconnections.</p>\n<p>The events provide information about peer activities such as when peers connect, disconnect, or experience errors. Each event contains details about the affected peer, including its enode URL, IP address, and the reason for the event.</p>\n<p>Like other subscription methods, this returns the ID of the subscription, which is then used in all events subsequently.</p>\n<p>To unsubscribe from peer events, call <code>admin_peerEvents_unsubscribe</code> with the subscription ID.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;admin_peerEvents&quot;, &quot;params&quot;: []}</code></td></tr><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;admin_peerEvents_unsubscribe&quot;, &quot;params&quot;: [id]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nSubscribe to events received by peers over the network. This creates a subscription that emits notifications about peer connections and disconnections.\nThe events provide information about peer activities such as when peers connect, disconnect, or experience errors. Each event contains details about the affected peer, including its enode URL, IP address, and the reason for the event.\nLike other subscription methods, this returns the ID of the subscription, which is then used in all events subsequently.\nTo unsubscribe from peer events, call admin_peerEvents_unsubscribe with the subscription ID.\nClientMethod invocationRPC{&quot;method&quot;: &quot;admin_peerEvents&quot;, &quot;params&quot;: []}RPC{&quot;method&quot;: &quot;admin_peerEvents_unsubscribe&quot;, &quot;params&quot;: [id]}\n","title":"admin_peerEvents, admin_peerEvents_unsubscribe","titles":["admin Namespace"]},"71":{"href":"/jsonrpc/admin#event-types","html":"\n<p>The subscription emits events with the following structure:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;method&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;admin_subscription&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;params&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;subscription&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xcd0c3e8af590364c09d0fa6a1210faf5&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">            &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// or &quot;drop&quot;, &quot;error&quot;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">            &quot;peer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">                &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">                &quot;enode&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enode://44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d@192.168.1.1:30303&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">                &quot;addr&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;192.168.1.1:30303&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">            &quot;error&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;reason for disconnect or error&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // only present for &quot;drop&quot; and &quot;error&quot; events</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe subscription emits events with the following structure:\n{\n    &quot;jsonrpc&quot;: &quot;2.0&quot;,\n    &quot;method&quot;: &quot;admin_subscription&quot;,\n    &quot;params&quot;: {\n        &quot;subscription&quot;: &quot;0xcd0c3e8af590364c09d0fa6a1210faf5&quot;,\n        &quot;result&quot;: {\n            &quot;type&quot;: &quot;add&quot;, // or &quot;drop&quot;, &quot;error&quot;\n            &quot;peer&quot;: {\n                &quot;id&quot;: &quot;44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d&quot;,\n                &quot;enode&quot;: &quot;enode://44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d@192.168.1.1:30303&quot;,\n                &quot;addr&quot;: &quot;192.168.1.1:30303&quot;\n            },\n            &quot;error&quot;: &quot;reason for disconnect or error&quot; // only present for &quot;drop&quot; and &quot;error&quot; events\n        }\n    }\n}\n","title":"Event Types","titles":["admin Namespace","admin_peerEvents, admin_peerEvents_unsubscribe"]},"72":{"href":"/jsonrpc/admin#example-5","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_peerEvents&quot;,&quot;params&quot;:[]}</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// responds with subscription ID</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xcd0c3e8af590364c09d0fa6a1210faf5&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Example event when a peer connects</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;method&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;admin_subscription&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;params&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subscription&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xcd0c3e8af590364c09d0fa6a1210faf5&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;peer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enode&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enode://44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d@192.168.1.1:30303&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;addr&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;192.168.1.1:30303&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}}}}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Unsubscribe</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:2,&quot;method&quot;:&quot;admin_peerEvents_unsubscribe&quot;,&quot;params&quot;:[&quot;0xcd0c3e8af590364c09d0fa6a1210faf5&quot;]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;admin_peerEvents&quot;,&quot;params&quot;:[]}\n// responds with subscription ID\n{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;id&quot;: 1, &quot;result&quot;: &quot;0xcd0c3e8af590364c09d0fa6a1210faf5&quot;}\n \n// Example event when a peer connects\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;admin_subscription&quot;,&quot;params&quot;:{&quot;subscription&quot;:&quot;0xcd0c3e8af590364c09d0fa6a1210faf5&quot;,&quot;result&quot;:{&quot;type&quot;:&quot;add&quot;,&quot;peer&quot;:{&quot;id&quot;:&quot;44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d&quot;,&quot;enode&quot;:&quot;enode://44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d@192.168.1.1:30303&quot;,&quot;addr&quot;:&quot;192.168.1.1:30303&quot;}}}}\n \n// Unsubscribe\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:2,&quot;method&quot;:&quot;admin_peerEvents_unsubscribe&quot;,&quot;params&quot;:[&quot;0xcd0c3e8af590364c09d0fa6a1210faf5&quot;]}\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:2,&quot;result&quot;:true}","title":"Example","titles":["admin Namespace","admin_peerEvents, admin_peerEvents_unsubscribe"]},"73":{"href":"/jsonrpc/debug#debug-namespace","html":"</header>\n<p>The <code>debug</code> API provides several methods to inspect the Ethereum state, including Geth-style traces.</p>\n","isPage":true,"text":"\nThe debug API provides several methods to inspect the Ethereum state, including Geth-style traces.\n","title":"debug Namespace","titles":[]},"74":{"href":"/jsonrpc/debug#debug_getrawheader","html":"\n<p>Returns an RLP-encoded header.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;debug_getRawHeader&quot;, &quot;params&quot;: [block]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns an RLP-encoded header.\nClientMethod invocationRPC{&quot;method&quot;: &quot;debug_getRawHeader&quot;, &quot;params&quot;: [block]}\n","title":"debug_getRawHeader","titles":["debug Namespace"]},"75":{"href":"/jsonrpc/debug#debug_getrawblock","html":"\n<p>Retrieves and returns the RLP encoded block by number, hash or tag.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;debug_getRawBlock&quot;, &quot;params&quot;: [block]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nRetrieves and returns the RLP encoded block by number, hash or tag.\nClientMethod invocationRPC{&quot;method&quot;: &quot;debug_getRawBlock&quot;, &quot;params&quot;: [block]}\n","title":"debug_getRawBlock","titles":["debug Namespace"]},"76":{"href":"/jsonrpc/debug#debug_getrawtransaction","html":"\n<p>Returns an EIP-2718 binary-encoded transaction.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;debug_getRawTransaction&quot;, &quot;params&quot;: [tx_hash]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns an EIP-2718 binary-encoded transaction.\nClientMethod invocationRPC{&quot;method&quot;: &quot;debug_getRawTransaction&quot;, &quot;params&quot;: [tx_hash]}\n","title":"debug_getRawTransaction","titles":["debug Namespace"]},"77":{"href":"/jsonrpc/debug#debug_getrawreceipts","html":"\n<p>Returns an array of EIP-2718 binary-encoded receipts.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;debug_getRawReceipts&quot;, &quot;params&quot;: [block]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns an array of EIP-2718 binary-encoded receipts.\nClientMethod invocationRPC{&quot;method&quot;: &quot;debug_getRawReceipts&quot;, &quot;params&quot;: [block]}\n","title":"debug_getRawReceipts","titles":["debug Namespace"]},"78":{"href":"/jsonrpc/debug#debug_getbadblocks","html":"\n<p>Returns an array of recent bad blocks that the client has seen on the network.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;debug_getBadBlocks&quot;, &quot;params&quot;: []}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns an array of recent bad blocks that the client has seen on the network.\nClientMethod invocationRPC{&quot;method&quot;: &quot;debug_getBadBlocks&quot;, &quot;params&quot;: []}\n","title":"debug_getBadBlocks","titles":["debug Namespace"]},"79":{"href":"/jsonrpc/debug#debug_tracechain","html":"\n<p>Returns the structured logs created during the execution of EVM between two blocks (excluding start) as a JSON object.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;debug_traceChain&quot;, &quot;params&quot;: [start_block, end_block]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns the structured logs created during the execution of EVM between two blocks (excluding start) as a JSON object.\nClientMethod invocationRPC{&quot;method&quot;: &quot;debug_traceChain&quot;, &quot;params&quot;: [start_block, end_block]}\n","title":"debug_traceChain","titles":["debug Namespace"]},"80":{"href":"/jsonrpc/debug#debug_traceblock","html":"\n<p>The <code>debug_traceBlock</code> method will return a full stack trace of all invoked opcodes of all transaction that were included in this block.</p>\n<p>This expects an RLP-encoded block.</p>\n<blockquote>\n<strong>Note</strong>\n<p>The parent of this block must be present, or it will fail.</p>\n</blockquote>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;debug_traceBlock&quot;, &quot;params&quot;: [rlp, opts]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nThe debug_traceBlock method will return a full stack trace of all invoked opcodes of all transaction that were included in this block.\nThis expects an RLP-encoded block.\n\nNote\nThe parent of this block must be present, or it will fail.\n\nClientMethod invocationRPC{&quot;method&quot;: &quot;debug_traceBlock&quot;, &quot;params&quot;: [rlp, opts]}\n","title":"debug_traceBlock","titles":["debug Namespace"]},"81":{"href":"/jsonrpc/debug#debug_traceblockbyhash","html":"\n<p>Similar to <a href=\"#debug_traceblock\"><code>debug_traceBlock</code></a>, <code>debug_traceBlockByHash</code> accepts a block hash and will replay the block that is already present in the database.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;debug_traceBlockByHash&quot;, &quot;params&quot;: [block_hash, opts]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nSimilar to debug_traceBlock, debug_traceBlockByHash accepts a block hash and will replay the block that is already present in the database.\nClientMethod invocationRPC{&quot;method&quot;: &quot;debug_traceBlockByHash&quot;, &quot;params&quot;: [block_hash, opts]}\n","title":"debug_traceBlockByHash","titles":["debug Namespace"]},"82":{"href":"/jsonrpc/debug#debug_traceblockbynumber","html":"\n<p>Similar to <a href=\"#debug_traceblockbyhash\"><code>debug_traceBlockByHash</code></a>, <code>debug_traceBlockByNumber</code> accepts a block number and will replay the block that is already present in the database.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;debug_traceBlockByNumber&quot;, &quot;params&quot;: [block_number, opts]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nSimilar to debug_traceBlockByHash, debug_traceBlockByNumber accepts a block number and will replay the block that is already present in the database.\nClientMethod invocationRPC{&quot;method&quot;: &quot;debug_traceBlockByNumber&quot;, &quot;params&quot;: [block_number, opts]}\n","title":"debug_traceBlockByNumber","titles":["debug Namespace"]},"83":{"href":"/jsonrpc/debug#debug_tracetransaction","html":"\n<p>The <code>debug_traceTransaction</code> debugging method will attempt to run the transaction in the exact same manner as it was executed on the network. It will replay any transaction that may have been executed prior to this one before it will finally attempt to execute the transaction that corresponds to the given hash.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;debug_traceTransaction&quot;, &quot;params&quot;: [tx_hash, opts]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nThe debug_traceTransaction debugging method will attempt to run the transaction in the exact same manner as it was executed on the network. It will replay any transaction that may have been executed prior to this one before it will finally attempt to execute the transaction that corresponds to the given hash.\nClientMethod invocationRPC{&quot;method&quot;: &quot;debug_traceTransaction&quot;, &quot;params&quot;: [tx_hash, opts]}\n","title":"debug_traceTransaction","titles":["debug Namespace"]},"84":{"href":"/jsonrpc/debug#debug_tracecall","html":"\n<p>The <code>debug_traceCall</code> method lets you run an <code>eth_call</code> within the context of the given block execution using the final state of parent block as the base.</p>\n<p>The first argument (just as in <code>eth_call</code>) is a transaction request.</p>\n<p>The block can optionally be specified either by hash or by number as the second argument.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;debug_traceCall&quot;, &quot;params&quot;: [call, block_number, opts]}</code></td></tr></tbody></table>","isPage":false,"text":"\nThe debug_traceCall method lets you run an eth_call within the context of the given block execution using the final state of parent block as the base.\nThe first argument (just as in eth_call) is a transaction request.\nThe block can optionally be specified either by hash or by number as the second argument.\nClientMethod invocationRPC{&quot;method&quot;: &quot;debug_traceCall&quot;, &quot;params&quot;: [call, block_number, opts]}","title":"debug_traceCall","titles":["debug Namespace"]},"85":{"href":"/jsonrpc/eth#eth-namespace","html":"</header>\n<p>Documentation for the API methods in the <code>eth</code> namespace can be found on <a href=\"https://ethereum.org/en/developers/docs/apis/json-rpc/\">ethereum.org</a>.</p>","isPage":true,"text":"\nDocumentation for the API methods in the eth namespace can be found on ethereum.org.","title":"eth Namespace","titles":[]},"86":{"href":"/jsonrpc/intro#json-rpc","html":"</header>\n<p>You can interact with Reth over JSON-RPC. Reth supports all standard Ethereum JSON-RPC API methods.</p>\n<p>JSON-RPC is provided on multiple transports. Reth supports HTTP, WebSocket and IPC (both UNIX sockets and Windows named pipes). Transports must be enabled through command-line flags.</p>\n<p>The JSON-RPC APIs are grouped into namespaces, depending on their purpose. All method names are composed of their namespace and their name, separated by an underscore.</p>\n<p>Each namespace must be explicitly enabled.</p>\n","isPage":true,"text":"\nYou can interact with Reth over JSON-RPC. Reth supports all standard Ethereum JSON-RPC API methods.\nJSON-RPC is provided on multiple transports. Reth supports HTTP, WebSocket and IPC (both UNIX sockets and Windows named pipes). Transports must be enabled through command-line flags.\nThe JSON-RPC APIs are grouped into namespaces, depending on their purpose. All method names are composed of their namespace and their name, separated by an underscore.\nEach namespace must be explicitly enabled.\n","title":"JSON-RPC","titles":[]},"87":{"href":"/jsonrpc/intro#namespaces","html":"\n<p>The methods are grouped into namespaces, which are listed below:</p>\n<table><thead><tr><th>Namespace</th><th>Description</th><th>Sensitive</th></tr></thead><tbody><tr><td><a href=\"./eth\"><code>eth</code></a></td><td>The <code>eth</code> API allows you to interact with Ethereum.</td><td>Maybe</td></tr><tr><td><a href=\"./web3\"><code>web3</code></a></td><td>The <code>web3</code> API provides utility functions for the web3 client.</td><td>No</td></tr><tr><td><a href=\"./net\"><code>net</code></a></td><td>The <code>net</code> API provides access to network information of the node.</td><td>No</td></tr><tr><td><a href=\"./txpool\"><code>txpool</code></a></td><td>The <code>txpool</code> API allows you to inspect the transaction pool.</td><td>No</td></tr><tr><td><a href=\"./debug\"><code>debug</code></a></td><td>The <code>debug</code> API provides several methods to inspect the Ethereum state, including Geth-style traces.</td><td>No</td></tr><tr><td><a href=\"./trace\"><code>trace</code></a></td><td>The <code>trace</code> API provides several methods to inspect the Ethereum state, including Parity-style traces.</td><td>No</td></tr><tr><td><a href=\"./admin\"><code>admin</code></a></td><td>The <code>admin</code> API allows you to configure your node.</td><td><strong>Yes</strong></td></tr><tr><td><a href=\"./rpc\"><code>rpc</code></a></td><td>The <code>rpc</code> API provides information about the RPC server and its modules.</td><td>No</td></tr></tbody></table>\n<p>Note that some APIs are sensitive, since they can be used to configure your node (<code>admin</code>), or access accounts stored on the node (<code>eth</code>).</p>\n<p>Generally, it is advisable to not expose any JSONRPC namespace publicly, unless you know what you are doing.</p>\n","isPage":false,"text":"\nThe methods are grouped into namespaces, which are listed below:\nNamespaceDescriptionSensitiveethThe eth API allows you to interact with Ethereum.Maybeweb3The web3 API provides utility functions for the web3 client.NonetThe net API provides access to network information of the node.NotxpoolThe txpool API allows you to inspect the transaction pool.NodebugThe debug API provides several methods to inspect the Ethereum state, including Geth-style traces.NotraceThe trace API provides several methods to inspect the Ethereum state, including Parity-style traces.NoadminThe admin API allows you to configure your node.YesrpcThe rpc API provides information about the RPC server and its modules.No\nNote that some APIs are sensitive, since they can be used to configure your node (admin), or access accounts stored on the node (eth).\nGenerally, it is advisable to not expose any JSONRPC namespace publicly, unless you know what you are doing.\n","title":"Namespaces","titles":["JSON-RPC"]},"88":{"href":"/jsonrpc/intro#transports","html":"\n<p>Reth supports HTTP, WebSockets and IPC.</p>\n","isPage":false,"text":"\nReth supports HTTP, WebSockets and IPC.\n","title":"Transports","titles":["JSON-RPC"]},"89":{"href":"/jsonrpc/intro#http","html":"\n<p>Using the HTTP transport, clients send a request to the server and immediately get a response back. The connection is closed after the response for a given request is sent.</p>\n<p>Because HTTP is unidirectional, subscriptions are not supported.</p>\n<p>To start an HTTP server, pass <code>--http</code> to <code>reth node</code>:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http</span></span></code></pre>\n<p>The default port is <code>8545</code>, and the default listen address is localhost.</p>\n<p>You can configure the listen address and port using <code>--http.addr</code> and <code>--http.port</code> respectively:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http.addr</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 127.0.0.1</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http.port</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 12345</span></span></code></pre>\n<p>To enable JSON-RPC namespaces on the HTTP server, pass each namespace separated by a comma to <code>--http.api</code>:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http.api</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> eth,net,trace</span></span></code></pre>\n<p>You can pass the <code>all</code> option, which is a convenient wrapper for all the JSON-RPC namespaces <code>admin,debug,eth,net,trace,txpool,web3,rpc</code> on the HTTP server:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http.api</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> all</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http.api</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> All</span></span></code></pre>\n<p>You can also restrict who can access the HTTP server by specifying a domain for Cross-Origin requests. This is important, since any application local to your node will be able to access the RPC server:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http.corsdomain</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://mycoolapp.rs</span></span></code></pre>\n<p>Alternatively, if you want to allow any domain, you can pass <code>*</code>:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http.corsdomain</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;*&quot;</span></span></code></pre>\n","isPage":false,"text":"\nUsing the HTTP transport, clients send a request to the server and immediately get a response back. The connection is closed after the response for a given request is sent.\nBecause HTTP is unidirectional, subscriptions are not supported.\nTo start an HTTP server, pass --http to reth node:\nreth node --http\nThe default port is 8545, and the default listen address is localhost.\nYou can configure the listen address and port using --http.addr and --http.port respectively:\nreth node --http --http.addr 127.0.0.1 --http.port 12345\nTo enable JSON-RPC namespaces on the HTTP server, pass each namespace separated by a comma to --http.api:\nreth node --http --http.api eth,net,trace\nYou can pass the all option, which is a convenient wrapper for all the JSON-RPC namespaces admin,debug,eth,net,trace,txpool,web3,rpc on the HTTP server:\nreth node --http --http.api all\nreth node --http --http.api All\nYou can also restrict who can access the HTTP server by specifying a domain for Cross-Origin requests. This is important, since any application local to your node will be able to access the RPC server:\nreth node --http --http.corsdomain https://mycoolapp.rs\nAlternatively, if you want to allow any domain, you can pass *:\nreth node --http --http.corsdomain &quot;*&quot;\n","title":"HTTP","titles":["JSON-RPC","Transports"]},"90":{"href":"/jsonrpc/intro#websockets","html":"\n<p>WebSockets is a bidirectional transport protocol. Most modern browsers support WebSockets.</p>\n<p>A WebSocket connection is maintained until it is explicitly terminated by either the client or the node.</p>\n<p>Because WebSockets are bidirectional, nodes can push events to clients, which enables clients to subscribe to specific events, such as new transactions in the transaction pool, and new logs for smart contracts.</p>\n<p>The configuration of the WebSocket server follows the same pattern as the HTTP server:</p>\n<ul>\n<li>Enable it using <code>--ws</code></li>\n<li>Configure the server address by passing <code>--ws.addr</code> and <code>--ws.port</code> (default <code>8546</code>)</li>\n<li>Configure cross-origin requests using <code>--ws.origins</code></li>\n<li>Enable APIs using <code>--ws.api</code></li>\n</ul>\n","isPage":false,"text":"\nWebSockets is a bidirectional transport protocol. Most modern browsers support WebSockets.\nA WebSocket connection is maintained until it is explicitly terminated by either the client or the node.\nBecause WebSockets are bidirectional, nodes can push events to clients, which enables clients to subscribe to specific events, such as new transactions in the transaction pool, and new logs for smart contracts.\nThe configuration of the WebSocket server follows the same pattern as the HTTP server:\n\nEnable it using --ws\nConfigure the server address by passing --ws.addr and --ws.port (default 8546)\nConfigure cross-origin requests using --ws.origins\nEnable APIs using --ws.api\n\n","title":"WebSockets","titles":["JSON-RPC","Transports"]},"91":{"href":"/jsonrpc/intro#ipc","html":"\n<p>IPC is a simpler transport protocol for use in local environments where the node and the client exist on the same machine.</p>\n<p>The IPC transport is enabled by default and has access to all namespaces, unless explicitly disabled with <code>--ipcdisable</code>.</p>\n<p>Reth creates a UNIX socket on Linux and macOS at <code>/tmp/reth.ipc</code>. On Windows, IPC is provided using named pipes at <code>\\\\.\\pipe\\reth.ipc</code>.</p>\n<p>You can configure the IPC path using <code>--ipcpath</code>.</p>\n","isPage":false,"text":"\nIPC is a simpler transport protocol for use in local environments where the node and the client exist on the same machine.\nThe IPC transport is enabled by default and has access to all namespaces, unless explicitly disabled with --ipcdisable.\nReth creates a UNIX socket on Linux and macOS at /tmp/reth.ipc. On Windows, IPC is provided using named pipes at \\\\.\\pipe\\reth.ipc.\nYou can configure the IPC path using --ipcpath.\n","title":"IPC","titles":["JSON-RPC","Transports"]},"92":{"href":"/jsonrpc/intro#interacting-with-the-rpc","html":"\n<p>One can easily interact with these APIs just like they would with any Ethereum client.</p>\n<p>You can use <code>curl</code>, a programming language with a low-level library, or a tool like Foundry to interact with the chain at the exposed HTTP or WS port.</p>\n<p>As a reminder, you need to run the command below to enable all of these APIs using an HTTP transport:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --http.api</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;admin,debug,eth,net,trace,txpool,web3,rpc&quot;</span></span></code></pre>\n<p>This allows you to then call:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cast</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> block-number</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cast</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> rpc</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> admin_nodeInfo</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cast</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> rpc</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> debug_traceTransaction</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cast</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> rpc</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> trace_replayBlockTransactions</span></span></code></pre>","isPage":false,"text":"\nOne can easily interact with these APIs just like they would with any Ethereum client.\nYou can use curl, a programming language with a low-level library, or a tool like Foundry to interact with the chain at the exposed HTTP or WS port.\nAs a reminder, you need to run the command below to enable all of these APIs using an HTTP transport:\nreth node --http --http.api &quot;admin,debug,eth,net,trace,txpool,web3,rpc&quot;\nThis allows you to then call:\ncast block-number\ncast rpc admin_nodeInfo\ncast rpc debug_traceTransaction\ncast rpc trace_replayBlockTransactions","title":"Interacting with the RPC","titles":["JSON-RPC"]},"93":{"href":"/jsonrpc/net#net-namespace","html":"</header>\n<p>The <code>net</code> API provides information about the networking component of the node.</p>\n","isPage":true,"text":"\nThe net API provides information about the networking component of the node.\n","title":"net Namespace","titles":[]},"94":{"href":"/jsonrpc/net#net_listening","html":"\n<p>Returns a <code>bool</code> indicating whether or not the node is listening for network connections.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;net_listening&quot;, &quot;params&quot;: []}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns a bool indicating whether or not the node is listening for network connections.\nClientMethod invocationRPC{&quot;method&quot;: &quot;net_listening&quot;, &quot;params&quot;: []}\n","title":"net_listening","titles":["net Namespace"]},"95":{"href":"/jsonrpc/net#example","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;net_listening&quot;,&quot;params&quot;:[]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;net_listening&quot;,&quot;params&quot;:[]}\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;result&quot;:true}\n","title":"Example","titles":["net Namespace","net_listening"]},"96":{"href":"/jsonrpc/net#net_peercount","html":"\n<p>Returns the number of peers connected to the node.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;net_peerCount&quot;, &quot;params&quot;: []}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns the number of peers connected to the node.\nClientMethod invocationRPC{&quot;method&quot;: &quot;net_peerCount&quot;, &quot;params&quot;: []}\n","title":"net_peerCount","titles":["net Namespace"]},"97":{"href":"/jsonrpc/net#example-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;net_peerCount&quot;,&quot;params&quot;:[]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;net_peerCount&quot;,&quot;params&quot;:[]}\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;result&quot;:10}\n","title":"Example","titles":["net Namespace","net_peerCount"]},"98":{"href":"/jsonrpc/net#net_version","html":"\n<p>Returns the network ID (e.g. 1 for mainnet)</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;net_version&quot;, &quot;params&quot;: []}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns the network ID (e.g. 1 for mainnet)\nClientMethod invocationRPC{&quot;method&quot;: &quot;net_version&quot;, &quot;params&quot;: []}\n","title":"net_version","titles":["net Namespace"]},"99":{"href":"/jsonrpc/net#example-2","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;net_version&quot;,&quot;params&quot;:[]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;net_version&quot;,&quot;params&quot;:[]}\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;result&quot;:1}","title":"Example","titles":["net Namespace","net_version"]},"100":{"href":"/jsonrpc/rpc#rpc-namespace","html":"</header>\n<p>The <code>rpc</code> API provides methods to get information about the RPC server itself, such as the enabled namespaces.</p>\n","isPage":true,"text":"\nThe rpc API provides methods to get information about the RPC server itself, such as the enabled namespaces.\n","title":"rpc Namespace","titles":[]},"101":{"href":"/jsonrpc/rpc#rpc_modules","html":"\n<p>Lists the enabled RPC namespaces and the versions of each.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;rpc_modules&quot;, &quot;params&quot;: []}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nLists the enabled RPC namespaces and the versions of each.\nClientMethod invocationRPC{&quot;method&quot;: &quot;rpc_modules&quot;, &quot;params&quot;: []}\n","title":"rpc_modules","titles":["rpc Namespace"]},"102":{"href":"/jsonrpc/rpc#example","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;rpc_modules&quot;,&quot;params&quot;:[]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;txpool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;eth&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;rpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;rpc_modules&quot;,&quot;params&quot;:[]}\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;result&quot;:{&quot;txpool&quot;:&quot;1.0&quot;,&quot;eth&quot;:&quot;1.0&quot;,&quot;rpc&quot;:&quot;1.0&quot;}}\n","title":"Example","titles":["rpc Namespace","rpc_modules"]},"103":{"href":"/jsonrpc/rpc#handling-responses-during-syncing","html":"\n<p>When interacting with the RPC server while it is still syncing, some RPC requests may return an empty or null response, while others return the expected results. This behavior can be observed due to the asynchronous nature of the syncing process and the availability of required data. Notably, endpoints that rely on specific stages of the syncing process, such as the execution stage, might not be available until those stages are complete.</p>\n<p>It&#x27;s important to understand that during pipeline sync, some endpoints may not be accessible until the necessary data is fully synchronized. For instance, the <code>eth_getBlockReceipts</code> endpoint is only expected to return valid data after the execution stage, where receipts are generated, has completed. As a result, certain RPC requests may return empty or null responses until the respective stages are finished.</p>\n<p>This behavior is intrinsic to how the syncing mechanism works and is not indicative of an issue or bug. If you encounter such responses while the node is still syncing, it&#x27;s recommended to wait until the sync process is complete to ensure accurate and expected RPC responses.</p>","isPage":false,"text":"\nWhen interacting with the RPC server while it is still syncing, some RPC requests may return an empty or null response, while others return the expected results. This behavior can be observed due to the asynchronous nature of the syncing process and the availability of required data. Notably, endpoints that rely on specific stages of the syncing process, such as the execution stage, might not be available until those stages are complete.\nIt&#x27;s important to understand that during pipeline sync, some endpoints may not be accessible until the necessary data is fully synchronized. For instance, the eth_getBlockReceipts endpoint is only expected to return valid data after the execution stage, where receipts are generated, has completed. As a result, certain RPC requests may return empty or null responses until the respective stages are finished.\nThis behavior is intrinsic to how the syncing mechanism works and is not indicative of an issue or bug. If you encounter such responses while the node is still syncing, it&#x27;s recommended to wait until the sync process is complete to ensure accurate and expected RPC responses.","title":"Handling Responses During Syncing","titles":["rpc Namespace"]},"104":{"href":"/jsonrpc/trace#trace-namespace","html":"</header>\n\n<p>The <code>trace</code> API provides several methods to inspect the Ethereum state, including Parity-style traces.</p>\n<p>A similar module exists (with other debug functions) with Geth-style traces (<a href=\"./debug\"><code>debug</code></a>).</p>\n<p>The <code>trace</code> API gives deeper insight into transaction processing.</p>\n<p>There are two types of methods in this API:</p>\n<ul>\n<li><strong>Ad-hoc tracing APIs</strong> for performing diagnostics on calls or transactions (historical or hypothetical).</li>\n<li><strong>Transaction-trace filtering APIs</strong> for getting full externality traces on any transaction executed by reth.</li>\n</ul>\n","isPage":true,"text":"\n\nThe trace API provides several methods to inspect the Ethereum state, including Parity-style traces.\nA similar module exists (with other debug functions) with Geth-style traces (debug).\nThe trace API gives deeper insight into transaction processing.\nThere are two types of methods in this API:\n\nAd-hoc tracing APIs for performing diagnostics on calls or transactions (historical or hypothetical).\nTransaction-trace filtering APIs for getting full externality traces on any transaction executed by reth.\n\n","title":"trace Namespace","titles":[]},"105":{"href":"/jsonrpc/trace#ad-hoc-tracing-apis","html":"\n<p>Ad-hoc tracing APIs allow you to perform diagnostics on calls or transactions (historical or hypothetical), including:</p>\n<ul>\n<li>Transaction traces (<code>trace</code>)</li>\n<li>VM traces (<code>vmTrace</code>)</li>\n<li>State difference traces (<code>stateDiff</code>)</li>\n</ul>\n<p>The ad-hoc tracing APIs are:</p>\n<ul>\n<li><a href=\"#trace_call\"><code>trace_call</code></a></li>\n<li><a href=\"#trace_callmany\"><code>trace_callMany</code></a></li>\n<li><a href=\"#trace_rawtransaction\"><code>trace_rawTransaction</code></a></li>\n<li><a href=\"#trace_replayblocktransactions\"><code>trace_replayBlockTransactions</code></a></li>\n<li><a href=\"#trace_replaytransaction\"><code>trace_replayTransaction</code></a></li>\n</ul>\n","isPage":false,"text":"\nAd-hoc tracing APIs allow you to perform diagnostics on calls or transactions (historical or hypothetical), including:\n\nTransaction traces (trace)\nVM traces (vmTrace)\nState difference traces (stateDiff)\n\nThe ad-hoc tracing APIs are:\n\ntrace_call\ntrace_callMany\ntrace_rawTransaction\ntrace_replayBlockTransactions\ntrace_replayTransaction\n\n","title":"Ad-hoc tracing APIs","titles":["trace Namespace"]},"106":{"href":"/jsonrpc/trace#transaction-trace-filtering-apis","html":"\n<p>Transaction trace filtering APIs are similar to log filtering APIs in the <code>eth</code> namespace, except these allow you to search and filter based only upon address information.</p>\n<p>Information returned includes the execution of all contract creations, destructions, and calls, together with their input data, output data, gas usage, transfer amounts and success statuses.</p>\n<p>The transaction trace filtering APIs are:</p>\n<ul>\n<li><a href=\"#trace_block\"><code>trace_block</code></a></li>\n<li><a href=\"#trace_filter\"><code>trace_filter</code></a></li>\n<li><a href=\"#trace_get\"><code>trace_get</code></a></li>\n<li><a href=\"#trace_transaction\"><code>trace_transaction</code></a></li>\n</ul>\n","isPage":false,"text":"\nTransaction trace filtering APIs are similar to log filtering APIs in the eth namespace, except these allow you to search and filter based only upon address information.\nInformation returned includes the execution of all contract creations, destructions, and calls, together with their input data, output data, gas usage, transfer amounts and success statuses.\nThe transaction trace filtering APIs are:\n\ntrace_block\ntrace_filter\ntrace_get\ntrace_transaction\n\n","title":"Transaction-trace filtering APIs","titles":["trace Namespace"]},"107":{"href":"/jsonrpc/trace#trace_call","html":"\n<p>Executes the given call and returns a number of possible traces for it.</p>\n<p>The first parameter is a transaction object where the <code>from</code> field is optional and the <code>nonce</code> field is omitted.</p>\n<p>The second parameter is an array of one or more trace types (<code>vmTrace</code>, <code>trace</code>, <code>stateDiff</code>).</p>\n<p>The third and optional parameter is a block number, block hash, or a block tag (<code>latest</code>, <code>finalized</code>, <code>safe</code>, <code>earliest</code>, <code>pending</code>).</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;trace_call&quot;, &quot;params&quot;: [tx, type[], block]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nExecutes the given call and returns a number of possible traces for it.\nThe first parameter is a transaction object where the from field is optional and the nonce field is omitted.\nThe second parameter is an array of one or more trace types (vmTrace, trace, stateDiff).\nThe third and optional parameter is a block number, block hash, or a block tag (latest, finalized, safe, earliest, pending).\nClientMethod invocationRPC{&quot;method&quot;: &quot;trace_call&quot;, &quot;params&quot;: [tx, type[], block]}\n","title":"trace_call","titles":["trace Namespace"]},"108":{"href":"/jsonrpc/trace#example","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_call&quot;,&quot;params&quot;:[{},[&quot;trace&quot;]]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;stateDiff&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;trace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;action&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;gasUsed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;subtraces&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;traceAddress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;vmTrace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_call&quot;,&quot;params&quot;:[{},[&quot;trace&quot;]]}\n{\n    &quot;id&quot;: 1,\n    &quot;jsonrpc&quot;: &quot;2.0&quot;,\n    &quot;result&quot;: {\n        &quot;output&quot;: &quot;0x&quot;,\n        &quot;stateDiff&quot;: null,\n        &quot;trace&quot;: [{\n            &quot;action&quot;: { ... },\n            &quot;result&quot;: {\n                &quot;gasUsed&quot;: &quot;0x0&quot;,\n                &quot;output&quot;: &quot;0x&quot;\n            },\n            &quot;subtraces&quot;: 0,\n            &quot;traceAddress&quot;: [],\n            &quot;type&quot;: &quot;call&quot;\n        }],\n        &quot;vmTrace&quot;: null\n    }\n}\n","title":"Example","titles":["trace Namespace","trace_call"]},"109":{"href":"/jsonrpc/trace#trace_callmany","html":"\n<p>Performs multiple call traces on top of the same block, that is, transaction <code>n</code> will be executed on top of a pending block with all <code>n - 1</code> transaction applied (and traced) first.</p>\n<p>The first parameter is a list of call traces, where each call trace is of the form <code>[tx, type[]]</code> (see <a href=\"#trace_call\"><code>trace_call</code></a>).</p>\n<p>The second and optional parameter is a block number, block hash, or a block tag (<code>latest</code>, <code>finalized</code>, <code>safe</code>, <code>earliest</code>, <code>pending</code>).</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;trace_call&quot;, &quot;params&quot;: [trace[], block]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nPerforms multiple call traces on top of the same block, that is, transaction n will be executed on top of a pending block with all n - 1 transaction applied (and traced) first.\nThe first parameter is a list of call traces, where each call trace is of the form [tx, type[]] (see trace_call).\nThe second and optional parameter is a block number, block hash, or a block tag (latest, finalized, safe, earliest, pending).\nClientMethod invocationRPC{&quot;method&quot;: &quot;trace_call&quot;, &quot;params&quot;: [trace[], block]}\n","title":"trace_callMany","titles":["trace Namespace"]},"110":{"href":"/jsonrpc/trace#example-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_callMany&quot;,&quot;params&quot;:[[[{&quot;from&quot;:&quot;0x407d73d8a49eeb85d32cf465507dd71d507100c1&quot;,&quot;to&quot;:&quot;0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b&quot;,&quot;value&quot;:&quot;0x186a0&quot;},[&quot;trace&quot;]],[{&quot;from&quot;:&quot;0x407d73d8a49eeb85d32cf465507dd71d507100c1&quot;,&quot;to&quot;:&quot;0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b&quot;,&quot;value&quot;:&quot;0x186a0&quot;},[&quot;trace&quot;]]],&quot;latest&quot;]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;stateDiff&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;trace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;action&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;callType&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;from&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x407d73d8a49eeb85d32cf465507dd71d507100c1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;gas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x1dcd12f8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;to&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x186a0&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;gasUsed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;subtraces&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;traceAddress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;vmTrace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;stateDiff&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;trace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;action&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;callType&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;from&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x407d73d8a49eeb85d32cf465507dd71d507100c1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;gas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x1dcd12f8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;to&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x186a0&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;gasUsed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;subtraces&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;traceAddress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;vmTrace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_callMany&quot;,&quot;params&quot;:[[[{&quot;from&quot;:&quot;0x407d73d8a49eeb85d32cf465507dd71d507100c1&quot;,&quot;to&quot;:&quot;0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b&quot;,&quot;value&quot;:&quot;0x186a0&quot;},[&quot;trace&quot;]],[{&quot;from&quot;:&quot;0x407d73d8a49eeb85d32cf465507dd71d507100c1&quot;,&quot;to&quot;:&quot;0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b&quot;,&quot;value&quot;:&quot;0x186a0&quot;},[&quot;trace&quot;]]],&quot;latest&quot;]}\n{\n    &quot;id&quot;: 1,\n    &quot;jsonrpc&quot;: &quot;2.0&quot;,\n    &quot;result&quot;: [\n        {\n            &quot;output&quot;: &quot;0x&quot;,\n            &quot;stateDiff&quot;: null,\n            &quot;trace&quot;: [{\n                &quot;action&quot;: {\n                    &quot;callType&quot;: &quot;call&quot;,\n                    &quot;from&quot;: &quot;0x407d73d8a49eeb85d32cf465507dd71d507100c1&quot;,\n                    &quot;gas&quot;: &quot;0x1dcd12f8&quot;,\n                    &quot;input&quot;: &quot;0x&quot;,\n                    &quot;to&quot;: &quot;0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b&quot;,\n                    &quot;value&quot;: &quot;0x186a0&quot;\n                },\n                &quot;result&quot;: {\n                    &quot;gasUsed&quot;: &quot;0x0&quot;,\n                    &quot;output&quot;: &quot;0x&quot;\n                },\n                &quot;subtraces&quot;: 0,\n                &quot;traceAddress&quot;: [],\n                &quot;type&quot;: &quot;call&quot;\n            }],\n            &quot;vmTrace&quot;: null\n        },\n        {\n            &quot;output&quot;: &quot;0x&quot;,\n            &quot;stateDiff&quot;: null,\n            &quot;trace&quot;: [{\n                &quot;action&quot;: {\n                    &quot;callType&quot;: &quot;call&quot;,\n                    &quot;from&quot;: &quot;0x407d73d8a49eeb85d32cf465507dd71d507100c1&quot;,\n                    &quot;gas&quot;: &quot;0x1dcd12f8&quot;,\n                    &quot;input&quot;: &quot;0x&quot;,\n                    &quot;to&quot;: &quot;0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b&quot;,\n                    &quot;value&quot;: &quot;0x186a0&quot;\n                },\n                &quot;result&quot;: {\n                    &quot;gasUsed&quot;: &quot;0x0&quot;,\n                    &quot;output&quot;: &quot;0x&quot;\n                },\n                &quot;subtraces&quot;: 0,\n                &quot;traceAddress&quot;: [],\n                &quot;type&quot;: &quot;call&quot;\n            }],\n            &quot;vmTrace&quot;: null\n        }\n    ]\n}\n","title":"Example","titles":["trace Namespace","trace_callMany"]},"111":{"href":"/jsonrpc/trace#trace_rawtransaction","html":"\n<p>Traces a call to <code>eth_sendRawTransaction</code> without making the call, returning the traces.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;trace_call&quot;, &quot;params&quot;: [raw_tx, type[]]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nTraces a call to eth_sendRawTransaction without making the call, returning the traces.\nClientMethod invocationRPC{&quot;method&quot;: &quot;trace_call&quot;, &quot;params&quot;: [raw_tx, type[]]}\n","title":"trace_rawTransaction","titles":["trace Namespace"]},"112":{"href":"/jsonrpc/trace#example-2","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_rawTransaction&quot;,&quot;params&quot;:[&quot;0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675&quot;,[&quot;trace&quot;]]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;stateDiff&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;trace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;action&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;gasUsed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;subtraces&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;traceAddress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;vmTrace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_rawTransaction&quot;,&quot;params&quot;:[&quot;0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675&quot;,[&quot;trace&quot;]]}\n{\n    &quot;id&quot;: 1,\n    &quot;jsonrpc&quot;: &quot;2.0&quot;,\n    &quot;result&quot;: {\n        &quot;output&quot;: &quot;0x&quot;,\n            &quot;stateDiff&quot;: null,\n            &quot;trace&quot;: [{\n            &quot;action&quot;: { ... },\n            &quot;result&quot;: {\n                &quot;gasUsed&quot;: &quot;0x0&quot;,\n                &quot;output&quot;: &quot;0x&quot;\n            },\n            &quot;subtraces&quot;: 0,\n            &quot;traceAddress&quot;: [],\n            &quot;type&quot;: &quot;call&quot;\n        }],\n            &quot;vmTrace&quot;: null\n    }\n}\n","title":"Example","titles":["trace Namespace","trace_rawTransaction"]},"113":{"href":"/jsonrpc/trace#trace_replayblocktransactions","html":"\n<p>Replays all transactions in a block returning the requested traces for each transaction.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;trace_replayBlockTransactions&quot;, &quot;params&quot;: [block, type[]]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReplays all transactions in a block returning the requested traces for each transaction.\nClientMethod invocationRPC{&quot;method&quot;: &quot;trace_replayBlockTransactions&quot;, &quot;params&quot;: [block, type[]]}\n","title":"trace_replayBlockTransactions","titles":["trace Namespace"]},"114":{"href":"/jsonrpc/trace#example-3","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_replayBlockTransactions&quot;,&quot;params&quot;:[&quot;0x2ed119&quot;,[&quot;trace&quot;]]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;stateDiff&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;trace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;action&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;gasUsed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;subtraces&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;traceAddress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;transactionHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;vmTrace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        { </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_replayBlockTransactions&quot;,&quot;params&quot;:[&quot;0x2ed119&quot;,[&quot;trace&quot;]]}\n{\n    &quot;id&quot;: 1,\n    &quot;jsonrpc&quot;: &quot;2.0&quot;,\n    &quot;result&quot;: [\n        {\n            &quot;output&quot;: &quot;0x&quot;,\n            &quot;stateDiff&quot;: null,\n            &quot;trace&quot;: [{\n                &quot;action&quot;: { ... },\n                &quot;result&quot;: {\n                    &quot;gasUsed&quot;: &quot;0x0&quot;,\n                    &quot;output&quot;: &quot;0x&quot;\n                },\n                &quot;subtraces&quot;: 0,\n                &quot;traceAddress&quot;: [],\n                &quot;type&quot;: &quot;call&quot;\n            }],\n            &quot;transactionHash&quot;: &quot;0x...&quot;,\n            &quot;vmTrace&quot;: null\n        },\n        { ... }\n    ]\n}\n","title":"Example","titles":["trace Namespace","trace_replayBlockTransactions"]},"115":{"href":"/jsonrpc/trace#trace_replaytransaction","html":"\n<p>Replays a transaction, returning the traces.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;trace_replayTransaction&quot;, &quot;params&quot;: [tx_hash, type[]]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReplays a transaction, returning the traces.\nClientMethod invocationRPC{&quot;method&quot;: &quot;trace_replayTransaction&quot;, &quot;params&quot;: [tx_hash, type[]]}\n","title":"trace_replayTransaction","titles":["trace Namespace"]},"116":{"href":"/jsonrpc/trace#example-4","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_replayTransaction&quot;,&quot;params&quot;:[&quot;0x02d4a872e096445e80d05276ee756cefef7f3b376bcec14246469c0cd97dad8f&quot;,[&quot;trace&quot;]]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;stateDiff&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;trace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;action&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;gasUsed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;subtraces&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;traceAddress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;vmTrace&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_replayTransaction&quot;,&quot;params&quot;:[&quot;0x02d4a872e096445e80d05276ee756cefef7f3b376bcec14246469c0cd97dad8f&quot;,[&quot;trace&quot;]]}\n{\n    &quot;id&quot;: 1,\n    &quot;jsonrpc&quot;: &quot;2.0&quot;,\n    &quot;result&quot;: {\n        &quot;output&quot;: &quot;0x&quot;,\n        &quot;stateDiff&quot;: null,\n        &quot;trace&quot;: [{\n            &quot;action&quot;: { ... },\n            &quot;result&quot;: {\n                &quot;gasUsed&quot;: &quot;0x0&quot;,\n                &quot;output&quot;: &quot;0x&quot;\n            },\n            &quot;subtraces&quot;: 0,\n            &quot;traceAddress&quot;: [],\n            &quot;type&quot;: &quot;call&quot;\n        }],\n        &quot;vmTrace&quot;: null\n    }\n}\n","title":"Example","titles":["trace Namespace","trace_replayTransaction"]},"117":{"href":"/jsonrpc/trace#trace_block","html":"\n<p>Returns traces created at given block.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;trace_block&quot;, &quot;params&quot;: [block]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns traces created at given block.\nClientMethod invocationRPC{&quot;method&quot;: &quot;trace_block&quot;, &quot;params&quot;: [block]}\n","title":"trace_block","titles":["trace Namespace"]},"118":{"href":"/jsonrpc/trace#example-5","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_block&quot;,&quot;params&quot;:[&quot;0x2ed119&quot;]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;action&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;callType&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;from&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xaa7b131dc60b80d3cf5e59b5a21a666aa039c951&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;gas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;to&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xd40aba8166a212d6892125f079c33e6f5ca19814&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x4768d7effc3fbe&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;blockHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x7eb25504e4c202cf3d62fd585d3e238f592c780cca82dacb2ed3cb5b38883add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;blockNumber&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3068185</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;gasUsed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;subtraces&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;traceAddress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;transactionHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x07da28d752aba3b9dd7060005e554719c6205c8a3aea358599fc9b245c52f1f6&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;transactionPosition&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        ...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_block&quot;,&quot;params&quot;:[&quot;0x2ed119&quot;]}\n{\n    &quot;id&quot;: 1,\n    &quot;jsonrpc&quot;: &quot;2.0&quot;,\n    &quot;result&quot;: [\n        {\n            &quot;action&quot;: {\n                &quot;callType&quot;: &quot;call&quot;,\n                &quot;from&quot;: &quot;0xaa7b131dc60b80d3cf5e59b5a21a666aa039c951&quot;,\n                &quot;gas&quot;: &quot;0x0&quot;,\n                &quot;input&quot;: &quot;0x&quot;,\n                &quot;to&quot;: &quot;0xd40aba8166a212d6892125f079c33e6f5ca19814&quot;,\n                &quot;value&quot;: &quot;0x4768d7effc3fbe&quot;\n            },\n            &quot;blockHash&quot;: &quot;0x7eb25504e4c202cf3d62fd585d3e238f592c780cca82dacb2ed3cb5b38883add&quot;,\n            &quot;blockNumber&quot;: 3068185,\n            &quot;result&quot;: {\n                &quot;gasUsed&quot;: &quot;0x0&quot;,\n                &quot;output&quot;: &quot;0x&quot;\n            },\n            &quot;subtraces&quot;: 0,\n            &quot;traceAddress&quot;: [],\n            &quot;transactionHash&quot;: &quot;0x07da28d752aba3b9dd7060005e554719c6205c8a3aea358599fc9b245c52f1f6&quot;,\n            &quot;transactionPosition&quot;: 0,\n            &quot;type&quot;: &quot;call&quot;\n        },\n        ...\n    ]\n}\n","title":"Example","titles":["trace Namespace","trace_block"]},"119":{"href":"/jsonrpc/trace#trace_filter","html":"\n<p>Returns traces matching given filter.</p>\n<p>Filters are objects with the following properties:</p>\n<ul>\n<li><code>fromBlock</code>: Returns traces from the given block (a number, hash, or a tag like <code>latest</code>).</li>\n<li><code>toBlock</code>: Returns traces to the given block.</li>\n<li><code>fromAddress</code>: Sent from these addresses</li>\n<li><code>toAddress</code>: Sent to these addresses</li>\n<li><code>after</code>: The offset trace number</li>\n<li><code>count</code>: The number of traces to display in a batch</li>\n</ul>\n<p>All properties are optional.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;trace_filter&quot;, &quot;params&quot;: [filter]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns traces matching given filter.\nFilters are objects with the following properties:\n\nfromBlock: Returns traces from the given block (a number, hash, or a tag like latest).\ntoBlock: Returns traces to the given block.\nfromAddress: Sent from these addresses\ntoAddress: Sent to these addresses\nafter: The offset trace number\ncount: The number of traces to display in a batch\n\nAll properties are optional.\nClientMethod invocationRPC{&quot;method&quot;: &quot;trace_filter&quot;, &quot;params&quot;: [filter]}\n","title":"trace_filter","titles":["trace Namespace"]},"120":{"href":"/jsonrpc/trace#example-6","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_filter&quot;,&quot;params&quot;:[{&quot;fromBlock&quot;:&quot;0x2ed0c4&quot;,&quot;toBlock&quot;:&quot;0x2ed128&quot;,&quot;toAddress&quot;:[&quot;0x8bbB73BCB5d553B5A556358d27625323Fd781D37&quot;],&quot;after&quot;:1000,&quot;count&quot;:100}]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;action&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;callType&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;from&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x32be343b94f860124dc4fee278fdcbd38c102d88&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;gas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x4c40d&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;to&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x8bbb73bcb5d553b5a556358d27625323fd781d37&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x3f0650ec47fd240000&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;blockHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x86df301bcdd8248d982dbf039f09faf792684e1aeee99d5b58b77d620008b80f&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;blockNumber&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3068183</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;gasUsed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;subtraces&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;traceAddress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;transactionHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x3321a7708b1083130bd78da0d62ead9f6683033231617c9d268e2c7e3fa6c104&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;transactionPosition&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        ...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_filter&quot;,&quot;params&quot;:[{&quot;fromBlock&quot;:&quot;0x2ed0c4&quot;,&quot;toBlock&quot;:&quot;0x2ed128&quot;,&quot;toAddress&quot;:[&quot;0x8bbB73BCB5d553B5A556358d27625323Fd781D37&quot;],&quot;after&quot;:1000,&quot;count&quot;:100}]}\n{\n    &quot;id&quot;: 1,\n    &quot;jsonrpc&quot;: &quot;2.0&quot;,\n    &quot;result&quot;: [\n        {\n            &quot;action&quot;: {\n                &quot;callType&quot;: &quot;call&quot;,\n                &quot;from&quot;: &quot;0x32be343b94f860124dc4fee278fdcbd38c102d88&quot;,\n                &quot;gas&quot;: &quot;0x4c40d&quot;,\n                &quot;input&quot;: &quot;0x&quot;,\n                &quot;to&quot;: &quot;0x8bbb73bcb5d553b5a556358d27625323fd781d37&quot;,\n                &quot;value&quot;: &quot;0x3f0650ec47fd240000&quot;\n            },\n            &quot;blockHash&quot;: &quot;0x86df301bcdd8248d982dbf039f09faf792684e1aeee99d5b58b77d620008b80f&quot;,\n            &quot;blockNumber&quot;: 3068183,\n            &quot;result&quot;: {\n                &quot;gasUsed&quot;: &quot;0x0&quot;,\n                &quot;output&quot;: &quot;0x&quot;\n            },\n            &quot;subtraces&quot;: 0,\n            &quot;traceAddress&quot;: [],\n            &quot;transactionHash&quot;: &quot;0x3321a7708b1083130bd78da0d62ead9f6683033231617c9d268e2c7e3fa6c104&quot;,\n            &quot;transactionPosition&quot;: 3,\n            &quot;type&quot;: &quot;call&quot;\n        },\n        ...\n    ]\n}\n","title":"Example","titles":["trace Namespace","trace_filter"]},"121":{"href":"/jsonrpc/trace#trace_get","html":"\n<p>Returns trace at given position.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;trace_get&quot;, &quot;params&quot;: [tx_hash,indices[]]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns trace at given position.\nClientMethod invocationRPC{&quot;method&quot;: &quot;trace_get&quot;, &quot;params&quot;: [tx_hash,indices[]]}\n","title":"trace_get","titles":["trace Namespace"]},"122":{"href":"/jsonrpc/trace#example-7","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_get&quot;,&quot;params&quot;:[&quot;0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3&quot;,[&quot;0x0&quot;]]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;action&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;callType&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;from&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x1c39ba39e4735cb65978d4db400ddd70a72dc750&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;gas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x13e99&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x16c72721&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;to&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x2bd2326c993dfaef84f696526064ff22eba5b362&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;blockHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x7eb25504e4c202cf3d62fd585d3e238f592c780cca82dacb2ed3cb5b38883add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;blockNumber&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3068185</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;gasUsed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x183&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0000000000000000000000000000000000000000000000000000000000000001&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;subtraces&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;traceAddress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">            0</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;transactionHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;transactionPosition&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_get&quot;,&quot;params&quot;:[&quot;0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3&quot;,[&quot;0x0&quot;]]}\n{\n    &quot;id&quot;: 1,\n    &quot;jsonrpc&quot;: &quot;2.0&quot;,\n    &quot;result&quot;: {\n        &quot;action&quot;: {\n            &quot;callType&quot;: &quot;call&quot;,\n            &quot;from&quot;: &quot;0x1c39ba39e4735cb65978d4db400ddd70a72dc750&quot;,\n            &quot;gas&quot;: &quot;0x13e99&quot;,\n            &quot;input&quot;: &quot;0x16c72721&quot;,\n            &quot;to&quot;: &quot;0x2bd2326c993dfaef84f696526064ff22eba5b362&quot;,\n            &quot;value&quot;: &quot;0x0&quot;\n        },\n        &quot;blockHash&quot;: &quot;0x7eb25504e4c202cf3d62fd585d3e238f592c780cca82dacb2ed3cb5b38883add&quot;,\n            &quot;blockNumber&quot;: 3068185,\n            &quot;result&quot;: {\n            &quot;gasUsed&quot;: &quot;0x183&quot;,\n            &quot;output&quot;: &quot;0x0000000000000000000000000000000000000000000000000000000000000001&quot;\n        },\n        &quot;subtraces&quot;: 0,\n            &quot;traceAddress&quot;: [\n            0\n        ],\n        &quot;transactionHash&quot;: &quot;0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3&quot;,\n        &quot;transactionPosition&quot;: 2,\n        &quot;type&quot;: &quot;call&quot;\n    }\n}\n","title":"Example","titles":["trace Namespace","trace_get"]},"123":{"href":"/jsonrpc/trace#trace_transaction","html":"\n<p>Returns all traces of given transaction</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;trace_transaction&quot;, &quot;params&quot;: [tx_hash]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns all traces of given transaction\nClientMethod invocationRPC{&quot;method&quot;: &quot;trace_transaction&quot;, &quot;params&quot;: [tx_hash]}\n","title":"trace_transaction","titles":["trace Namespace"]},"124":{"href":"/jsonrpc/trace#example-8","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_transaction&quot;,&quot;params&quot;:[&quot;0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3&quot;]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;action&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;callType&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;from&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x1c39ba39e4735cb65978d4db400ddd70a72dc750&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;gas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x13e99&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x16c72721&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;to&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x2bd2326c993dfaef84f696526064ff22eba5b362&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;blockHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x7eb25504e4c202cf3d62fd585d3e238f592c780cca82dacb2ed3cb5b38883add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;blockNumber&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3068185</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;gasUsed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x183&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;output&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0000000000000000000000000000000000000000000000000000000000000001&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;subtraces&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;traceAddress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                0</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ],</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;transactionHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;transactionPosition&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;call&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        ...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;trace_transaction&quot;,&quot;params&quot;:[&quot;0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3&quot;]}\n{\n    &quot;id&quot;: 1,\n    &quot;jsonrpc&quot;: &quot;2.0&quot;,\n    &quot;result&quot;: [\n        {\n            &quot;action&quot;: {\n                &quot;callType&quot;: &quot;call&quot;,\n                &quot;from&quot;: &quot;0x1c39ba39e4735cb65978d4db400ddd70a72dc750&quot;,\n                &quot;gas&quot;: &quot;0x13e99&quot;,\n                &quot;input&quot;: &quot;0x16c72721&quot;,\n                &quot;to&quot;: &quot;0x2bd2326c993dfaef84f696526064ff22eba5b362&quot;,\n                &quot;value&quot;: &quot;0x0&quot;\n            },\n            &quot;blockHash&quot;: &quot;0x7eb25504e4c202cf3d62fd585d3e238f592c780cca82dacb2ed3cb5b38883add&quot;,\n            &quot;blockNumber&quot;: 3068185,\n            &quot;result&quot;: {\n                &quot;gasUsed&quot;: &quot;0x183&quot;,\n                &quot;output&quot;: &quot;0x0000000000000000000000000000000000000000000000000000000000000001&quot;\n            },\n            &quot;subtraces&quot;: 0,\n            &quot;traceAddress&quot;: [\n                0\n            ],\n            &quot;transactionHash&quot;: &quot;0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3&quot;,\n            &quot;transactionPosition&quot;: 2,\n            &quot;type&quot;: &quot;call&quot;\n        },\n        ...\n    ]\n}","title":"Example","titles":["trace Namespace","trace_transaction"]},"125":{"href":"/jsonrpc/txpool#txpool-namespace","html":"</header>\n<p>The <code>txpool</code> API allows you to inspect the transaction pool.</p>\n","isPage":true,"text":"\nThe txpool API allows you to inspect the transaction pool.\n","title":"txpool Namespace","titles":[]},"126":{"href":"/jsonrpc/txpool#txpool_content","html":"\n<p>Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.</p>\n<p>See <a href=\"https://geth.ethereum.org/docs/rpc/ns-txpool#txpool-content\">here</a> for more details</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;txpool_content&quot;, &quot;params&quot;: []}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\nSee here for more details\nClientMethod invocationRPC{&quot;method&quot;: &quot;txpool_content&quot;, &quot;params&quot;: []}\n","title":"txpool_content","titles":["txpool Namespace"]},"127":{"href":"/jsonrpc/txpool#txpool_contentfrom","html":"\n<p>Retrieves the transactions contained within the txpool, returning pending as well as queued transactions of this address, grouped by nonce.</p>\n<p>See <a href=\"https://geth.ethereum.org/docs/rpc/ns-txpool#txpool-contentfrom\">here</a> for more details</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;txpool_contentFrom&quot;, &quot;params&quot;: [address]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nRetrieves the transactions contained within the txpool, returning pending as well as queued transactions of this address, grouped by nonce.\nSee here for more details\nClientMethod invocationRPC{&quot;method&quot;: &quot;txpool_contentFrom&quot;, &quot;params&quot;: [address]}\n","title":"txpool_contentFrom","titles":["txpool Namespace"]},"128":{"href":"/jsonrpc/txpool#txpool_inspect","html":"\n<p>Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.</p>\n<p>See <a href=\"https://geth.ethereum.org/docs/rpc/ns-txpool#txpool-inspect\">here</a> for more details</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;txpool_inspect&quot;, &quot;params&quot;: []}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nReturns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\nSee here for more details\nClientMethod invocationRPC{&quot;method&quot;: &quot;txpool_inspect&quot;, &quot;params&quot;: []}\n","title":"txpool_inspect","titles":["txpool Namespace"]},"129":{"href":"/jsonrpc/txpool#txpool_status","html":"\n<p>Returns the number of transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.</p>\n<p>See <a href=\"https://geth.ethereum.org/docs/rpc/ns-txpool#txpool-status\">here</a> for more details</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;txpool_status&quot;, &quot;params&quot;: []}</code></td></tr></tbody></table>","isPage":false,"text":"\nReturns the number of transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\nSee here for more details\nClientMethod invocationRPC{&quot;method&quot;: &quot;txpool_status&quot;, &quot;params&quot;: []}","title":"txpool_status","titles":["txpool Namespace"]},"130":{"href":"/jsonrpc/web3#web3-namespace","html":"</header>\n<p>The <code>web3</code> API provides utility functions for the web3 client.</p>\n","isPage":true,"text":"\nThe web3 API provides utility functions for the web3 client.\n","title":"web3 Namespace","titles":[]},"131":{"href":"/jsonrpc/web3#web3_clientversion","html":"\n<p>Get the web3 client version.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;web3_clientVersion&quot;}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nGet the web3 client version.\nClientMethod invocationRPC{&quot;method&quot;: &quot;web3_clientVersion&quot;}\n","title":"web3_clientVersion","titles":["web3 Namespace"]},"132":{"href":"/jsonrpc/web3#example","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;web3_clientVersion&quot;,&quot;params&quot;:[]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;reth/v0.0.1/x86_64-unknown-linux-gnu&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;web3_clientVersion&quot;,&quot;params&quot;:[]}\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;result&quot;:&quot;reth/v0.0.1/x86_64-unknown-linux-gnu&quot;}\n","title":"Example","titles":["web3 Namespace","web3_clientVersion"]},"133":{"href":"/jsonrpc/web3#web3_sha3","html":"\n<p>Get the Keccak-256 hash of the given data.</p>\n<table><thead><tr><th>Client</th><th>Method invocation</th></tr></thead><tbody><tr><td>RPC</td><td><code>{&quot;method&quot;: &quot;web3_sha3&quot;, &quot;params&quot;: [bytes]}</code></td></tr></tbody></table>\n","isPage":false,"text":"\nGet the Keccak-256 hash of the given data.\nClientMethod invocationRPC{&quot;method&quot;: &quot;web3_sha3&quot;, &quot;params&quot;: [bytes]}\n","title":"web3_sha3","titles":["web3 Namespace"]},"134":{"href":"/jsonrpc/web3#example-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>// &gt; echo -n &quot;rust is awesome&quot; | xxd -p</span></span>\n<span class=\"line\"><span>7275737420697320617765736f6d65</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;web3_sha3&quot;,&quot;params&quot;:[&quot;0x7275737420697320617765736f6d65&quot;]}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xe421b3428564a5c509ac118bad93a3b84485ec3f927e214b0c4c23076d4bc4e0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\n// &gt; echo -n &quot;rust is awesome&quot; | xxd -p\n7275737420697320617765736f6d65\n// &gt; {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;web3_sha3&quot;,&quot;params&quot;:[&quot;0x7275737420697320617765736f6d65&quot;]}\n{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;result&quot;:&quot;0xe421b3428564a5c509ac118bad93a3b84485ec3f927e214b0c4c23076d4bc4e0&quot;}","title":"Example","titles":["web3 Namespace","web3_sha3"]},"135":{"href":"/run/config#configuring-reth","html":"</header>\n<p>Reth places a configuration file named <code>reth.toml</code> in the data directory specified when starting the node. It is written in the <a href=\"https://toml.io/\">TOML</a> format.</p>\n<p>The default data directory is platform dependent:</p>\n<ul>\n<li>Linux: <code>$XDG_DATA_HOME/reth/</code> or <code>$HOME/.local/share/reth/</code></li>\n<li>Windows: <code>{FOLDERID_RoamingAppData}/reth/</code></li>\n<li>macOS: <code>$HOME/Library/Application Support/reth/</code></li>\n</ul>\n<p>The configuration file contains the following sections:</p>\n<ul>\n<li><a href=\"#the-stages-section\"><code>[stages]</code></a> -- Configuration of the individual sync stages\n<ul>\n<li><a href=\"#headers\"><code>headers</code></a></li>\n<li><a href=\"#bodies\"><code>bodies</code></a></li>\n<li><a href=\"#sender_recovery\"><code>sender_recovery</code></a></li>\n<li><a href=\"#execution\"><code>execution</code></a></li>\n<li><a href=\"#account_hashing\"><code>account_hashing</code></a></li>\n<li><a href=\"#storage_hashing\"><code>storage_hashing</code></a></li>\n<li><a href=\"#merkle\"><code>merkle</code></a></li>\n<li><a href=\"#transaction_lookup\"><code>transaction_lookup</code></a></li>\n<li><a href=\"#index_account_history\"><code>index_account_history</code></a></li>\n<li><a href=\"#index_storage_history\"><code>index_storage_history</code></a></li>\n</ul>\n</li>\n<li><a href=\"#the-peers-section\"><code>[peers]</code></a>\n<ul>\n<li><a href=\"#connection_info\"><code>connection_info</code></a></li>\n<li><a href=\"#reputation_weights\"><code>reputation_weights</code></a></li>\n<li><a href=\"#backoff_durations\"><code>backoff_durations</code></a></li>\n</ul>\n</li>\n<li><a href=\"#the-sessions-section\"><code>[sessions]</code></a></li>\n<li><a href=\"#the-prune-section\"><code>[prune]</code></a></li>\n</ul>\n","isPage":true,"text":"\nReth places a configuration file named reth.toml in the data directory specified when starting the node. It is written in the TOML format.\nThe default data directory is platform dependent:\n\nLinux: $XDG_DATA_HOME/reth/ or $HOME/.local/share/reth/\nWindows: {FOLDERID_RoamingAppData}/reth/\nmacOS: $HOME/Library/Application Support/reth/\n\nThe configuration file contains the following sections:\n\n[stages] -- Configuration of the individual sync stages\n\nheaders\nbodies\nsender_recovery\nexecution\naccount_hashing\nstorage_hashing\nmerkle\ntransaction_lookup\nindex_account_history\nindex_storage_history\n\n\n[peers]\n\nconnection_info\nreputation_weights\nbackoff_durations\n\n\n[sessions]\n[prune]\n\n","title":"Configuring Reth","titles":[]},"136":{"href":"/run/config#the-stages-section","html":"\n<p>The stages section is used to configure how individual stages in reth behave, which has a direct impact on resource utilization and sync speed.</p>\n<p>The defaults shipped with Reth try to be relatively reasonable, but may not be optimal for your specific set of hardware.</p>\n","isPage":false,"text":"\nThe stages section is used to configure how individual stages in reth behave, which has a direct impact on resource utilization and sync speed.\nThe defaults shipped with Reth try to be relatively reasonable, but may not be optimal for your specific set of hardware.\n","title":"The [stages] section","titles":["Configuring Reth"]},"137":{"href":"/run/config#headers","html":"\n<p>The headers section controls both the behavior of the header stage, which downloads historical headers, as well as the primary downloader that fetches headers over P2P.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">stages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">headers</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The minimum and maximum number of concurrent requests to have in flight at a time.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The downloader uses these as best effort targets, which means that the number</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># of requests may be outside of these thresholds within a reasonable degree.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Increase these for faster sync speeds at the cost of additional bandwidth and memory</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">downloader_max_concurrent_requests = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">downloader_min_concurrent_requests = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum number of responses to buffer in the downloader at any one time.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># If the buffer is full, no more requests will be sent until room opens up.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Increase the value for a larger buffer at the cost of additional memory consumption</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">downloader_max_buffered_responses = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum number of headers to request from a peer at a time.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">downloader_request_limit = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The amount of headers to persist to disk at a time.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Lower thresholds correspond to more frequent disk I/O (writes),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># but lowers memory usage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">commit_threshold = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10000</span></span></code></pre>\n","isPage":false,"text":"\nThe headers section controls both the behavior of the header stage, which downloads historical headers, as well as the primary downloader that fetches headers over P2P.\n[stages.headers]\n# The minimum and maximum number of concurrent requests to have in flight at a time.\n#\n# The downloader uses these as best effort targets, which means that the number\n# of requests may be outside of these thresholds within a reasonable degree.\n#\n# Increase these for faster sync speeds at the cost of additional bandwidth and memory\ndownloader_max_concurrent_requests = 100\ndownloader_min_concurrent_requests = 5\n# The maximum number of responses to buffer in the downloader at any one time.\n#\n# If the buffer is full, no more requests will be sent until room opens up.\n#\n# Increase the value for a larger buffer at the cost of additional memory consumption\ndownloader_max_buffered_responses = 100\n# The maximum number of headers to request from a peer at a time.\ndownloader_request_limit = 1000\n# The amount of headers to persist to disk at a time.\n#\n# Lower thresholds correspond to more frequent disk I/O (writes),\n# but lowers memory usage\ncommit_threshold = 10000\n","title":"headers","titles":["Configuring Reth","The [stages] section"]},"138":{"href":"/run/config#bodies","html":"\n<p>The bodies section controls both the behavior of the bodies stage, which downloads historical block bodies, as well as the primary downloader that fetches block bodies over P2P.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">stages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bodies</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum number of bodies to request from a peer at a time.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">downloader_request_limit = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">200</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum amount of bodies to download before writing them to disk.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># A lower value means more frequent disk I/O (writes), but also</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># lowers memory usage.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">downloader_stream_batch_size = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The size of the internal block buffer in bytes.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># A bigger buffer means that bandwidth can be saturated for longer periods,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># but also increases memory consumption.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># If the buffer is full, no more requests will be made to peers until</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># space is made for new blocks in the buffer.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Defaults to around 2GB.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">downloader_max_buffered_blocks_size_bytes = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2147483648</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The minimum and maximum number of concurrent requests to have in flight at a time.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The downloader uses these as best effort targets, which means that the number</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># of requests may be outside of these thresholds within a reasonable degree.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Increase these for faster sync speeds at the cost of additional bandwidth and memory</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">downloader_min_concurrent_requests = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">downloader_max_concurrent_requests = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span></span></code></pre>\n","isPage":false,"text":"\nThe bodies section controls both the behavior of the bodies stage, which downloads historical block bodies, as well as the primary downloader that fetches block bodies over P2P.\n[stages.bodies]\n# The maximum number of bodies to request from a peer at a time.\ndownloader_request_limit = 200\n# The maximum amount of bodies to download before writing them to disk.\n#\n# A lower value means more frequent disk I/O (writes), but also\n# lowers memory usage.\ndownloader_stream_batch_size = 1000\n# The size of the internal block buffer in bytes.\n#\n# A bigger buffer means that bandwidth can be saturated for longer periods,\n# but also increases memory consumption.\n#\n# If the buffer is full, no more requests will be made to peers until\n# space is made for new blocks in the buffer.\n#\n# Defaults to around 2GB.\ndownloader_max_buffered_blocks_size_bytes = 2147483648\n# The minimum and maximum number of concurrent requests to have in flight at a time.\n#\n# The downloader uses these as best effort targets, which means that the number\n# of requests may be outside of these thresholds within a reasonable degree.\n#\n# Increase these for faster sync speeds at the cost of additional bandwidth and memory\ndownloader_min_concurrent_requests = 5\ndownloader_max_concurrent_requests = 100\n","title":"bodies","titles":["Configuring Reth","The [stages] section"]},"139":{"href":"/run/config#sender_recovery","html":"\n<p>The sender recovery stage recovers the address of transaction senders using transaction signatures.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">stages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sender_recovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The number of transactions to recover senders for before</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># writing the results to disk.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Lower thresholds correspond to more frequent disk I/O (writes),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># but lowers memory usage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">commit_threshold = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100000</span></span></code></pre>\n","isPage":false,"text":"\nThe sender recovery stage recovers the address of transaction senders using transaction signatures.\n[stages.sender_recovery]\n# The number of transactions to recover senders for before\n# writing the results to disk.\n#\n# Lower thresholds correspond to more frequent disk I/O (writes),\n# but lowers memory usage\ncommit_threshold = 100000\n","title":"sender_recovery","titles":["Configuring Reth","The [stages] section"]},"140":{"href":"/run/config#execution","html":"\n<p>The execution stage executes historical transactions. This stage is generally very I/O and memory intensive, since executing transactions involves reading block headers, transactions, accounts and account storage.</p>\n<p>Each executed transaction also generates a number of changesets, and mutates the current state of accounts and storage.</p>\n<p>For this reason, there are several ways to control how much work to perform before the results are written to disk.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">stages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">execution</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum number of blocks to process before the execution stage commits.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">max_blocks = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">500000</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum number of state changes to keep in memory before the execution stage commits.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">max_changes = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5000000</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum cumulative amount of gas to process before the execution stage commits.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">max_cumulative_gas = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1500000000000</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> # 30_000_000 * 50_000_000</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum time spent on blocks processing before the execution stage commits.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">max_duration = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;10m&#x27;</span></span></code></pre>\n<p>For all thresholds specified, the first to be hit will determine when the results are written to disk.</p>\n<p>Lower values correspond to more frequent disk writes, but also lower memory consumption. A lower value also negatively impacts sync speed, since reth keeps a cache around for the entire duration of blocks executed in the same range.</p>\n","isPage":false,"text":"\nThe execution stage executes historical transactions. This stage is generally very I/O and memory intensive, since executing transactions involves reading block headers, transactions, accounts and account storage.\nEach executed transaction also generates a number of changesets, and mutates the current state of accounts and storage.\nFor this reason, there are several ways to control how much work to perform before the results are written to disk.\n[stages.execution]\n# The maximum number of blocks to process before the execution stage commits.\nmax_blocks = 500000\n# The maximum number of state changes to keep in memory before the execution stage commits.\nmax_changes = 5000000\n# The maximum cumulative amount of gas to process before the execution stage commits.\nmax_cumulative_gas = 1500000000000 # 30_000_000 * 50_000_000\n# The maximum time spent on blocks processing before the execution stage commits.\nmax_duration = &#x27;10m&#x27;\nFor all thresholds specified, the first to be hit will determine when the results are written to disk.\nLower values correspond to more frequent disk writes, but also lower memory consumption. A lower value also negatively impacts sync speed, since reth keeps a cache around for the entire duration of blocks executed in the same range.\n","title":"execution","titles":["Configuring Reth","The [stages] section"]},"141":{"href":"/run/config#account_hashing","html":"\n<p>The account hashing stage builds a secondary table of accounts, where the key is the hash of the address instead of the raw address.</p>\n<p>This is used to later compute the state root.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">stages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">account_hashing</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The threshold in number of blocks before the stage starts from scratch</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># and re-hashes all accounts as opposed to just the accounts that changed.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">clean_threshold = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">500000</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The amount of accounts to process before writing the results to disk.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Lower thresholds correspond to more frequent disk I/O (writes),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># but lowers memory usage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">commit_threshold = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100000</span></span></code></pre>\n","isPage":false,"text":"\nThe account hashing stage builds a secondary table of accounts, where the key is the hash of the address instead of the raw address.\nThis is used to later compute the state root.\n[stages.account_hashing]\n# The threshold in number of blocks before the stage starts from scratch\n# and re-hashes all accounts as opposed to just the accounts that changed.\nclean_threshold = 500000\n# The amount of accounts to process before writing the results to disk.\n#\n# Lower thresholds correspond to more frequent disk I/O (writes),\n# but lowers memory usage\ncommit_threshold = 100000\n","title":"account_hashing","titles":["Configuring Reth","The [stages] section"]},"142":{"href":"/run/config#storage_hashing","html":"\n<p>The storage hashing stage builds a secondary table of account storages, where the key is the hash of the address and the slot, instead of the raw address and slot.</p>\n<p>This is used to later compute the state root.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">stages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">storage_hashing</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The threshold in number of blocks before the stage starts from scratch</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># and re-hashes all storages as opposed to just the storages that changed.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">clean_threshold = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">500000</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The amount of storage slots to process before writing the results to disk.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Lower thresholds correspond to more frequent disk I/O (writes),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># but lowers memory usage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">commit_threshold = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100000</span></span></code></pre>\n","isPage":false,"text":"\nThe storage hashing stage builds a secondary table of account storages, where the key is the hash of the address and the slot, instead of the raw address and slot.\nThis is used to later compute the state root.\n[stages.storage_hashing]\n# The threshold in number of blocks before the stage starts from scratch\n# and re-hashes all storages as opposed to just the storages that changed.\nclean_threshold = 500000\n# The amount of storage slots to process before writing the results to disk.\n#\n# Lower thresholds correspond to more frequent disk I/O (writes),\n# but lowers memory usage\ncommit_threshold = 100000\n","title":"storage_hashing","titles":["Configuring Reth","The [stages] section"]},"143":{"href":"/run/config#merkle","html":"\n<p>The merkle stage uses the indexes built in the hashing stages (storage and account hashing) to compute the state root of the latest block.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">stages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">merkle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The threshold in number of blocks before the stage starts from scratch</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># and re-computes the state root, discarding the trie that has already been built,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># as opposed to incrementally updating the trie.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">clean_threshold = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5000</span></span></code></pre>\n","isPage":false,"text":"\nThe merkle stage uses the indexes built in the hashing stages (storage and account hashing) to compute the state root of the latest block.\n[stages.merkle]\n# The threshold in number of blocks before the stage starts from scratch\n# and re-computes the state root, discarding the trie that has already been built,\n# as opposed to incrementally updating the trie.\nclean_threshold = 5000\n","title":"merkle","titles":["Configuring Reth","The [stages] section"]},"144":{"href":"/run/config#transaction_lookup","html":"\n<p>The transaction lookup stage builds an index of transaction hashes to their sequential transaction ID.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">stages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transaction_lookup</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum number of transactions to process before writing the results to disk.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Lower thresholds correspond to more frequent disk I/O (writes),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># but lowers memory usage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">chunk_size = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5000000</span></span></code></pre>\n","isPage":false,"text":"\nThe transaction lookup stage builds an index of transaction hashes to their sequential transaction ID.\n[stages.transaction_lookup]\n# The maximum number of transactions to process before writing the results to disk.\n#\n# Lower thresholds correspond to more frequent disk I/O (writes),\n# but lowers memory usage\nchunk_size = 5000000\n","title":"transaction_lookup","titles":["Configuring Reth","The [stages] section"]},"145":{"href":"/run/config#index_account_history","html":"\n<p>The account history indexing stage builds an index of what blocks a particular account changed.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">stages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">index_account_history</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum amount of blocks to process before writing the results to disk.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Lower thresholds correspond to more frequent disk I/O (writes),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># but lowers memory usage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">commit_threshold = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100000</span></span></code></pre>\n","isPage":false,"text":"\nThe account history indexing stage builds an index of what blocks a particular account changed.\n[stages.index_account_history]\n# The maximum amount of blocks to process before writing the results to disk.\n#\n# Lower thresholds correspond to more frequent disk I/O (writes),\n# but lowers memory usage\ncommit_threshold = 100000\n","title":"index_account_history","titles":["Configuring Reth","The [stages] section"]},"146":{"href":"/run/config#index_storage_history","html":"\n<p>The storage history indexing stage builds an index of what blocks a particular storage slot changed.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">stages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">index_storage_history</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum amount of blocks to process before writing the results to disk.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Lower thresholds correspond to more frequent disk I/O (writes),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># but lowers memory usage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">commit_threshold = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100000</span></span></code></pre>\n","isPage":false,"text":"\nThe storage history indexing stage builds an index of what blocks a particular storage slot changed.\n[stages.index_storage_history]\n# The maximum amount of blocks to process before writing the results to disk.\n#\n# Lower thresholds correspond to more frequent disk I/O (writes),\n# but lowers memory usage\ncommit_threshold = 100000\n","title":"index_storage_history","titles":["Configuring Reth","The [stages] section"]},"147":{"href":"/run/config#etl","html":"\n<p>An ETL (extract, transform, load) data collector. Used mainly to insert data into <code>MDBX</code> in a sorted manner.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">stages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">etl</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum size in bytes of data held in memory before being flushed to disk as a file.</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Lower threshold corresponds to more frequent flushes,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># but lowers temporary storage usage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">file_size = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">524_288_000</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> # 500 * 1024 * 1024</span></span></code></pre>\n","isPage":false,"text":"\nAn ETL (extract, transform, load) data collector. Used mainly to insert data into MDBX in a sorted manner.\n[stages.etl]\n# The maximum size in bytes of data held in memory before being flushed to disk as a file.\n#\n# Lower threshold corresponds to more frequent flushes,\n# but lowers temporary storage usage\nfile_size = 524_288_000 # 500 * 1024 * 1024\n","title":"etl","titles":["Configuring Reth","The [stages] section"]},"148":{"href":"/run/config#the-peers-section","html":"\n<p>The peers section is used to configure how the networking component of reth establishes and maintains connections to peers.</p>\n<p>In the top level of the section you can configure trusted nodes, and how often reth will try to connect to new peers.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">peers</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># How often reth will attempt to make outgoing connections,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># if there is room for more peers</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">refill_slots_interval = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;1s&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># A list of ENRs for trusted peers, which are peers reth will always try to connect to.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">trusted_nodes = []</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Whether reth will only attempt to connect to the peers specified above,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># or if it will connect to other peers in the network</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">connect_trusted_nodes_only = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The duration for which a badly behaving peer is banned</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ban_duration = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;12h&#x27;</span></span></code></pre>\n","isPage":false,"text":"\nThe peers section is used to configure how the networking component of reth establishes and maintains connections to peers.\nIn the top level of the section you can configure trusted nodes, and how often reth will try to connect to new peers.\n[peers]\n# How often reth will attempt to make outgoing connections,\n# if there is room for more peers\nrefill_slots_interval = &#x27;1s&#x27;\n# A list of ENRs for trusted peers, which are peers reth will always try to connect to.\ntrusted_nodes = []\n# Whether reth will only attempt to connect to the peers specified above,\n# or if it will connect to other peers in the network\nconnect_trusted_nodes_only = false\n# The duration for which a badly behaving peer is banned\nban_duration = &#x27;12h&#x27;\n","title":"The [peers] section","titles":["Configuring Reth"]},"149":{"href":"/run/config#connection_info","html":"\n<p>This section configures how many peers reth will connect to.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">peers</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">connection_info</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum number of outbound peers (peers we connect to)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">max_outbound = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The maximum number of inbound peers (peers that connect to us)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">max_inbound = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span></span></code></pre>\n","isPage":false,"text":"\nThis section configures how many peers reth will connect to.\n[peers.connection_info]\n# The maximum number of outbound peers (peers we connect to)\nmax_outbound = 100\n# The maximum number of inbound peers (peers that connect to us)\nmax_inbound = 30\n","title":"connection_info","titles":["Configuring Reth","The [peers] section"]},"150":{"href":"/run/config#reputation_weights","html":"\n<p>This section configures the penalty for various offences peers can commit.</p>\n<p>All peers start out with a reputation of 0, which increases over time as the peer stays connected to us.</p>\n<p>If the peer misbehaves, various penalties are exacted to their reputation, and if it falls below a certain threshold (currently <code>50 * -1024</code>), reth will disconnect and ban the peer temporarily (except for protocol violations which constitute a permanent ban).</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">peers</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reputation_weights</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">bad_message = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">-16384</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">bad_block = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">-16384</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">bad_transactions = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">-16384</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">already_seen_transactions = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">timeout = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">-4096</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">bad_protocol = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">-2147483648</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">failed_to_connect = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">-25600</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">dropped = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">-4096</span></span></code></pre>\n","isPage":false,"text":"\nThis section configures the penalty for various offences peers can commit.\nAll peers start out with a reputation of 0, which increases over time as the peer stays connected to us.\nIf the peer misbehaves, various penalties are exacted to their reputation, and if it falls below a certain threshold (currently 50 * -1024), reth will disconnect and ban the peer temporarily (except for protocol violations which constitute a permanent ban).\n[peers.reputation_weights]\nbad_message = -16384\nbad_block = -16384\nbad_transactions = -16384\nalready_seen_transactions = 0\ntimeout = -4096\nbad_protocol = -2147483648\nfailed_to_connect = -25600\ndropped = -4096\n","title":"reputation_weights","titles":["Configuring Reth","The [peers] section"]},"151":{"href":"/run/config#backoff_durations","html":"\n<p>If reth fails to establish a connection to a peer, it will not re-attempt for some amount of time, depending on the reason the connection failed.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">peers</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">backoff_durations</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">low = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;30s&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">medium = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;3m&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">high = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;15m&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">max = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;1h&#x27;</span></span></code></pre>\n","isPage":false,"text":"\nIf reth fails to establish a connection to a peer, it will not re-attempt for some amount of time, depending on the reason the connection failed.\n[peers.backoff_durations]\nlow = &#x27;30s&#x27;\nmedium = &#x27;3m&#x27;\nhigh = &#x27;15m&#x27;\nmax = &#x27;1h&#x27;\n","title":"backoff_durations","titles":["Configuring Reth","The [peers] section"]},"152":{"href":"/run/config#the-sessions-section","html":"\n<p>The sessions section configures the internal behavior of a single peer-to-peer connection.</p>\n<p>You can configure the session buffer sizes, which limits the amount of pending events (incoming messages) and commands (outgoing messages) each session can hold before it will start to ignore messages.</p>\n<blockquote>\n<strong>Note</strong>\n<p>These buffers are allocated <em>per peer</em>, which means that increasing the buffer sizes can have large impact on memory consumption.</p>\n</blockquote>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sessions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">session_command_buffer = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">32</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">session_event_buffer = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">260</span></span></code></pre>\n<p>You can also configure request timeouts:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sessions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">initial_internal_request_timeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">secs = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">20</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">nanos = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># The amount of time before the peer will be penalized for</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># being in violation of the protocol. This exacts a permaban on the peer.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sessions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">protocol_breach_request_timeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">secs = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">120</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">nanos = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span></span></code></pre>\n","isPage":false,"text":"\nThe sessions section configures the internal behavior of a single peer-to-peer connection.\nYou can configure the session buffer sizes, which limits the amount of pending events (incoming messages) and commands (outgoing messages) each session can hold before it will start to ignore messages.\n\nNote\nThese buffers are allocated per peer, which means that increasing the buffer sizes can have large impact on memory consumption.\n\n[sessions]\nsession_command_buffer = 32\nsession_event_buffer = 260\nYou can also configure request timeouts:\n[sessions.initial_internal_request_timeout]\nsecs = 20\nnanos = 0\n \n# The amount of time before the peer will be penalized for\n# being in violation of the protocol. This exacts a permaban on the peer.\n[sessions.protocol_breach_request_timeout]\nsecs = 120\nnanos = 0\n","title":"The [sessions] section","titles":["Configuring Reth"]},"153":{"href":"/run/config#the-prune-section","html":"\n<p>The prune section configures the pruning configuration.</p>\n<p>You can configure the pruning of different segments of the data independently of others.\nFor any unspecified segments, the default setting is no pruning.</p>\n","isPage":false,"text":"\nThe prune section configures the pruning configuration.\nYou can configure the pruning of different segments of the data independently of others.\nFor any unspecified segments, the default setting is no pruning.\n","title":"The [prune] section","titles":["Configuring Reth"]},"154":{"href":"/run/config#default-config","html":"\n<p>No pruning, run as archive node.</p>\n","isPage":false,"text":"\nNo pruning, run as archive node.\n","title":"Default config","titles":["Configuring Reth","The [prune] section"]},"155":{"href":"/run/config#example-of-the-custom-pruning-configuration","html":"\n<p>This configuration will:</p>\n<ul>\n<li>Run pruning every 5 blocks</li>\n<li>Continuously prune all transaction senders, account history and storage history before the block <code>head-100_000</code>,\ni.e. keep the data for the last <code>100_000</code> blocks</li>\n<li>Prune all receipts before the block 1920000, i.e. keep receipts from the block 1920000</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">prune</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Minimum pruning interval measured in blocks</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">block_interval = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">prune</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">segments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Sender Recovery pruning configuration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sender_recovery = { distance = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100_000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#6A737D;--shiki-dark:#768390\"># Prune all transaction senders before the block `head-100000`, i.e. keep transaction senders for the last 100001 blocks</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Transaction Lookup pruning configuration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">transaction_lookup = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;full&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> # Prune all TxNumber =&gt; TxHash mappings</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Receipts pruning configuration. This setting overrides `receipts_log_filter`.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">receipts = { before = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1920000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#6A737D;--shiki-dark:#768390\"># Prune all receipts from transactions before the block 1920000, i.e. keep receipts from the block 1920000</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Account History pruning configuration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">account_history = { distance = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100_000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#6A737D;--shiki-dark:#768390\"># Prune all historical account states before the block `head-100000`</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Storage History pruning configuration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">storage_history = { distance = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100_000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#6A737D;--shiki-dark:#768390\"># Prune all historical storage states before the block `head-100000`</span></span></code></pre>\n<p>We can also prune receipts more granular, using the logs filtering:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Receipts pruning configuration by retaining only those receipts that contain logs emitted</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># by the specified addresses, discarding all others. This setting is overridden by `receipts`.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">prune</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">segments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">receipts_log_filter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Prune all receipts, leaving only those which:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># - Contain logs from address `0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48`, starting from the block 17000000</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># - Contain logs from address `0xdac17f958d2ee523a2206206994597c13d831ec7` in the last 1001 blocks</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&quot;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&quot; = { before = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">17000000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&quot;0xdac17f958d2ee523a2206206994597c13d831ec7&quot; = { distance = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span></code></pre>","isPage":false,"text":"\nThis configuration will:\n\nRun pruning every 5 blocks\nContinuously prune all transaction senders, account history and storage history before the block head-100_000,\ni.e. keep the data for the last 100_000 blocks\nPrune all receipts before the block 1920000, i.e. keep receipts from the block 1920000\n\n[prune]\n# Minimum pruning interval measured in blocks\nblock_interval = 5\n \n[prune.segments]\n# Sender Recovery pruning configuration\nsender_recovery = { distance = 100_000 } # Prune all transaction senders before the block `head-100000`, i.e. keep transaction senders for the last 100001 blocks\n \n# Transaction Lookup pruning configuration\ntransaction_lookup = &quot;full&quot; # Prune all TxNumber =&gt; TxHash mappings\n \n# Receipts pruning configuration. This setting overrides `receipts_log_filter`.\nreceipts = { before = 1920000 } # Prune all receipts from transactions before the block 1920000, i.e. keep receipts from the block 1920000\n \n# Account History pruning configuration\naccount_history = { distance = 100_000 } # Prune all historical account states before the block `head-100000`\n \n# Storage History pruning configuration\nstorage_history = { distance = 100_000 } # Prune all historical storage states before the block `head-100000`\nWe can also prune receipts more granular, using the logs filtering:\n# Receipts pruning configuration by retaining only those receipts that contain logs emitted\n# by the specified addresses, discarding all others. This setting is overridden by `receipts`.\n[prune.segments.receipts_log_filter]\n# Prune all receipts, leaving only those which:\n# - Contain logs from address `0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48`, starting from the block 17000000\n# - Contain logs from address `0xdac17f958d2ee523a2206206994597c13d831ec7` in the last 1001 blocks\n&quot;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&quot; = { before = 17000000 }\n&quot;0xdac17f958d2ee523a2206206994597c13d831ec7&quot; = { distance = 1000 }","title":"Example of the custom pruning configuration","titles":["Configuring Reth","The [prune] section"]},"156":{"href":"/run/mainnet#running-reth-on-ethereum-mainnet-or-testnets","html":"</header>\n<p>Reth is an <a href=\"https://ethereum.org/en/developers/docs/nodes-and-clients/#execution-clients\"><em>execution client</em></a>. After Ethereum&#x27;s transition to Proof of Stake (aka the Merge) it became required to run a <a href=\"https://ethereum.org/en/developers/docs/nodes-and-clients/#consensus-clients\"><em>consensus client</em></a> along your execution client in order to sync into any &quot;post-Merge&quot; network. This is because the Ethereum execution layer now outsources consensus to a separate component, known as the consensus client.</p>\n<p>Consensus clients decide what blocks are part of the chain, while execution clients only validate that transactions and blocks are valid in themselves and with respect to the world state. In other words, execution clients execute blocks and transactions and check their validity, while consensus clients determine which valid blocks should be part of the chain. Therefore, running a consensus client in parallel with the execution client is necessary to ensure synchronization and participation in the network.</p>\n<p>By running both an execution client like Reth and a consensus client, such as Lighthouse 🦀 (which we will assume for this guide), you can effectively contribute to the Ethereum network and participate in the consensus process, even if you don&#x27;t intend to run validators.</p>\n<table><thead><tr><th>Client</th><th>Role</th></tr></thead><tbody><tr><td>Execution</td><td>Validates transactions and blocks</td></tr><tr><td></td><td>(checks their validity and global state)</td></tr><tr><td>Consensus</td><td>Determines which blocks are part of the chain</td></tr><tr><td></td><td>(makes consensus decisions)</td></tr></tbody></table>\n","isPage":true,"text":"\nReth is an execution client. After Ethereum&#x27;s transition to Proof of Stake (aka the Merge) it became required to run a consensus client along your execution client in order to sync into any &quot;post-Merge&quot; network. This is because the Ethereum execution layer now outsources consensus to a separate component, known as the consensus client.\nConsensus clients decide what blocks are part of the chain, while execution clients only validate that transactions and blocks are valid in themselves and with respect to the world state. In other words, execution clients execute blocks and transactions and check their validity, while consensus clients determine which valid blocks should be part of the chain. Therefore, running a consensus client in parallel with the execution client is necessary to ensure synchronization and participation in the network.\nBy running both an execution client like Reth and a consensus client, such as Lighthouse 🦀 (which we will assume for this guide), you can effectively contribute to the Ethereum network and participate in the consensus process, even if you don&#x27;t intend to run validators.\nClientRoleExecutionValidates transactions and blocks(checks their validity and global state)ConsensusDetermines which blocks are part of the chain(makes consensus decisions)\n","title":"Running Reth on Ethereum Mainnet or testnets","titles":[]},"157":{"href":"/run/mainnet#running-the-reth-node","html":"\n<p>First, ensure that you have Reth installed by following the <a href=\"./../installation/installation\">installation instructions</a>.</p>\n<p>Now, to start the archive node, run:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span></span></code></pre>\n<p>And to start the full node, run:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --full</span></span></code></pre>\n<p>On differences between archive and full nodes, see <a href=\"./pruning#basic-concepts\">Pruning &amp; Full Node</a> section.</p>\n<blockquote>\n<p>Note that these commands will not open any HTTP/WS ports by default. You can change this by adding the <code>--http</code>, <code>--ws</code> flags, respectively and using the <code>--http.api</code> and <code>--ws.api</code> flags to enable various <a href=\"../jsonrpc/intro\">JSON-RPC APIs</a>. For more commands, see the <a href=\"#TODO\"><code>reth node</code> CLI reference</a>.</p>\n</blockquote>\n<p>The EL &lt;&gt; CL communication happens over the <a href=\"https://github.com/ethereum/execution-apis/blob/main/src/engine/common\">Engine API</a>, which is by default exposed at <code>http://localhost:8551</code>. The connection is authenticated over JWT using a JWT secret which is auto-generated by Reth and placed in a file called <code>jwt.hex</code> in the data directory, which on Linux by default is <code>$HOME/.local/share/reth/</code> (<code>/Users/&lt;NAME&gt;/Library/Application Support/reth/mainnet/jwt.hex</code> in Mac).</p>\n<p>You can override this path using the <code>--authrpc.jwtsecret</code> option. You MUST use the same JWT secret in BOTH Reth and the chosen Consensus Layer. If you want to override the address or port, you can use the <code>--authrpc.addr</code> and <code>--authrpc.port</code> options, respectively.</p>\n<p>So one might do:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --authrpc.jwtsecret</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /path/to/secret</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --authrpc.addr</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 127.0.0.1</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --authrpc.port</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 8551</span></span></code></pre>\n<p>At this point, our Reth node has started discovery, and even discovered some new peers. But it will not start syncing until you spin up the consensus layer!</p>\n","isPage":false,"text":"\nFirst, ensure that you have Reth installed by following the installation instructions.\nNow, to start the archive node, run:\nreth node\nAnd to start the full node, run:\nreth node --full\nOn differences between archive and full nodes, see Pruning &amp; Full Node section.\n\nNote that these commands will not open any HTTP/WS ports by default. You can change this by adding the --http, --ws flags, respectively and using the --http.api and --ws.api flags to enable various JSON-RPC APIs. For more commands, see the reth node CLI reference.\n\nThe EL &lt;&gt; CL communication happens over the Engine API, which is by default exposed at http://localhost:8551. The connection is authenticated over JWT using a JWT secret which is auto-generated by Reth and placed in a file called jwt.hex in the data directory, which on Linux by default is $HOME/.local/share/reth/ (/Users/&lt;NAME&gt;/Library/Application Support/reth/mainnet/jwt.hex in Mac).\nYou can override this path using the --authrpc.jwtsecret option. You MUST use the same JWT secret in BOTH Reth and the chosen Consensus Layer. If you want to override the address or port, you can use the --authrpc.addr and --authrpc.port options, respectively.\nSo one might do:\nreth node \\\n    --authrpc.jwtsecret /path/to/secret \\\n    --authrpc.addr 127.0.0.1 \\\n    --authrpc.port 8551\nAt this point, our Reth node has started discovery, and even discovered some new peers. But it will not start syncing until you spin up the consensus layer!\n","title":"Running the Reth Node","titles":["Running Reth on Ethereum Mainnet or testnets"]},"158":{"href":"/run/mainnet#running-the-consensus-layer","html":"\n<p>First, make sure you have Lighthouse installed. Sigma Prime provides excellent <a href=\"https://lighthouse-book.sigmaprime.io/installation.html\">installation</a> and <a href=\"https://lighthouse-book.sigmaprime.io/run_a_node.html\">node operation</a> instructions.</p>\n<p>Assuming you have done that, run:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">lighthouse</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> bn</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --checkpoint-sync-url</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://mainnet.checkpoint.sigp.io</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --execution-endpoint</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> http://localhost:8551</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --execution-jwt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /path/to/secret</span></span></code></pre>\n<p>If you don&#x27;t intend on running validators on your node you can add:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">  --disable-deposit-contract-sync</span></span></code></pre>\n<p>The <code>--checkpoint-sync-url</code> argument value can be replaced with any checkpoint sync endpoint from a <a href=\"https://eth-clients.github.io/checkpoint-sync-endpoints/#mainnet\">community maintained list</a>.</p>\n<p>Your Reth node should start receiving &quot;fork choice updated&quot; messages, and begin syncing the chain.</p>\n","isPage":false,"text":"\nFirst, make sure you have Lighthouse installed. Sigma Prime provides excellent installation and node operation instructions.\nAssuming you have done that, run:\nlighthouse bn \\\n    --checkpoint-sync-url https://mainnet.checkpoint.sigp.io \\\n    --execution-endpoint http://localhost:8551 \\\n    --execution-jwt /path/to/secret\nIf you don&#x27;t intend on running validators on your node you can add:\n  --disable-deposit-contract-sync\nThe --checkpoint-sync-url argument value can be replaced with any checkpoint sync endpoint from a community maintained list.\nYour Reth node should start receiving &quot;fork choice updated&quot; messages, and begin syncing the chain.\n","title":"Running the Consensus Layer","titles":["Running Reth on Ethereum Mainnet or testnets"]},"159":{"href":"/run/mainnet#verify-the-chain-is-growing","html":"\n<p>You can easily verify that by inspecting the logs, and seeing that headers are arriving in Reth. Sit back now and wait for the stages to run!\nIn the meantime, consider setting up <a href=\"./observability\">observability</a> to monitor your node&#x27;s health or <a href=\"../jsonrpc/intro\">test the JSON RPC API</a>.</p>\n\n","isPage":false,"text":"\nYou can easily verify that by inspecting the logs, and seeing that headers are arriving in Reth. Sit back now and wait for the stages to run!\nIn the meantime, consider setting up observability to monitor your node&#x27;s health or test the JSON RPC API.\n\n","title":"Verify the chain is growing","titles":["Running Reth on Ethereum Mainnet or testnets"]},"160":{"href":"/run/mainnet#running-without-a-consensus-layer","html":"\n<p>We provide a method for running Reth without a Consensus Layer via the <code>--debug.tip &lt;HASH&gt;</code> parameter. If you provide that to your node, it will simulate sending an <code>engine_forkchoiceUpdated</code> message <em>once</em> and will trigger syncing to the provided block hash. This is useful for testing and debugging purposes, but in order to have a node that can keep up with the tip you&#x27;ll need to run a CL alongside it. At the moment we have no plans of including a Consensus Layer implementation in Reth, and we are open to including light clients other methods of syncing like importing Lighthouse as a library.</p>\n","isPage":false,"text":"\nWe provide a method for running Reth without a Consensus Layer via the --debug.tip &lt;HASH&gt; parameter. If you provide that to your node, it will simulate sending an engine_forkchoiceUpdated message once and will trigger syncing to the provided block hash. This is useful for testing and debugging purposes, but in order to have a node that can keep up with the tip you&#x27;ll need to run a CL alongside it. At the moment we have no plans of including a Consensus Layer implementation in Reth, and we are open to including light clients other methods of syncing like importing Lighthouse as a library.\n","title":"Running without a Consensus Layer","titles":["Running Reth on Ethereum Mainnet or testnets"]},"161":{"href":"/run/mainnet#running-with-etherscan-as-block-source","html":"\n<p>You can use <code>--debug.etherscan</code> to run Reth with a fake consensus client that advances the chain using recent blocks on Etherscan. This requires an Etherscan API key (set via <code>ETHERSCAN_API_KEY</code> environment variable). Optionally, specify a custom API URL with <code>--debug.etherscan &lt;URL&gt;</code>.</p>\n<p>Example:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ETHERSCAN_API_KEY</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">your_api_key_here</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --debug.etherscan</span></span></code></pre>","isPage":false,"text":"\nYou can use --debug.etherscan to run Reth with a fake consensus client that advances the chain using recent blocks on Etherscan. This requires an Etherscan API key (set via ETHERSCAN_API_KEY environment variable). Optionally, specify a custom API URL with --debug.etherscan &lt;URL&gt;.\nExample:\nexport ETHERSCAN_API_KEY=your_api_key_here\nreth node --debug.etherscan","title":"Running with Etherscan as Block Source","titles":["Running Reth on Ethereum Mainnet or testnets"]},"162":{"href":"/run/observability#observability-with-prometheus--grafana","html":"</header>\n<p>Reth exposes a number of metrics which can be enabled by adding the <code>--metrics</code> flag:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --metrics</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 127.0.0.1:9001</span></span></code></pre>\n<p>Now, as the node is running, you can <code>curl</code> the endpoint you provided to the <code>--metrics</code> flag to get a text dump of the metrics at that time:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">curl</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 127.0.0.1:9001</span></span></code></pre>\n<p>The response from this is quite descriptive, but it can be a bit verbose. Plus, it&#x27;s just a static_file of the metrics at the time that you <code>curl</code>ed the endpoint.</p>\n<p>You can run the following command in a separate terminal to periodically poll the endpoint, and just print the values (without the header text) to the terminal:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">while</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">do</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> date</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">curl</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> localhost:9001</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> grep</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -Ev</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;^(#|$)&#x27;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> sort</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sleep</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">done</span></span></code></pre>\n<p>We&#x27;re finally getting somewhere! As a final step, though, wouldn&#x27;t it be great to see how these metrics progress over time (and generally, in a GUI)?</p>\n","isPage":true,"text":"\nReth exposes a number of metrics which can be enabled by adding the --metrics flag:\nreth node --metrics 127.0.0.1:9001\nNow, as the node is running, you can curl the endpoint you provided to the --metrics flag to get a text dump of the metrics at that time:\ncurl 127.0.0.1:9001\nThe response from this is quite descriptive, but it can be a bit verbose. Plus, it&#x27;s just a static_file of the metrics at the time that you curled the endpoint.\nYou can run the following command in a separate terminal to periodically poll the endpoint, and just print the values (without the header text) to the terminal:\nwhile true; do date; curl -s localhost:9001 | grep -Ev &#x27;^(#|$)&#x27; | sort; echo; sleep 10; done\nWe&#x27;re finally getting somewhere! As a final step, though, wouldn&#x27;t it be great to see how these metrics progress over time (and generally, in a GUI)?\n","title":"Observability with Prometheus &amp; Grafana","titles":[]},"163":{"href":"/run/observability#prometheus--grafana","html":"\n<p>We&#x27;re going to use Prometheus to scrape the metrics from our node, and use Grafana to on a dashboard.</p>\n<p>Let&#x27;s begin by installing both Prometheus and Grafana:</p>\n","isPage":false,"text":"\nWe&#x27;re going to use Prometheus to scrape the metrics from our node, and use Grafana to on a dashboard.\nLet&#x27;s begin by installing both Prometheus and Grafana:\n","title":"Prometheus &amp; Grafana","titles":["Observability with Prometheus &amp; Grafana"]},"164":{"href":"/run/observability#macos","html":"\n<p>Using Homebrew:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">brew</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> update</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">brew</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> prometheus</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">brew</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> grafana</span></span></code></pre>\n","isPage":false,"text":"\nUsing Homebrew:\nbrew update\nbrew install prometheus\nbrew install grafana\n","title":"macOS","titles":["Observability with Prometheus &amp; Grafana","Prometheus &amp; Grafana"]},"165":{"href":"/run/observability#linux","html":"\n","isPage":false,"text":"\n","title":"Linux","titles":["Observability with Prometheus &amp; Grafana","Prometheus &amp; Grafana"]},"166":{"href":"/run/observability#debianubuntu","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Install Prometheus</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Visit https://prometheus.io/download/ for the latest version</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">PROM_VERSION</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">$(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">curl</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://api.github.com/repos/prometheus/prometheus/releases/latest</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> grep</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> tag_name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cut</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;&quot;&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -f</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 4</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cut</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -c</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 2-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">wget</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/prometheus/prometheus/releases/download/v</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">${PROM_VERSION}</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">/prometheus-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">${PROM_VERSION}</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.linux-amd64.tar.gz</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tar</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> xvfz</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> prometheus-</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">*</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.tar.gz</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> prometheus-</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">*</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Install Grafana</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> apt-get</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -y</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> apt-transport-https</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> software-properties-common</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">wget</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -q</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -O</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> -</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://packages.grafana.com/gpg.key</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> apt-key</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> -</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;deb https://packages.grafana.com/oss/deb stable main&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> tee</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -a</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /etc/apt/sources.list.d/grafana.list</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> apt-get</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> update</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> apt-get</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> grafana</span></span></code></pre>\n","isPage":false,"text":"\n# Install Prometheus\n# Visit https://prometheus.io/download/ for the latest version\nPROM_VERSION=$(curl -s https://api.github.com/repos/prometheus/prometheus/releases/latest | grep tag_name | cut -d &#x27;&quot;&#x27; -f 4 | cut -c 2-)\nwget https://github.com/prometheus/prometheus/releases/download/v${PROM_VERSION}/prometheus-${PROM_VERSION}.linux-amd64.tar.gz\ntar xvfz prometheus-*.tar.gz\ncd prometheus-*\n \n# Install Grafana\nsudo apt-get install -y apt-transport-https software-properties-common\nwget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -\necho &quot;deb https://packages.grafana.com/oss/deb stable main&quot; | sudo tee -a /etc/apt/sources.list.d/grafana.list\nsudo apt-get update\nsudo apt-get install grafana\n","title":"Debian/Ubuntu","titles":["Observability with Prometheus &amp; Grafana","Prometheus &amp; Grafana","Linux"]},"167":{"href":"/run/observability#fedorarhelcentos","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Install Prometheus</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Visit https://prometheus.io/download/ for the latest version</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">PROM_VERSION</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">$(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">curl</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://api.github.com/repos/prometheus/prometheus/releases/latest</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> grep</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> tag_name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cut</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;&quot;&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -f</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 4</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cut</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -c</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 2-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">wget</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/prometheus/prometheus/releases/download/v</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">${PROM_VERSION}</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">/prometheus-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">${PROM_VERSION}</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.linux-amd64.tar.gz</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tar</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> xvfz</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> prometheus-</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">*</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.tar.gz</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> prometheus-</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">*</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Install Grafana</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Visit https://grafana.com/grafana/download for the latest version</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> dnf</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -y</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://dl.grafana.com/oss/release/grafana-latest-1.x86_64.rpm</span></span></code></pre>\n","isPage":false,"text":"\n# Install Prometheus\n# Visit https://prometheus.io/download/ for the latest version\nPROM_VERSION=$(curl -s https://api.github.com/repos/prometheus/prometheus/releases/latest | grep tag_name | cut -d &#x27;&quot;&#x27; -f 4 | cut -c 2-)\nwget https://github.com/prometheus/prometheus/releases/download/v${PROM_VERSION}/prometheus-${PROM_VERSION}.linux-amd64.tar.gz\ntar xvfz prometheus-*.tar.gz\ncd prometheus-*\n \n# Install Grafana\n# Visit https://grafana.com/grafana/download for the latest version\nsudo dnf install -y https://dl.grafana.com/oss/release/grafana-latest-1.x86_64.rpm\n","title":"Fedora/RHEL/CentOS","titles":["Observability with Prometheus &amp; Grafana","Prometheus &amp; Grafana","Linux"]},"168":{"href":"/run/observability#windows","html":"\n","isPage":false,"text":"\n","title":"Windows","titles":["Observability with Prometheus &amp; Grafana","Prometheus &amp; Grafana"]},"169":{"href":"/run/observability#using-chocolatey","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">choco install prometheus</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">choco install grafana</span></span></code></pre>\n","isPage":false,"text":"\nchoco install prometheus\nchoco install grafana\n","title":"Using Chocolatey","titles":["Observability with Prometheus &amp; Grafana","Prometheus &amp; Grafana","Windows"]},"170":{"href":"/run/observability#manual-installation","html":"\n<ol>\n<li>Download the latest Prometheus from <a href=\"https://prometheus.io/download/\">prometheus.io/download</a>\n<ul>\n<li>Select the Windows binary (.zip) for your architecture (typically windows-amd64)</li>\n</ul>\n</li>\n<li>Download the latest Grafana from <a href=\"https://grafana.com/grafana/download\">grafana.com/grafana/download</a>\n<ul>\n<li>Choose the Windows installer (.msi) or standalone version</li>\n</ul>\n</li>\n<li>Extract Prometheus to a location of your choice (e.g., <code>C:\\prometheus</code>)</li>\n<li>Install Grafana by running the installer or extracting the standalone version</li>\n<li>Configure Prometheus and Grafana to run as services if needed</li>\n</ol>\n<p>Then, kick off the Prometheus and Grafana services:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># For macOS</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">brew</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> services</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> start</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> prometheus</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">brew</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> services</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> start</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> grafana</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># For Linux (syst-based distributions)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> systemctl</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> start</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> prometheus</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> systemctl</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> start</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> grafana-server</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># For Windows (if installed as services)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Start-Service</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> prometheus</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Start-Service</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> grafana</span></span></code></pre>\n<p>This will start a Prometheus service which <a href=\"https://prometheus.io/docs/introduction/first_steps/#:~:text=The%20job%20contains%20a%20single,%3A%2F%2Flocalhost%3A9090%2Fmetrics.\">by default scrapes itself about the current instance</a>. So you&#x27;ll need to change its config to hit your Reth node’s metrics endpoint at <code>localhost:9001</code> which you set using the <code>--metrics</code> flag.</p>\n<p>You can find an example config for the Prometheus service in the repo here: <a href=\"https://github.com/paradigmxyz/reth/blob/main/etc/prometheus/prometheus.yml\"><code>etc/prometheus/prometheus.yml</code></a></p>\n<p>Depending on your installation you may find the config for your Prometheus service at:</p>\n<ul>\n<li>OSX: <code>/opt/homebrew/etc/prometheus.yml</code></li>\n<li>Linuxbrew: <code>/home/linuxbrew/.linuxbrew/etc/prometheus.yml</code></li>\n<li>Others: <code>/usr/local/etc/prometheus/prometheus.yml</code></li>\n</ul>\n<p>Next, open up &quot;localhost:3000&quot; in your browser, which is the default URL for Grafana. Here, &quot;admin&quot; is the default for both the username and password.</p>\n<p>Once you&#x27;ve logged in, click on &quot;Connections&quot; in the left side panel and select &quot;Data Sources&quot;. Click on &quot;Add data source&quot;, and select &quot;Prometheus&quot; as the type. In the HTTP URL field, enter <a href=\"http://localhost:9090\">http://localhost:9090</a>. Finally, click &quot;Save &amp; Test&quot;.</p>\n<p>As this might be a point of confusion, <code>localhost:9001</code>, which we supplied to <code>--metrics</code>, is the endpoint that Reth exposes, from which Prometheus collects metrics. Prometheus then exposes <code>localhost:9090</code> (by default) for other services (such as Grafana) to consume Prometheus metrics.</p>\n<p>To configure the dashboard in Grafana, click on the squares icon in the upper left, and click on &quot;New&quot;, then &quot;Import&quot;. From there, click on &quot;Upload JSON file&quot;, and select the example file in <a href=\"https://github.com/paradigmxyz/reth/blob/main/etc/grafana/dashboards/overview.json\"><code>reth/etc/grafana/dashboards/overview.json</code></a>. Finally, select the Prometheus data source you just created, and click &quot;Import&quot;.</p>\n<p>And voilà, you should see your dashboard! If you&#x27;re not yet connected to any peers, the dashboard will look like it&#x27;s in an empty state, but once you are, you should see it start populating with data.</p>\n","isPage":false,"text":"\n\nDownload the latest Prometheus from prometheus.io/download\n\nSelect the Windows binary (.zip) for your architecture (typically windows-amd64)\n\n\nDownload the latest Grafana from grafana.com/grafana/download\n\nChoose the Windows installer (.msi) or standalone version\n\n\nExtract Prometheus to a location of your choice (e.g., C:\\prometheus)\nInstall Grafana by running the installer or extracting the standalone version\nConfigure Prometheus and Grafana to run as services if needed\n\nThen, kick off the Prometheus and Grafana services:\n# For macOS\nbrew services start prometheus\nbrew services start grafana\n \n# For Linux (syst-based distributions)\nsudo systemctl start prometheus\nsudo systemctl start grafana-server\n \n# For Windows (if installed as services)\nStart-Service prometheus\nStart-Service grafana\nThis will start a Prometheus service which by default scrapes itself about the current instance. So you&#x27;ll need to change its config to hit your Reth node’s metrics endpoint at localhost:9001 which you set using the --metrics flag.\nYou can find an example config for the Prometheus service in the repo here: etc/prometheus/prometheus.yml\nDepending on your installation you may find the config for your Prometheus service at:\n\nOSX: /opt/homebrew/etc/prometheus.yml\nLinuxbrew: /home/linuxbrew/.linuxbrew/etc/prometheus.yml\nOthers: /usr/local/etc/prometheus/prometheus.yml\n\nNext, open up &quot;localhost:3000&quot; in your browser, which is the default URL for Grafana. Here, &quot;admin&quot; is the default for both the username and password.\nOnce you&#x27;ve logged in, click on &quot;Connections&quot; in the left side panel and select &quot;Data Sources&quot;. Click on &quot;Add data source&quot;, and select &quot;Prometheus&quot; as the type. In the HTTP URL field, enter http://localhost:9090. Finally, click &quot;Save &amp; Test&quot;.\nAs this might be a point of confusion, localhost:9001, which we supplied to --metrics, is the endpoint that Reth exposes, from which Prometheus collects metrics. Prometheus then exposes localhost:9090 (by default) for other services (such as Grafana) to consume Prometheus metrics.\nTo configure the dashboard in Grafana, click on the squares icon in the upper left, and click on &quot;New&quot;, then &quot;Import&quot;. From there, click on &quot;Upload JSON file&quot;, and select the example file in reth/etc/grafana/dashboards/overview.json. Finally, select the Prometheus data source you just created, and click &quot;Import&quot;.\nAnd voilà, you should see your dashboard! If you&#x27;re not yet connected to any peers, the dashboard will look like it&#x27;s in an empty state, but once you are, you should see it start populating with data.\n","title":"Manual installation","titles":["Observability with Prometheus &amp; Grafana","Prometheus &amp; Grafana","Windows"]},"171":{"href":"/run/observability#conclusion","html":"\n<p>In this runbook, we took you through starting the node, exposing different log levels, exporting metrics, and finally viewing those metrics in a Grafana dashboard.</p>\n<p>This will all be very useful to you, whether you&#x27;re simply running a home node and want to keep an eye on its performance, or if you&#x27;re a contributor and want to see the effect that your (or others&#x27;) changes have on Reth&#x27;s operations.</p>","isPage":false,"text":"\nIn this runbook, we took you through starting the node, exposing different log levels, exporting metrics, and finally viewing those metrics in a Grafana dashboard.\nThis will all be very useful to you, whether you&#x27;re simply running a home node and want to keep an eye on its performance, or if you&#x27;re a contributor and want to see the effect that your (or others&#x27;) changes have on Reth&#x27;s operations.","title":"Conclusion","titles":["Observability with Prometheus &amp; Grafana"]},"172":{"href":"/run/optimism#running-reth-on-op-stack-chains","html":"</header>\n<p><code>reth</code> ships with the <code>optimism</code> feature flag in several crates, including the binary, enabling support for OP Stack chains out of the box. Optimism has a small diff from the <a href=\"https://github.com/ethereum/execution-specs\">L1 EELS</a>,\ncomprising of the following key changes:</p>\n<ol>\n<li>A new transaction type, <a href=\"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/deposits\"><code>0x7E (Deposit)</code></a>, which is used to deposit funds from L1 to L2.</li>\n<li>Modifications to the <code>PayloadAttributes</code> that allow the <a href=\"https://github.com/ethereum-optimism/specs/blob/main/specs/background#sequencers\">sequencer</a> to submit transactions to the EL through the Engine API. Payloads will be built with deposit transactions at the top of the block,\nwith the first deposit transaction always being the &quot;L1 Info Transaction.&quot;</li>\n<li><a href=\"https://eips.ethereum.org/EIPS/eip-1559\">EIP-1559</a> denominator and elasticity parameters have been adjusted to account for the lower block time (2s) on L2. Otherwise, the 1559 formula remains the same.</li>\n<li>Network fees are distributed to the various <a href=\"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/exec-engine\">fee vaults</a>.</li>\n<li>... and some other minor changes.</li>\n</ol>\n<p>For a more in-depth list of changes and their rationale, as well as specifics about the OP Stack specification such as transaction ordering and more, see the documented <a href=\"https://op-geth.optimism.io\"><code>op-geth</code> diff</a>,\nthe <a href=\"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/exec-engine\">L2 EL specification</a>, and the <a href=\"https://github.com/ethereum-optimism/specs/blob/main/specs\">OP Stack specification</a>.</p>\n","isPage":true,"text":"\nreth ships with the optimism feature flag in several crates, including the binary, enabling support for OP Stack chains out of the box. Optimism has a small diff from the L1 EELS,\ncomprising of the following key changes:\n\nA new transaction type, 0x7E (Deposit), which is used to deposit funds from L1 to L2.\nModifications to the PayloadAttributes that allow the sequencer to submit transactions to the EL through the Engine API. Payloads will be built with deposit transactions at the top of the block,\nwith the first deposit transaction always being the &quot;L1 Info Transaction.&quot;\nEIP-1559 denominator and elasticity parameters have been adjusted to account for the lower block time (2s) on L2. Otherwise, the 1559 formula remains the same.\nNetwork fees are distributed to the various fee vaults.\n... and some other minor changes.\n\nFor a more in-depth list of changes and their rationale, as well as specifics about the OP Stack specification such as transaction ordering and more, see the documented op-geth diff,\nthe L2 EL specification, and the OP Stack specification.\n","title":"Running Reth on OP Stack chains","titles":[]},"173":{"href":"/run/optimism#superchain-registry","html":"\n<p>Since 1.4.0 op-reth has built in support for all chains in the <a href=\"https://github.com/ethereum-optimism/superchain-registry\">superchain registry</a>. All superchains are supported by the <code>--chain</code> argument, e.g. <code>--chain unichain</code> or <code>--chain unichain-sepolia</code>.</p>\n","isPage":false,"text":"\nSince 1.4.0 op-reth has built in support for all chains in the superchain registry. All superchains are supported by the --chain argument, e.g. --chain unichain or --chain unichain-sepolia.\n","title":"Superchain Registry","titles":["Running Reth on OP Stack chains",null]},"174":{"href":"/run/optimism#running-on-optimism","html":"\n<p>You will need three things to run <code>op-reth</code>:</p>\n<ol>\n<li>An archival L1 node, synced to the settlement layer of the OP Stack chain you want to sync (e.g. <code>reth</code>, <code>geth</code>, <code>besu</code>, <code>nethermind</code>, etc.)</li>\n<li>A rollup node (e.g. <code>op-node</code>, <code>magi</code>, <code>hildr</code>, etc.)</li>\n<li>An instance of <code>op-reth</code>.</li>\n</ol>\n<p>For this example, we&#x27;ll start a <code>Base Mainnet</code> node.</p>\n","isPage":false,"text":"\nYou will need three things to run op-reth:\n\nAn archival L1 node, synced to the settlement layer of the OP Stack chain you want to sync (e.g. reth, geth, besu, nethermind, etc.)\nA rollup node (e.g. op-node, magi, hildr, etc.)\nAn instance of op-reth.\n\nFor this example, we&#x27;ll start a Base Mainnet node.\n","title":"Running on Optimism","titles":["Running Reth on OP Stack chains"]},"175":{"href":"/run/optimism#installing-op-reth","html":"\n<p>To run Reth on Optimism, first install <code>op-reth</code> via the <code>Makefile</code> in the workspace root:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> clone</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/paradigmxyz/reth.git</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> &amp;&amp; </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> &amp;&amp; </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    make</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install-op</span></span></code></pre>\n<p>This will install the <code>op-reth</code> binary to <code>~/.cargo/bin/op-reth</code>.</p>\n","isPage":false,"text":"\nTo run Reth on Optimism, first install op-reth via the Makefile in the workspace root:\ngit clone https://github.com/paradigmxyz/reth.git &amp;&amp; \\\n    cd reth &amp;&amp; \\\n    make install-op\nThis will install the op-reth binary to ~/.cargo/bin/op-reth.\n","title":"Installing op-reth","titles":["Running Reth on OP Stack chains","Running on Optimism"]},"176":{"href":"/run/optimism#installing-a-rollup-node","html":"\n<p>Next, you&#x27;ll need to install a <a href=\"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/rollup-node\">Rollup Node</a>, which is the equivalent to the Consensus Client on the OP Stack. Available options include:</p>\n<ol>\n<li><a href=\"https://github.com/ethereum-optimism/optimism/tree/develop/op-node\"><code>op-node</code></a></li>\n<li><a href=\"https://github.com/a16z/magi\"><code>magi</code></a></li>\n<li><a href=\"https://github.com/optimism-java/hildr\"><code>hildr</code></a></li>\n</ol>\n<p>For the sake of this tutorial, we&#x27;ll use the reference implementation of the Rollup Node maintained by OP Labs, the <code>op-node</code>. The <code>op-node</code> can be built from source, or pulled from a <a href=\"https://console.cloud.google.com/artifacts/docker/oplabs-tools-artifacts/us/images/op-node\">Docker image available on Google Cloud</a>.</p>\n","isPage":false,"text":"\nNext, you&#x27;ll need to install a Rollup Node, which is the equivalent to the Consensus Client on the OP Stack. Available options include:\n\nop-node\nmagi\nhildr\n\nFor the sake of this tutorial, we&#x27;ll use the reference implementation of the Rollup Node maintained by OP Labs, the op-node. The op-node can be built from source, or pulled from a Docker image available on Google Cloud.\n","title":"Installing a Rollup Node","titles":["Running Reth on OP Stack chains","Running on Optimism"]},"177":{"href":"/run/optimism#running-op-reth","html":"\n<p>op-reth supports additional OP Stack specific CLI arguments:</p>\n<ol>\n<li><code>--rollup.sequencer-http &lt;uri&gt;</code> - The sequencer endpoint to connect to. Transactions sent to the <code>op-reth</code> EL are also forwarded to this sequencer endpoint for inclusion, as the sequencer is the entity that builds blocks on OP Stack chains.</li>\n<li><code>--rollup.disable-tx-pool-gossip</code> - Disables gossiping of transactions in the mempool to peers. This can be omitted for personal nodes, though providers should always opt to enable this flag.</li>\n<li><code>--rollup.enable-genesis-walkback</code> - Disables setting the forkchoice status to tip on startup, making the <code>op-node</code> walk back to genesis and verify the integrity of the chain before starting to sync. This can be omitted unless a corruption of local chainstate is suspected.</li>\n<li><code>--rollup.discovery.v4</code> - Enables the discovery v4 protocol for peer discovery. By default, op-reth, similar to op-geth, has discovery v5 enabled and discovery v4 disabled, whereas regular reth has discovery v4 enabled and discovery v5 disabled.</li>\n</ol>\n<p>First, ensure that your L1 archival node is running and synced to tip. Also make sure that the beacon node / consensus layer client is running and has http APIs enabled. Then, start <code>op-reth</code> with the <code>--rollup.sequencer-http</code> flag set to the <code>Base Mainnet</code> sequencer endpoint:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">op-reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --chain</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> base</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --rollup.sequencer-http</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://mainnet-sequencer.base.org</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --http</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --ws</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --authrpc.port</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 9551</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --authrpc.jwtsecret</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /path/to/jwt.hex</span></span></code></pre>\n<p>Then, once <code>op-reth</code> has been started, start up the <code>op-node</code>:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">op-node</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --network=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;base-mainnet&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --l1=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">your-L1-rpc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --l2=http://localhost:9551</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --l2.jwt-secret=/path/to/jwt.hex</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --rpc.addr=0.0.0.0</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --rpc.port=7000</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --l1.beacon=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">your-beacon-node-http-endpoint</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --syncmode=execution-layer</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --l2.enginekind=reth</span></span></code></pre>\n<p>Consider adding the <code>--l1.trustrpc</code> flag to improve performance, if the connection to l1 is over localhost.</p>","isPage":false,"text":"\nop-reth supports additional OP Stack specific CLI arguments:\n\n--rollup.sequencer-http &lt;uri&gt; - The sequencer endpoint to connect to. Transactions sent to the op-reth EL are also forwarded to this sequencer endpoint for inclusion, as the sequencer is the entity that builds blocks on OP Stack chains.\n--rollup.disable-tx-pool-gossip - Disables gossiping of transactions in the mempool to peers. This can be omitted for personal nodes, though providers should always opt to enable this flag.\n--rollup.enable-genesis-walkback - Disables setting the forkchoice status to tip on startup, making the op-node walk back to genesis and verify the integrity of the chain before starting to sync. This can be omitted unless a corruption of local chainstate is suspected.\n--rollup.discovery.v4 - Enables the discovery v4 protocol for peer discovery. By default, op-reth, similar to op-geth, has discovery v5 enabled and discovery v4 disabled, whereas regular reth has discovery v4 enabled and discovery v5 disabled.\n\nFirst, ensure that your L1 archival node is running and synced to tip. Also make sure that the beacon node / consensus layer client is running and has http APIs enabled. Then, start op-reth with the --rollup.sequencer-http flag set to the Base Mainnet sequencer endpoint:\nop-reth node \\\n    --chain base \\\n    --rollup.sequencer-http https://mainnet-sequencer.base.org \\\n    --http \\\n    --ws \\\n    --authrpc.port 9551 \\\n    --authrpc.jwtsecret /path/to/jwt.hex\nThen, once op-reth has been started, start up the op-node:\nop-node \\\n    --network=&quot;base-mainnet&quot; \\\n    --l1=&lt;your-L1-rpc&gt; \\\n    --l2=http://localhost:9551 \\\n    --l2.jwt-secret=/path/to/jwt.hex \\\n    --rpc.addr=0.0.0.0 \\\n    --rpc.port=7000 \\\n    --l1.beacon=&lt;your-beacon-node-http-endpoint&gt; \\\n    --syncmode=execution-layer \\\n    --l2.enginekind=reth\nConsider adding the --l1.trustrpc flag to improve performance, if the connection to l1 is over localhost.","title":"Running op-reth","titles":["Running Reth on OP Stack chains","Running on Optimism"]},"178":{"href":"/run/ports#ports","html":"</header>\n<p>This section provides essential information about the ports used by the system, their primary purposes, and recommendations for exposure settings.</p>\n","isPage":true,"text":"\nThis section provides essential information about the ports used by the system, their primary purposes, and recommendations for exposure settings.\n","title":"Ports","titles":[]},"179":{"href":"/run/ports#peering-ports","html":"\n<ul>\n<li><strong>Port:</strong> <code>30303</code></li>\n<li><strong>Protocol:</strong> TCP and UDP</li>\n<li><strong>Purpose:</strong> Peering with other nodes for synchronization of blockchain data. Nodes communicate through this port to maintain network consensus and share updated information.</li>\n<li><strong>Exposure Recommendation:</strong> This port should be exposed to enable seamless interaction and synchronization with other nodes in the network.</li>\n</ul>\n","isPage":false,"text":"\n\nPort: 30303\nProtocol: TCP and UDP\nPurpose: Peering with other nodes for synchronization of blockchain data. Nodes communicate through this port to maintain network consensus and share updated information.\nExposure Recommendation: This port should be exposed to enable seamless interaction and synchronization with other nodes in the network.\n\n","title":"Peering Ports","titles":["Ports"]},"180":{"href":"/run/ports#metrics-port","html":"\n<ul>\n<li><strong>Port:</strong> <code>9001</code></li>\n<li><strong>Protocol:</strong> TCP</li>\n<li><strong>Purpose:</strong> This port is designated for serving metrics related to the system&#x27;s performance and operation. It allows internal monitoring and data collection for analysis.</li>\n<li><strong>Exposure Recommendation:</strong> By default, this port should not be exposed to the public. It is intended for internal monitoring and analysis purposes.</li>\n</ul>\n","isPage":false,"text":"\n\nPort: 9001\nProtocol: TCP\nPurpose: This port is designated for serving metrics related to the system&#x27;s performance and operation. It allows internal monitoring and data collection for analysis.\nExposure Recommendation: By default, this port should not be exposed to the public. It is intended for internal monitoring and analysis purposes.\n\n","title":"Metrics Port","titles":["Ports"]},"181":{"href":"/run/ports#http-rpc-port","html":"\n<ul>\n<li><strong>Port:</strong> <code>8545</code></li>\n<li><strong>Protocol:</strong> TCP</li>\n<li><strong>Purpose:</strong> Port 8545 provides an HTTP-based Remote Procedure Call (RPC) interface. It enables external applications to interact with the blockchain by sending requests over HTTP.</li>\n<li><strong>Exposure Recommendation:</strong> Similar to the metrics port, exposing this port to the public is not recommended by default due to security considerations.</li>\n</ul>\n","isPage":false,"text":"\n\nPort: 8545\nProtocol: TCP\nPurpose: Port 8545 provides an HTTP-based Remote Procedure Call (RPC) interface. It enables external applications to interact with the blockchain by sending requests over HTTP.\nExposure Recommendation: Similar to the metrics port, exposing this port to the public is not recommended by default due to security considerations.\n\n","title":"HTTP RPC Port","titles":["Ports"]},"182":{"href":"/run/ports#ws-rpc-port","html":"\n<ul>\n<li><strong>Port:</strong> <code>8546</code></li>\n<li><strong>Protocol:</strong> TCP</li>\n<li><strong>Purpose:</strong> Port 8546 offers a WebSocket-based Remote Procedure Call (RPC) interface. It allows real-time communication between external applications and the blockchain.</li>\n<li><strong>Exposure Recommendation:</strong> As with the HTTP RPC port, the WS RPC port should not be exposed by default for security reasons.</li>\n</ul>\n","isPage":false,"text":"\n\nPort: 8546\nProtocol: TCP\nPurpose: Port 8546 offers a WebSocket-based Remote Procedure Call (RPC) interface. It allows real-time communication between external applications and the blockchain.\nExposure Recommendation: As with the HTTP RPC port, the WS RPC port should not be exposed by default for security reasons.\n\n","title":"WS RPC Port","titles":["Ports"]},"183":{"href":"/run/ports#engine-api-port","html":"\n<ul>\n<li><strong>Port:</strong> <code>8551</code></li>\n<li><strong>Protocol:</strong> TCP</li>\n<li><strong>Purpose:</strong> Port 8551 facilitates communication between specific components, such as &quot;reth&quot; and &quot;CL&quot; (assuming their definitions are understood within the context of the system). It enables essential internal processes.</li>\n<li><strong>Exposure Recommendation:</strong> This port is not meant to be exposed to the public by default. It should be reserved for internal communication between vital components of the system.</li>\n</ul>","isPage":false,"text":"\n\nPort: 8551\nProtocol: TCP\nPurpose: Port 8551 facilitates communication between specific components, such as &quot;reth&quot; and &quot;CL&quot; (assuming their definitions are understood within the context of the system). It enables essential internal processes.\nExposure Recommendation: This port is not meant to be exposed to the public by default. It should be reserved for internal communication between vital components of the system.\n","title":"Engine API Port","titles":["Ports"]},"184":{"href":"/run/private-testnet#run-reth-in-a-private-testnet-using-kurtosis","html":"</header>\n<p>For those who need a private testnet to validate functionality or scale with Reth.</p>\n","isPage":true,"text":"\nFor those who need a private testnet to validate functionality or scale with Reth.\n","title":"Run Reth in a private testnet using Kurtosis","titles":[]},"185":{"href":"/run/private-testnet#using-docker-locally","html":"\n<p>This guide uses <a href=\"https://github.com/ethpandaops/ethereum-package\">Kurtosis&#x27; ethereum-package</a> and assumes you have Kurtosis and Docker installed and have Docker already running on your machine.</p>\n<ul>\n<li>Go <a href=\"https://docs.kurtosis.com/install/\">here</a> to install Kurtosis</li>\n<li>Go <a href=\"https://docs.docker.com/get-docker/\">here</a> to install Docker</li>\n</ul>\n<p>The <a href=\"https://github.com/ethpandaops/ethereum-package\"><code>ethereum-package</code></a> is a <a href=\"https://docs.kurtosis.com/advanced-concepts/packages\">package</a> for a general purpose Ethereum testnet definition used for instantiating private testnets at any scale over Docker or Kubernetes, locally or in the cloud. This guide will go through how to spin up a local private testnet with Reth and various CL clients locally. Specifically, you will instantiate a 2-node network over Docker with Reth/Lighthouse and Reth/Teku client combinations.</p>\n<p>To see all possible configurations and flags you can use, including metrics and observability tools (e.g. Grafana, Prometheus, etc), go <a href=\"https://github.com/ethpandaops/ethereum-package#configuration\">here</a>.</p>\n<p>Genesis data will be generated using this <a href=\"https://github.com/ethpandaops/ethereum-genesis-generator\">genesis-generator</a> to be used to bootstrap the EL and CL clients for each node. The end result will be a private testnet with nodes deployed as Docker containers in an ephemeral, isolated environment on your machine called an <a href=\"https://docs.kurtosis.com/advanced-concepts/enclaves/\">enclave</a>. Read more about how the <code>ethereum-package</code> works by going <a href=\"https://github.com/ethpandaops/ethereum-package/\">here</a>.</p>\n","isPage":false,"text":"\nThis guide uses Kurtosis&#x27; ethereum-package and assumes you have Kurtosis and Docker installed and have Docker already running on your machine.\n\nGo here to install Kurtosis\nGo here to install Docker\n\nThe ethereum-package is a package for a general purpose Ethereum testnet definition used for instantiating private testnets at any scale over Docker or Kubernetes, locally or in the cloud. This guide will go through how to spin up a local private testnet with Reth and various CL clients locally. Specifically, you will instantiate a 2-node network over Docker with Reth/Lighthouse and Reth/Teku client combinations.\nTo see all possible configurations and flags you can use, including metrics and observability tools (e.g. Grafana, Prometheus, etc), go here.\nGenesis data will be generated using this genesis-generator to be used to bootstrap the EL and CL clients for each node. The end result will be a private testnet with nodes deployed as Docker containers in an ephemeral, isolated environment on your machine called an enclave. Read more about how the ethereum-package works by going here.\n","title":"Using Docker locally","titles":["Run Reth in a private testnet using Kurtosis"]},"186":{"href":"/run/private-testnet#step-1-define-the-parameters-and-shape-of-your-private-network","html":"\n<p>First, in your home directory, create a file with the name <code>network_params.yaml</code> with the following contents:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">participants</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    - </span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">el_type</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">reth</span></span>\n<span class=\"line\"><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">      el_image</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">ghcr.io/paradigmxyz/reth</span></span>\n<span class=\"line\"><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">      cl_type</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">lighthouse</span></span>\n<span class=\"line\"><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">      cl_image</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">sigp/lighthouse:latest</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    - </span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">el_type</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">reth</span></span>\n<span class=\"line\"><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">      el_image</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">ghcr.io/paradigmxyz/reth</span></span>\n<span class=\"line\"><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">      cl_type</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">teku</span></span>\n<span class=\"line\"><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">      cl_image</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">consensys/teku:latest</span></span></code></pre>\n<blockquote>\n<p>[!TIP]\nIf you would like to use a modified reth node, you can build an image locally with a custom tag. The tag can then be used in the <code>el_image</code> field in the <code>network_params.yaml</code> file.</p>\n</blockquote>\n","isPage":false,"text":"\nFirst, in your home directory, create a file with the name network_params.yaml with the following contents:\nparticipants:\n    - el_type: reth\n      el_image: ghcr.io/paradigmxyz/reth\n      cl_type: lighthouse\n      cl_image: sigp/lighthouse:latest\n    - el_type: reth\n      el_image: ghcr.io/paradigmxyz/reth\n      cl_type: teku\n      cl_image: consensys/teku:latest\n\n[!TIP]\nIf you would like to use a modified reth node, you can build an image locally with a custom tag. The tag can then be used in the el_image field in the network_params.yaml file.\n\n","title":"Step 1: Define the parameters and shape of your private network","titles":["Run Reth in a private testnet using Kurtosis","Using Docker locally"]},"187":{"href":"/run/private-testnet#step-2-spin-up-your-network","html":"\n<p>Next, run the following command from your command line:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">kurtosis</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> github.com/ethpandaops/ethereum-package</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --args-file</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ~/network_params.yaml</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --image-download</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> always</span></span></code></pre>\n<p>Kurtosis will spin up an <a href=\"https://docs.kurtosis.com/advanced-concepts/enclaves/\">enclave</a> (i.e an ephemeral, isolated environment) and begin to configure and instantiate the nodes in your network. In the end, Kurtosis will print the services running in your enclave that form your private testnet alongside all the container ports and files that were generated &amp; used to start up the private testnet. Here is a sample output:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">INFO[2024-07-09T12:01:35+02:00] ========================================================</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">INFO[2024-07-09T12:01:35+02:00] ||          Created enclave: silent-mountain          ||</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">INFO[2024-07-09T12:01:35+02:00] ========================================================</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Name:            silent-mountain</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">UUID:            cb5d0a7d0e7c</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Status:          RUNNING</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Creation Time:   Tue, 09 Jul 2024 12:00:03 CEST</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Flags:</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">========================================= Files Artifacts =========================================</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">UUID           Name</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">414a075a37aa   1-lighthouse-reth-0-63-0</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">34d0b9ff906b   2-teku-reth-64-127-0</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">dffa1bcd1da1   el_cl_genesis_data</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">fdb202429b26   final-genesis-timestamp</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">da0d9d24b340   genesis-el-cl-env-file</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">55c46a6555ad   genesis_validators_root</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">ba79dbd109dd   jwt_file</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">04948fd8b1e3   keymanager_file</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">538211b6b7d7   prysm-password</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">ed75fe7d5293   validator-ranges</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">========================================== User Services ==========================================</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">UUID           Name                                             Ports                                         Status</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0853f809c300   cl-1-lighthouse-reth                             http: 4000/tcp -&gt; http://127.0.0.1:32811      RUNNING</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                metrics: 5054/tcp -&gt; http://127.0.0.1:32812</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                tcp-discovery: 9000/tcp -&gt; 127.0.0.1:32813</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                udp-discovery: 9000/udp -&gt; 127.0.0.1:32776</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">f81cd467efe3   cl-2-teku-reth                                   http: 4000/tcp -&gt; http://127.0.0.1:32814      RUNNING</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                metrics: 8008/tcp -&gt; http://127.0.0.1:32815</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                tcp-discovery: 9000/tcp -&gt; 127.0.0.1:32816</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                udp-discovery: 9000/udp -&gt; 127.0.0.1:32777</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">f21d5ca3061f   el-1-reth-lighthouse                             engine-rpc: 8551/tcp -&gt; 127.0.0.1:32803       RUNNING</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                metrics: 9001/tcp -&gt; http://127.0.0.1:32804</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                rpc: 8545/tcp -&gt; 127.0.0.1:32801</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                tcp-discovery: 30303/tcp -&gt; 127.0.0.1:32805</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                udp-discovery: 30303/udp -&gt; 127.0.0.1:32774</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                ws: 8546/tcp -&gt; 127.0.0.1:32802</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">e234b3b4a440   el-2-reth-teku                                   engine-rpc: 8551/tcp -&gt; 127.0.0.1:32808       RUNNING</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                metrics: 9001/tcp -&gt; http://127.0.0.1:32809</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                rpc: 8545/tcp -&gt; 127.0.0.1:32806</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                tcp-discovery: 30303/tcp -&gt; 127.0.0.1:32810</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                udp-discovery: 30303/udp -&gt; 127.0.0.1:32775</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                                                                ws: 8546/tcp -&gt; 127.0.0.1:32807</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">92dd5a0599dc   validator-key-generation-cl-validator-keystore   &lt;none&gt;                                        RUNNING</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">f0a7d5343346   vc-1-reth-lighthouse                             metrics: 8080/tcp -&gt; http://127.0.0.1:32817   RUNNING</span></span></code></pre>\n<p>Great! You now have a private network with 2 full Ethereum nodes on your local machine over Docker - one that is a Reth/Lighthouse pair and another that is Reth/Teku. Check out the <a href=\"https://docs.kurtosis.com/cli\">Kurtosis docs</a> to learn about the various ways you can interact with and inspect your network.</p>\n","isPage":false,"text":"\nNext, run the following command from your command line:\nkurtosis run github.com/ethpandaops/ethereum-package --args-file ~/network_params.yaml --image-download always\nKurtosis will spin up an enclave (i.e an ephemeral, isolated environment) and begin to configure and instantiate the nodes in your network. In the end, Kurtosis will print the services running in your enclave that form your private testnet alongside all the container ports and files that were generated &amp; used to start up the private testnet. Here is a sample output:\nINFO[2024-07-09T12:01:35+02:00] ========================================================\nINFO[2024-07-09T12:01:35+02:00] ||          Created enclave: silent-mountain          ||\nINFO[2024-07-09T12:01:35+02:00] ========================================================\nName:            silent-mountain\nUUID:            cb5d0a7d0e7c\nStatus:          RUNNING\nCreation Time:   Tue, 09 Jul 2024 12:00:03 CEST\nFlags:\n \n========================================= Files Artifacts =========================================\nUUID           Name\n414a075a37aa   1-lighthouse-reth-0-63-0\n34d0b9ff906b   2-teku-reth-64-127-0\ndffa1bcd1da1   el_cl_genesis_data\nfdb202429b26   final-genesis-timestamp\nda0d9d24b340   genesis-el-cl-env-file\n55c46a6555ad   genesis_validators_root\nba79dbd109dd   jwt_file\n04948fd8b1e3   keymanager_file\n538211b6b7d7   prysm-password\ned75fe7d5293   validator-ranges\n \n========================================== User Services ==========================================\nUUID           Name                                             Ports                                         Status\n0853f809c300   cl-1-lighthouse-reth                             http: 4000/tcp -&gt; http://127.0.0.1:32811      RUNNING\n                                                                metrics: 5054/tcp -&gt; http://127.0.0.1:32812\n                                                                tcp-discovery: 9000/tcp -&gt; 127.0.0.1:32813\n                                                                udp-discovery: 9000/udp -&gt; 127.0.0.1:32776\nf81cd467efe3   cl-2-teku-reth                                   http: 4000/tcp -&gt; http://127.0.0.1:32814      RUNNING\n                                                                metrics: 8008/tcp -&gt; http://127.0.0.1:32815\n                                                                tcp-discovery: 9000/tcp -&gt; 127.0.0.1:32816\n                                                                udp-discovery: 9000/udp -&gt; 127.0.0.1:32777\nf21d5ca3061f   el-1-reth-lighthouse                             engine-rpc: 8551/tcp -&gt; 127.0.0.1:32803       RUNNING\n                                                                metrics: 9001/tcp -&gt; http://127.0.0.1:32804\n                                                                rpc: 8545/tcp -&gt; 127.0.0.1:32801\n                                                                tcp-discovery: 30303/tcp -&gt; 127.0.0.1:32805\n                                                                udp-discovery: 30303/udp -&gt; 127.0.0.1:32774\n                                                                ws: 8546/tcp -&gt; 127.0.0.1:32802\ne234b3b4a440   el-2-reth-teku                                   engine-rpc: 8551/tcp -&gt; 127.0.0.1:32808       RUNNING\n                                                                metrics: 9001/tcp -&gt; http://127.0.0.1:32809\n                                                                rpc: 8545/tcp -&gt; 127.0.0.1:32806\n                                                                tcp-discovery: 30303/tcp -&gt; 127.0.0.1:32810\n                                                                udp-discovery: 30303/udp -&gt; 127.0.0.1:32775\n                                                                ws: 8546/tcp -&gt; 127.0.0.1:32807\n92dd5a0599dc   validator-key-generation-cl-validator-keystore   &lt;none&gt;                                        RUNNING\nf0a7d5343346   vc-1-reth-lighthouse                             metrics: 8080/tcp -&gt; http://127.0.0.1:32817   RUNNING\nGreat! You now have a private network with 2 full Ethereum nodes on your local machine over Docker - one that is a Reth/Lighthouse pair and another that is Reth/Teku. Check out the Kurtosis docs to learn about the various ways you can interact with and inspect your network.\n","title":"Step 2: Spin up your network","titles":["Run Reth in a private testnet using Kurtosis","Using Docker locally"]},"188":{"href":"/run/private-testnet#using-kurtosis-on-kubernetes","html":"\n<p>Kurtosis packages are portable and reproducible, meaning they will work the same way over Docker or Kubernetes, locally or on remote infrastructure. For use cases that require a larger scale, Kurtosis can be deployed on Kubernetes by following these docs <a href=\"https://docs.kurtosis.com/k8s/\">here</a>.</p>\n","isPage":false,"text":"\nKurtosis packages are portable and reproducible, meaning they will work the same way over Docker or Kubernetes, locally or on remote infrastructure. For use cases that require a larger scale, Kurtosis can be deployed on Kubernetes by following these docs here.\n","title":"Using Kurtosis on Kubernetes","titles":["Run Reth in a private testnet using Kurtosis"]},"189":{"href":"/run/private-testnet#running-the-network-with-additional-services","html":"\n<p>The <a href=\"https://github.com/ethpandaops/ethereum-package\"><code>ethereum-package</code></a> comes with many optional flags and arguments you can enable for your private network. Some include:</p>\n<ul>\n<li>A Grafana + Prometheus instance</li>\n<li>A transaction spammer called <a href=\"https://github.com/MariusVanDerWijden/tx-fuzz\"><code>tx-fuzz</code></a></li>\n<li><a href=\"https://github.com/dapplion/beacon-metrics-gazer\">A network metrics collector</a></li>\n<li>Flashbot&#x27;s <code>mev-boost</code> implementation of PBS (to test/simulate MEV workflows)</li>\n</ul>\n","isPage":false,"text":"\nThe ethereum-package comes with many optional flags and arguments you can enable for your private network. Some include:\n\nA Grafana + Prometheus instance\nA transaction spammer called tx-fuzz\nA network metrics collector\nFlashbot&#x27;s mev-boost implementation of PBS (to test/simulate MEV workflows)\n\n","title":"Running the network with additional services","titles":["Run Reth in a private testnet using Kurtosis"]},"190":{"href":"/run/private-testnet#questions","html":"\n<p>Please reach out to the <a href=\"https://discord.com/invite/6Jjp9c89z9\">Kurtosis discord</a> should you have any questions about how to use the <code>ethereum-package</code> for your private testnet needs. Thanks!</p>","isPage":false,"text":"\nPlease reach out to the Kurtosis discord should you have any questions about how to use the ethereum-package for your private testnet needs. Thanks!","title":"Questions?","titles":["Run Reth in a private testnet using Kurtosis","Running the network with additional services"]},"191":{"href":"/run/pruning#pruning--full-node","html":"</header>\n<aside data-callout=\"info\"><p>Pruning and full node are new features of Reth,\nand we will be happy to hear about your experience using them either\non <a href=\"https://github.com/paradigmxyz/reth/issues\">GitHub</a> or in the <a href=\"https://t.me/paradigm_reth\">Telegram group</a>.</p></aside>\n<p>By default, Reth runs as an archive node. Such nodes have all historical blocks and the state at each of these blocks\navailable for querying and tracing.</p>\n<p>Reth also supports pruning of historical data and running as a full node. This chapter will walk through\nthe steps for running Reth as a full node, what caveats to expect and how to configure your own pruned node.</p>\n","isPage":true,"text":"\nPruning and full node are new features of Reth,\nand we will be happy to hear about your experience using them either\non GitHub or in the Telegram group.\nBy default, Reth runs as an archive node. Such nodes have all historical blocks and the state at each of these blocks\navailable for querying and tracing.\nReth also supports pruning of historical data and running as a full node. This chapter will walk through\nthe steps for running Reth as a full node, what caveats to expect and how to configure your own pruned node.\n","title":"Pruning &amp; Full Node","titles":[]},"192":{"href":"/run/pruning#basic-concepts","html":"\n<ul>\n<li>Archive node – Reth node that has all historical data from genesis.</li>\n<li>Pruned node – Reth node that has its historical data pruned partially or fully through\na <a href=\"./config#the-prune-section\">custom configuration</a>.</li>\n<li>Full Node – Reth node that has the latest state and historical data for only the last 10064 blocks available\nfor querying in the same way as an archive node.</li>\n</ul>\n<p>The node type that was chosen when first <a href=\"./run-a-node\">running a node</a> <strong>cannot</strong> be changed after\nthe initial sync. Turning Archive into Pruned, or Pruned into Full is not supported.</p>\n","isPage":false,"text":"\n\nArchive node – Reth node that has all historical data from genesis.\nPruned node – Reth node that has its historical data pruned partially or fully through\na custom configuration.\nFull Node – Reth node that has the latest state and historical data for only the last 10064 blocks available\nfor querying in the same way as an archive node.\n\nThe node type that was chosen when first running a node cannot be changed after\nthe initial sync. Turning Archive into Pruned, or Pruned into Full is not supported.\n","title":"Basic concepts","titles":["Pruning &amp; Full Node"]},"193":{"href":"/run/pruning#modes","html":"\n","isPage":false,"text":"\n","title":"Modes","titles":["Pruning &amp; Full Node"]},"194":{"href":"/run/pruning#archive-node","html":"\n<p>Default mode, follow the steps from the previous chapter on <a href=\"./mainnet\">how to run on mainnet or official testnets</a>.</p>\n","isPage":false,"text":"\nDefault mode, follow the steps from the previous chapter on how to run on mainnet or official testnets.\n","title":"Archive Node","titles":["Pruning &amp; Full Node","Modes"]},"195":{"href":"/run/pruning#pruned-node","html":"\n<p>To run Reth as a pruned node configured through a <a href=\"./config#the-prune-section\">custom configuration</a>,\nmodify the <code>reth.toml</code> file and run Reth in the same way as archive node by following the steps from\nthe previous chapter on <a href=\"./mainnet\">how to run on mainnet or official testnets</a>.</p>\n","isPage":false,"text":"\nTo run Reth as a pruned node configured through a custom configuration,\nmodify the reth.toml file and run Reth in the same way as archive node by following the steps from\nthe previous chapter on how to run on mainnet or official testnets.\n","title":"Pruned Node","titles":["Pruning &amp; Full Node","Modes"]},"196":{"href":"/run/pruning#full-node","html":"\n<p>To run Reth as a full node, follow the steps from the previous chapter on\n<a href=\"./mainnet\">how to run on mainnet or official testnets</a>, and add a <code>--full</code> flag. For example:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --full</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --authrpc.jwtsecret</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /path/to/secret</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --authrpc.addr</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 127.0.0.1</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --authrpc.port</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 8551</span></span></code></pre>\n","isPage":false,"text":"\nTo run Reth as a full node, follow the steps from the previous chapter on\nhow to run on mainnet or official testnets, and add a --full flag. For example:\nreth node \\\n    --full \\\n    --authrpc.jwtsecret /path/to/secret \\\n    --authrpc.addr 127.0.0.1 \\\n    --authrpc.port 8551\n","title":"Full Node","titles":["Pruning &amp; Full Node","Modes"]},"197":{"href":"/run/pruning#size","html":"\n<p>All numbers are as of April 2024 at block number 19.6M for mainnet.</p>\n","isPage":false,"text":"\nAll numbers are as of April 2024 at block number 19.6M for mainnet.\n","title":"Size","titles":["Pruning &amp; Full Node"]},"198":{"href":"/run/pruning#archive-node-1","html":"\n<p>Archive node occupies at least 2.14TB.</p>\n<p>You can track the growth of Reth archive node size with our\n<a href=\"https://reth.paradigm.xyz/d/2k8BXz24x/reth?orgId=1&amp;refresh=30s&amp;viewPanel=52\">public Grafana dashboard</a>.</p>\n","isPage":false,"text":"\nArchive node occupies at least 2.14TB.\nYou can track the growth of Reth archive node size with our\npublic Grafana dashboard.\n","title":"Archive Node","titles":["Pruning &amp; Full Node","Size"]},"199":{"href":"/run/pruning#pruned-node-1","html":"\n<p>Different segments take up different amounts of disk space.\nIf pruned fully, this is the total freed space you&#x27;ll get, per segment:</p>\n<table><thead><tr><th>Segment</th><th>Size</th></tr></thead><tbody><tr><td>Sender Recovery</td><td>85GB</td></tr><tr><td>Transaction Lookup</td><td>200GB</td></tr><tr><td>Receipts</td><td>250GB</td></tr><tr><td>Account History</td><td>235GB</td></tr><tr><td>Storage History</td><td>590GB</td></tr></tbody></table>\n","isPage":false,"text":"\nDifferent segments take up different amounts of disk space.\nIf pruned fully, this is the total freed space you&#x27;ll get, per segment:\nSegmentSizeSender Recovery85GBTransaction Lookup200GBReceipts250GBAccount History235GBStorage History590GB\n","title":"Pruned Node","titles":["Pruning &amp; Full Node","Size"]},"200":{"href":"/run/pruning#full-node-1","html":"\n<p>Full node occupies at least 1.13TB.</p>\n<p>Essentially, the full node is the same as following configuration for the pruned node:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">prune</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">block_interval = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">prune</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">segments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sender_recovery = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;full&quot;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># transaction_lookup is not pruned</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">receipts = { before = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">11052984</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#6A737D;--shiki-dark:#768390\"># Beacon Deposit Contract deployment block: https://etherscan.io/tx/0xe75fb554e433e03763a1560646ee22dcb74e5274b34c5ad644e7c0f619a7e1d0</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">account_history = { distance = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10_064</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">storage_history = { distance = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10_064</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">prune</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">segments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">receipts_log_filter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Prune all receipts, leaving only those which contain logs from address `0x00000000219ab540356cbb839cbe05303d7705fa`,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># starting from the block 11052984. This leaves receipts with the logs from the Beacon Deposit Contract.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&quot;0x00000000219ab540356cbb839cbe05303d7705fa&quot; = { before = </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">11052984</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span></code></pre>\n<p>Meaning, it prunes:</p>\n<ul>\n<li>Account History and Storage History up to the last 10064 blocks</li>\n<li>All of Sender Recovery data. The caveat is that it&#x27;s pruned gradually after the initial sync\nis completed, so the disk space is reclaimed slowly.</li>\n<li>Receipts up to the last 10064 blocks, preserving all receipts with the logs from Beacon Deposit Contract</li>\n</ul>\n","isPage":false,"text":"\nFull node occupies at least 1.13TB.\nEssentially, the full node is the same as following configuration for the pruned node:\n[prune]\nblock_interval = 5\n \n[prune.segments]\nsender_recovery = &quot;full&quot;\n# transaction_lookup is not pruned\nreceipts = { before = 11052984 } # Beacon Deposit Contract deployment block: https://etherscan.io/tx/0xe75fb554e433e03763a1560646ee22dcb74e5274b34c5ad644e7c0f619a7e1d0\naccount_history = { distance = 10_064 }\nstorage_history = { distance = 10_064 }\n \n[prune.segments.receipts_log_filter]\n# Prune all receipts, leaving only those which contain logs from address `0x00000000219ab540356cbb839cbe05303d7705fa`,\n# starting from the block 11052984. This leaves receipts with the logs from the Beacon Deposit Contract.\n&quot;0x00000000219ab540356cbb839cbe05303d7705fa&quot; = { before = 11052984 }\nMeaning, it prunes:\n\nAccount History and Storage History up to the last 10064 blocks\nAll of Sender Recovery data. The caveat is that it&#x27;s pruned gradually after the initial sync\nis completed, so the disk space is reclaimed slowly.\nReceipts up to the last 10064 blocks, preserving all receipts with the logs from Beacon Deposit Contract\n\n","title":"Full Node","titles":["Pruning &amp; Full Node","Size"]},"201":{"href":"/run/pruning#rpc-support","html":"\n<p>As it was mentioned in the <a href=\"./config#the-prune-section\">pruning configuration chapter</a>, there are several segments which can be pruned\nindependently of each other:</p>\n<ul>\n<li>Sender Recovery</li>\n<li>Transaction Lookup</li>\n<li>Receipts</li>\n<li>Account History</li>\n<li>Storage History</li>\n</ul>\n<p>Pruning of each of these segments disables different RPC methods, because the historical data or lookup indexes\nbecome unavailable.</p>\n","isPage":false,"text":"\nAs it was mentioned in the pruning configuration chapter, there are several segments which can be pruned\nindependently of each other:\n\nSender Recovery\nTransaction Lookup\nReceipts\nAccount History\nStorage History\n\nPruning of each of these segments disables different RPC methods, because the historical data or lookup indexes\nbecome unavailable.\n","title":"RPC support","titles":["Pruning &amp; Full Node"]},"202":{"href":"/run/pruning#full-node-2","html":"\n<p>The following tables describe RPC methods available in the full node.</p>\n","isPage":false,"text":"\nThe following tables describe RPC methods available in the full node.\n","title":"Full Node","titles":["Pruning &amp; Full Node","RPC support"]},"203":{"href":"/run/pruning#debug-namespace","html":"\n<table><thead><tr><th>RPC</th><th>Note</th></tr></thead><tbody><tr><td><code>debug_getRawBlock</code></td><td></td></tr><tr><td><code>debug_getRawHeader</code></td><td></td></tr><tr><td><code>debug_getRawReceipts</code></td><td>Only for the last 10064 blocks and Beacon Deposit Contract</td></tr><tr><td><code>debug_getRawTransaction</code></td><td></td></tr><tr><td><code>debug_traceBlock</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>debug_traceBlockByHash</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>debug_traceBlockByNumber</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>debug_traceCall</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>debug_traceCallMany</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>debug_traceTransaction</code></td><td>Only for the last 10064 blocks</td></tr></tbody></table>\n","isPage":false,"text":"\nRPCNotedebug_getRawBlockdebug_getRawHeaderdebug_getRawReceiptsOnly for the last 10064 blocks and Beacon Deposit Contractdebug_getRawTransactiondebug_traceBlockOnly for the last 10064 blocksdebug_traceBlockByHashOnly for the last 10064 blocksdebug_traceBlockByNumberOnly for the last 10064 blocksdebug_traceCallOnly for the last 10064 blocksdebug_traceCallManyOnly for the last 10064 blocksdebug_traceTransactionOnly for the last 10064 blocks\n","title":"debug namespace","titles":["Pruning &amp; Full Node","RPC support","Full Node"]},"204":{"href":"/run/pruning#eth-namespace","html":"\n<table><thead><tr><th>RPC / Segment</th><th>Note</th></tr></thead><tbody><tr><td><code>eth_accounts</code></td><td></td></tr><tr><td><code>eth_blockNumber</code></td><td></td></tr><tr><td><code>eth_call</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>eth_chainId</code></td><td></td></tr><tr><td><code>eth_createAccessList</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>eth_estimateGas</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>eth_feeHistory</code></td><td></td></tr><tr><td><code>eth_gasPrice</code></td><td></td></tr><tr><td><code>eth_getBalance</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>eth_getBlockByHash</code></td><td></td></tr><tr><td><code>eth_getBlockByNumber</code></td><td></td></tr><tr><td><code>eth_getBlockReceipts</code></td><td>Only for the last 10064 blocks and Beacon Deposit Contract</td></tr><tr><td><code>eth_getBlockTransactionCountByHash</code></td><td></td></tr><tr><td><code>eth_getBlockTransactionCountByNumber</code></td><td></td></tr><tr><td><code>eth_getCode</code></td><td></td></tr><tr><td><code>eth_getFilterChanges</code></td><td></td></tr><tr><td><code>eth_getFilterLogs</code></td><td>Only for the last 10064 blocks and Beacon Deposit Contract</td></tr><tr><td><code>eth_getLogs</code></td><td>Only for the last 10064 blocks and Beacon Deposit Contract</td></tr><tr><td><code>eth_getStorageAt</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>eth_getTransactionByBlockHashAndIndex</code></td><td></td></tr><tr><td><code>eth_getTransactionByBlockNumberAndIndex</code></td><td></td></tr><tr><td><code>eth_getTransactionByHash</code></td><td></td></tr><tr><td><code>eth_getTransactionCount</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>eth_getTransactionReceipt</code></td><td>Only for the last 10064 blocks and Beacon Deposit Contract</td></tr><tr><td><code>eth_getUncleByBlockHashAndIndex</code></td><td></td></tr><tr><td><code>eth_getUncleByBlockNumberAndIndex</code></td><td></td></tr><tr><td><code>eth_getUncleCountByBlockHash</code></td><td></td></tr><tr><td><code>eth_getUncleCountByBlockNumber</code></td><td></td></tr><tr><td><code>eth_maxPriorityFeePerGas</code></td><td></td></tr><tr><td><code>eth_mining</code></td><td></td></tr><tr><td><code>eth_newBlockFilter</code></td><td></td></tr><tr><td><code>eth_newFilter</code></td><td></td></tr><tr><td><code>eth_newPendingTransactionFilter</code></td><td></td></tr><tr><td><code>eth_protocolVersion</code></td><td></td></tr><tr><td><code>eth_sendRawTransaction</code></td><td></td></tr><tr><td><code>eth_sendTransaction</code></td><td></td></tr><tr><td><code>eth_sign</code></td><td></td></tr><tr><td><code>eth_signTransaction</code></td><td></td></tr><tr><td><code>eth_signTypedData</code></td><td></td></tr><tr><td><code>eth_subscribe</code></td><td></td></tr><tr><td><code>eth_syncing</code></td><td></td></tr><tr><td><code>eth_uninstallFilter</code></td><td></td></tr><tr><td><code>eth_unsubscribe</code></td><td></td></tr></tbody></table>\n","isPage":false,"text":"\nRPC / SegmentNoteeth_accountseth_blockNumbereth_callOnly for the last 10064 blockseth_chainIdeth_createAccessListOnly for the last 10064 blockseth_estimateGasOnly for the last 10064 blockseth_feeHistoryeth_gasPriceeth_getBalanceOnly for the last 10064 blockseth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptsOnly for the last 10064 blocks and Beacon Deposit Contracteth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogsOnly for the last 10064 blocks and Beacon Deposit Contracteth_getLogsOnly for the last 10064 blocks and Beacon Deposit Contracteth_getStorageAtOnly for the last 10064 blockseth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCountOnly for the last 10064 blockseth_getTransactionReceiptOnly for the last 10064 blocks and Beacon Deposit Contracteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_sendTransactioneth_signeth_signTransactioneth_signTypedDataeth_subscribeeth_syncingeth_uninstallFiltereth_unsubscribe\n","title":"eth namespace","titles":["Pruning &amp; Full Node","RPC support","Full Node"]},"205":{"href":"/run/pruning#net-namespace","html":"\n<table><thead><tr><th>RPC / Segment</th></tr></thead><tbody><tr><td><code>net_listening</code></td></tr><tr><td><code>net_peerCount</code></td></tr><tr><td><code>net_version</code></td></tr></tbody></table>\n","isPage":false,"text":"\nRPC / Segmentnet_listeningnet_peerCountnet_version\n","title":"net namespace","titles":["Pruning &amp; Full Node","RPC support","Full Node"]},"206":{"href":"/run/pruning#trace-namespace","html":"\n<table><thead><tr><th>RPC / Segment</th><th>Note</th></tr></thead><tbody><tr><td><code>trace_block</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>trace_call</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>trace_callMany</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>trace_get</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>trace_rawTransaction</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>trace_replayBlockTransactions</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>trace_replayTransaction</code></td><td>Only for the last 10064 blocks</td></tr><tr><td><code>trace_transaction</code></td><td>Only for the last 10064 blocks</td></tr></tbody></table>\n","isPage":false,"text":"\nRPC / SegmentNotetrace_blockOnly for the last 10064 blockstrace_callOnly for the last 10064 blockstrace_callManyOnly for the last 10064 blockstrace_getOnly for the last 10064 blockstrace_rawTransactionOnly for the last 10064 blockstrace_replayBlockTransactionsOnly for the last 10064 blockstrace_replayTransactionOnly for the last 10064 blockstrace_transactionOnly for the last 10064 blocks\n","title":"trace namespace","titles":["Pruning &amp; Full Node","RPC support","Full Node"]},"207":{"href":"/run/pruning#txpool-namespace","html":"\n<table><thead><tr><th>RPC / Segment</th></tr></thead><tbody><tr><td><code>txpool_content</code></td></tr><tr><td><code>txpool_contentFrom</code></td></tr><tr><td><code>txpool_inspect</code></td></tr><tr><td><code>txpool_status</code></td></tr></tbody></table>\n","isPage":false,"text":"\nRPC / Segmenttxpool_contenttxpool_contentFromtxpool_inspecttxpool_status\n","title":"txpool namespace","titles":["Pruning &amp; Full Node","RPC support","Full Node"]},"208":{"href":"/run/pruning#pruned-node-2","html":"\n<p>The following tables describe the requirements for prune segments, per RPC method:</p>\n<ul>\n<li>✅ – if the segment is pruned, the RPC method still works</li>\n<li>❌ - if the segment is pruned, the RPC method doesn&#x27;t work anymore</li>\n</ul>\n","isPage":false,"text":"\nThe following tables describe the requirements for prune segments, per RPC method:\n\n✅ – if the segment is pruned, the RPC method still works\n❌ - if the segment is pruned, the RPC method doesn&#x27;t work anymore\n\n","title":"Pruned Node","titles":["Pruning &amp; Full Node","RPC support"]},"209":{"href":"/run/pruning#debug-namespace-1","html":"\n<table><thead><tr><th>RPC / Segment</th><th>Sender Recovery</th><th>Transaction Lookup</th><th>Receipts</th><th>Account History</th><th>Storage History</th></tr></thead><tbody><tr><td><code>debug_getRawBlock</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>debug_getRawHeader</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>debug_getRawReceipts</code></td><td>✅</td><td>✅</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td><code>debug_getRawTransaction</code></td><td>✅</td><td>❌</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>debug_traceBlock</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>debug_traceBlockByHash</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>debug_traceBlockByNumber</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>debug_traceCall</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>debug_traceCallMany</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>debug_traceTransaction</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr></tbody></table>\n","isPage":false,"text":"\nRPC / SegmentSender RecoveryTransaction LookupReceiptsAccount HistoryStorage Historydebug_getRawBlock✅✅✅✅✅debug_getRawHeader✅✅✅✅✅debug_getRawReceipts✅✅❌✅✅debug_getRawTransaction✅❌✅✅✅debug_traceBlock✅✅✅❌❌debug_traceBlockByHash✅✅✅❌❌debug_traceBlockByNumber✅✅✅❌❌debug_traceCall✅✅✅❌❌debug_traceCallMany✅✅✅❌❌debug_traceTransaction✅✅✅❌❌\n","title":"debug namespace","titles":["Pruning &amp; Full Node","RPC support","Pruned Node"]},"210":{"href":"/run/pruning#eth-namespace-1","html":"\n<table><thead><tr><th>RPC / Segment</th><th>Sender Recovery</th><th>Transaction Lookup</th><th>Receipts</th><th>Account History</th><th>Storage History</th></tr></thead><tbody><tr><td><code>eth_accounts</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_blockNumber</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_call</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>eth_chainId</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_createAccessList</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>eth_estimateGas</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>eth_feeHistory</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_gasPrice</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getBalance</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>✅</td></tr><tr><td><code>eth_getBlockByHash</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getBlockByNumber</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getBlockReceipts</code></td><td>✅</td><td>✅</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getBlockTransactionCountByHash</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getBlockTransactionCountByNumber</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getCode</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getFilterChanges</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getFilterLogs</code></td><td>✅</td><td>✅</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getLogs</code></td><td>✅</td><td>✅</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getStorageAt</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>❌</td></tr><tr><td><code>eth_getTransactionByBlockHashAndIndex</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getTransactionByBlockNumberAndIndex</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getTransactionByHash</code></td><td>✅</td><td>❌</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getTransactionCount</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>✅</td></tr><tr><td><code>eth_getTransactionReceipt</code></td><td>✅</td><td>❌</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getUncleByBlockHashAndIndex</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getUncleByBlockNumberAndIndex</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getUncleCountByBlockHash</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_getUncleCountByBlockNumber</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_maxPriorityFeePerGas</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_mining</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_newBlockFilter</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_newFilter</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_newPendingTransactionFilter</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_protocolVersion</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_sendRawTransaction</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_sendTransaction</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_sign</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_signTransaction</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_signTypedData</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_subscribe</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_syncing</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_uninstallFilter</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>eth_unsubscribe</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr></tbody></table>\n","isPage":false,"text":"\nRPC / SegmentSender RecoveryTransaction LookupReceiptsAccount HistoryStorage Historyeth_accounts✅✅✅✅✅eth_blockNumber✅✅✅✅✅eth_call✅✅✅❌❌eth_chainId✅✅✅✅✅eth_createAccessList✅✅✅❌❌eth_estimateGas✅✅✅❌❌eth_feeHistory✅✅✅✅✅eth_gasPrice✅✅✅✅✅eth_getBalance✅✅✅❌✅eth_getBlockByHash✅✅✅✅✅eth_getBlockByNumber✅✅✅✅✅eth_getBlockReceipts✅✅❌✅✅eth_getBlockTransactionCountByHash✅✅✅✅✅eth_getBlockTransactionCountByNumber✅✅✅✅✅eth_getCode✅✅✅✅✅eth_getFilterChanges✅✅✅✅✅eth_getFilterLogs✅✅❌✅✅eth_getLogs✅✅❌✅✅eth_getStorageAt✅✅✅✅❌eth_getTransactionByBlockHashAndIndex✅✅✅✅✅eth_getTransactionByBlockNumberAndIndex✅✅✅✅✅eth_getTransactionByHash✅❌✅✅✅eth_getTransactionCount✅✅✅❌✅eth_getTransactionReceipt✅❌❌✅✅eth_getUncleByBlockHashAndIndex✅✅✅✅✅eth_getUncleByBlockNumberAndIndex✅✅✅✅✅eth_getUncleCountByBlockHash✅✅✅✅✅eth_getUncleCountByBlockNumber✅✅✅✅✅eth_maxPriorityFeePerGas✅✅✅✅✅eth_mining✅✅✅✅✅eth_newBlockFilter✅✅✅✅✅eth_newFilter✅✅✅✅✅eth_newPendingTransactionFilter✅✅✅✅✅eth_protocolVersion✅✅✅✅✅eth_sendRawTransaction✅✅✅✅✅eth_sendTransaction✅✅✅✅✅eth_sign✅✅✅✅✅eth_signTransaction✅✅✅✅✅eth_signTypedData✅✅✅✅✅eth_subscribe✅✅✅✅✅eth_syncing✅✅✅✅✅eth_uninstallFilter✅✅✅✅✅eth_unsubscribe✅✅✅✅✅\n","title":"eth namespace","titles":["Pruning &amp; Full Node","RPC support","Pruned Node"]},"211":{"href":"/run/pruning#net-namespace-1","html":"\n<table><thead><tr><th>RPC / Segment</th><th>Sender Recovery</th><th>Transaction Lookup</th><th>Receipts</th><th>Account History</th><th>Storage History</th></tr></thead><tbody><tr><td><code>net_listening</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>net_peerCount</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>net_version</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr></tbody></table>\n","isPage":false,"text":"\nRPC / SegmentSender RecoveryTransaction LookupReceiptsAccount HistoryStorage Historynet_listening✅✅✅✅✅net_peerCount✅✅✅✅✅net_version✅✅✅✅✅\n","title":"net namespace","titles":["Pruning &amp; Full Node","RPC support","Pruned Node"]},"212":{"href":"/run/pruning#trace-namespace-1","html":"\n<table><thead><tr><th>RPC / Segment</th><th>Sender Recovery</th><th>Transaction Lookup</th><th>Receipts</th><th>Account History</th><th>Storage History</th></tr></thead><tbody><tr><td><code>trace_block</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>trace_call</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>trace_callMany</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>trace_get</code></td><td>✅</td><td>❌</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>trace_rawTransaction</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>trace_replayBlockTransactions</code></td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>trace_replayTransaction</code></td><td>✅</td><td>❌</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>trace_transaction</code></td><td>✅</td><td>❌</td><td>✅</td><td>❌</td><td>❌</td></tr></tbody></table>\n","isPage":false,"text":"\nRPC / SegmentSender RecoveryTransaction LookupReceiptsAccount HistoryStorage Historytrace_block✅✅✅❌❌trace_call✅✅✅❌❌trace_callMany✅✅✅❌❌trace_get✅❌✅❌❌trace_rawTransaction✅✅✅❌❌trace_replayBlockTransactions✅✅✅❌❌trace_replayTransaction✅❌✅❌❌trace_transaction✅❌✅❌❌\n","title":"trace namespace","titles":["Pruning &amp; Full Node","RPC support","Pruned Node"]},"213":{"href":"/run/pruning#txpool-namespace-1","html":"\n<table><thead><tr><th>RPC / Segment</th><th>Sender Recovery</th><th>Transaction Lookup</th><th>Receipts</th><th>Account History</th><th>Storage History</th></tr></thead><tbody><tr><td><code>txpool_content</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>txpool_contentFrom</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>txpool_inspect</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td><code>txpool_status</code></td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr></tbody></table>","isPage":false,"text":"\nRPC / SegmentSender RecoveryTransaction LookupReceiptsAccount HistoryStorage Historytxpool_content✅✅✅✅✅txpool_contentFrom✅✅✅✅✅txpool_inspect✅✅✅✅✅txpool_status✅✅✅✅✅","title":"txpool namespace","titles":["Pruning &amp; Full Node","RPC support","Pruned Node"]},"214":{"href":"/run/run-a-node#run-a-node","html":"</header>\n<p>Congratulations, now that you have installed Reth, it&#x27;s time to run it!</p>\n<p>In this chapter we&#x27;ll go through a few different topics you&#x27;ll encounter when running Reth, including:</p>\n<ol>\n<li><a href=\"./mainnet\">Running on mainnet or official testnets</a></li>\n<li><a href=\"./optimism\">Running on OP Stack chains</a></li>\n<li><a href=\"./observability\">Logs and Observability</a></li>\n<li><a href=\"./config\">Configuring reth.toml</a></li>\n<li><a href=\"./transactions\">Transaction types</a></li>\n<li><a href=\"./pruning\">Pruning &amp; Full Node</a></li>\n<li><a href=\"./ports\">Ports</a></li>\n<li><a href=\"./troubleshooting\">Troubleshooting</a></li>\n</ol>\n<p>In the future, we also intend to support the <a href=\"https://docs.optimism.io/get-started/superchain\">OP Stack</a>, which will allow you to run Reth as a Layer 2 client. More there soon!</p>","isPage":true,"text":"\nCongratulations, now that you have installed Reth, it&#x27;s time to run it!\nIn this chapter we&#x27;ll go through a few different topics you&#x27;ll encounter when running Reth, including:\n\nRunning on mainnet or official testnets\nRunning on OP Stack chains\nLogs and Observability\nConfiguring reth.toml\nTransaction types\nPruning &amp; Full Node\nPorts\nTroubleshooting\n\nIn the future, we also intend to support the OP Stack, which will allow you to run Reth as a Layer 2 client. More there soon!","title":"Run a Node","titles":[]},"215":{"href":"/run/sync-op-mainnet#sync-op-mainnet","html":"</header>\n<p>To sync OP mainnet, Bedrock state needs to be imported as a starting point. There are currently two ways:</p>\n<ul>\n<li>Minimal bootstrap <strong>(recommended)</strong>: only state snapshot at Bedrock block is imported without any OVM historical data.</li>\n<li>Full bootstrap <strong>(not recommended)</strong>: state, blocks and receipts are imported. *Not recommended for now: <a href=\"https://github.com/paradigmxyz/reth/pull/11099\">storage consistency issue</a> tldr: sudden crash may break the node</li>\n</ul>\n","isPage":true,"text":"\nTo sync OP mainnet, Bedrock state needs to be imported as a starting point. There are currently two ways:\n\nMinimal bootstrap (recommended): only state snapshot at Bedrock block is imported without any OVM historical data.\nFull bootstrap (not recommended): state, blocks and receipts are imported. *Not recommended for now: storage consistency issue tldr: sudden crash may break the node\n\n","title":"Sync OP Mainnet","titles":[]},"216":{"href":"/run/sync-op-mainnet#minimal-bootstrap-recommended","html":"\n<p><strong>The state snapshot at Bedrock block is required.</strong> It can be exported from <a href=\"https://github.com/testinprod-io/op-erigon/blob/pcw109550/bedrock-db-migration/bedrock-migration#export-state\">op-geth</a> (<strong>.jsonl</strong>) or downloaded directly from <a href=\"https://mega.nz/file/GdZ1xbAT#a9cBv3AqzsTGXYgX7nZc_3fl--tcBmOAIwIA5ND6kwc\">here</a>.</p>\n<p>Import the state snapshot</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> op-reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> init-state</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --without-ovm</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --chain</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> optimism</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --datadir</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> op-mainnet</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> world_trie_state.jsonl</span></span></code></pre>\n<p>Sync the node to a recent finalized block (e.g. 125200000) to catch up close to the tip, before pairing with op-node.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> op-reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --chain</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> optimism</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --datadir</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> op-mainnet</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --debug.tip</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0x098f87b75c8b861c775984f9d5dbe7b70cbbbc30fc15adb03a5044de0144f2d0</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> # block #125200000</span></span></code></pre>\n","isPage":false,"text":"\nThe state snapshot at Bedrock block is required. It can be exported from op-geth (.jsonl) or downloaded directly from here.\nImport the state snapshot\n$ op-reth init-state --without-ovm --chain optimism --datadir op-mainnet world_trie_state.jsonl\nSync the node to a recent finalized block (e.g. 125200000) to catch up close to the tip, before pairing with op-node.\n$ op-reth node --chain optimism --datadir op-mainnet --debug.tip 0x098f87b75c8b861c775984f9d5dbe7b70cbbbc30fc15adb03a5044de0144f2d0 # block #125200000\n","title":"Minimal bootstrap (recommended)","titles":["Sync OP Mainnet"]},"217":{"href":"/run/sync-op-mainnet#full-bootstrap-not-recommended","html":"\n<p><strong>Not recommended for now</strong>: <a href=\"https://github.com/paradigmxyz/reth/pull/11099\">storage consistency issue</a> tldr: sudden crash may break the node.</p>\n","isPage":false,"text":"\nNot recommended for now: storage consistency issue tldr: sudden crash may break the node.\n","title":"Full bootstrap (not recommended)","titles":["Sync OP Mainnet"]},"218":{"href":"/run/sync-op-mainnet#import-state","html":"\n<p>To sync OP mainnet, the Bedrock datadir needs to be imported to use as starting point.\nBlocks lower than the OP mainnet Bedrock fork, are built on the OVM and cannot be executed on the EVM.\nFor this reason, the chain segment from genesis until Bedrock, must be manually imported to circumvent\nexecution in reth&#x27;s sync pipeline.</p>\n<p>Importing OP mainnet Bedrock datadir requires exported data:</p>\n<ul>\n<li>Blocks [and receipts] below Bedrock</li>\n<li>State snapshot at first Bedrock block</li>\n</ul>\n","isPage":false,"text":"\nTo sync OP mainnet, the Bedrock datadir needs to be imported to use as starting point.\nBlocks lower than the OP mainnet Bedrock fork, are built on the OVM and cannot be executed on the EVM.\nFor this reason, the chain segment from genesis until Bedrock, must be manually imported to circumvent\nexecution in reth&#x27;s sync pipeline.\nImporting OP mainnet Bedrock datadir requires exported data:\n\nBlocks [and receipts] below Bedrock\nState snapshot at first Bedrock block\n\n","title":"Import state","titles":["Sync OP Mainnet","Full bootstrap (not recommended)"]},"219":{"href":"/run/sync-op-mainnet#manual-export-steps","html":"\n<p>The <code>op-geth</code> Bedrock datadir can be downloaded from <a href=\"https://datadirs.optimism.io\">https://datadirs.optimism.io</a>.</p>\n<p>To export the OVM chain from <code>op-geth</code>, clone the <code>testinprod-io/op-geth</code> repo and checkout\n<a href=\"https://github.com/testinprod-io/op-geth/pull/1\">testinprod-io/op-geth#1</a>. Commands to export blocks, receipts and state dump can be\nfound in <code>op-geth/migrate.sh</code>.</p>\n","isPage":false,"text":"\nThe op-geth Bedrock datadir can be downloaded from https://datadirs.optimism.io.\nTo export the OVM chain from op-geth, clone the testinprod-io/op-geth repo and checkout\ntestinprod-io/op-geth#1. Commands to export blocks, receipts and state dump can be\nfound in op-geth/migrate.sh.\n","title":"Manual Export Steps","titles":["Sync OP Mainnet","Full bootstrap (not recommended)"]},"220":{"href":"/run/sync-op-mainnet#manual-import-steps","html":"\n","isPage":false,"text":"\n","title":"Manual Import Steps","titles":["Sync OP Mainnet","Full bootstrap (not recommended)"]},"221":{"href":"/run/sync-op-mainnet#1-import-blocks","html":"\n<p>Imports a <code>.rlp</code> file of blocks.</p>\n<p>Import of &gt;100 million OVM blocks, from genesis to Bedrock, completes in 45 minutes.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> op-reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> import-op</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --chain</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> optimism</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">exported-block</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span></code></pre>\n","isPage":false,"text":"\nImports a .rlp file of blocks.\nImport of &gt;100 million OVM blocks, from genesis to Bedrock, completes in 45 minutes.\n$ op-reth import-op --chain optimism &lt;exported-blocks&gt;\n","title":"1. Import Blocks","titles":["Sync OP Mainnet","Full bootstrap (not recommended)","Manual Import Steps"]},"222":{"href":"/run/sync-op-mainnet#2-import-receipts","html":"\n<p>This step is optional. To run a full node, skip this step. If however receipts are to be imported, the\ncorresponding transactions must already be imported (see <a href=\"#1-import-blocks\">step 1</a>).</p>\n<p>Imports a <code>.rlp</code> file of receipts, that has been exported with command specified in\n<a href=\"https://github.com/testinprod-io/op-geth/pull/1\">testinprod-io/op-geth#1</a> (command for exporting receipts uses custom RLP-encoding).</p>\n<p>Import of &gt;100 million OVM receipts, from genesis to Bedrock, completes in 30 minutes.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> op-reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> import-receipts-op</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --chain</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> optimism</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">exported-receipt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span></code></pre>\n","isPage":false,"text":"\nThis step is optional. To run a full node, skip this step. If however receipts are to be imported, the\ncorresponding transactions must already be imported (see step 1).\nImports a .rlp file of receipts, that has been exported with command specified in\ntestinprod-io/op-geth#1 (command for exporting receipts uses custom RLP-encoding).\nImport of &gt;100 million OVM receipts, from genesis to Bedrock, completes in 30 minutes.\n$ op-reth import-receipts-op --chain optimism &lt;exported-receipts&gt;\n","title":"2. Import Receipts","titles":["Sync OP Mainnet","Full bootstrap (not recommended)","Manual Import Steps"]},"223":{"href":"/run/sync-op-mainnet#3-import-state","html":"\n<p>Imports a <code>.jsonl</code> state dump. The block at which the state dump is made, must be the latest block in\nreth&#x27;s database. This should be block 105 235 063, the first Bedrock block (see <a href=\"#1-import-blocks\">step 1</a>).</p>\n<p>Import of &gt;4 million OP mainnet accounts at Bedrock, completes in 10 minutes.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> op-reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> init-state</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --chain</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> optimism</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">state-dum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">p</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span></code></pre>\n","isPage":false,"text":"\nImports a .jsonl state dump. The block at which the state dump is made, must be the latest block in\nreth&#x27;s database. This should be block 105 235 063, the first Bedrock block (see step 1).\nImport of &gt;4 million OP mainnet accounts at Bedrock, completes in 10 minutes.\n$ op-reth init-state --chain optimism &lt;state-dump&gt;\n","title":"3. Import State","titles":["Sync OP Mainnet","Full bootstrap (not recommended)","Manual Import Steps"]},"224":{"href":"/run/sync-op-mainnet#sync-from-bedrock-to-tip","html":"\n<p>Running the node with <code>--debug.tip &lt;block-hash&gt;</code>syncs the node without help from CL until a fixed tip. The\nblock hash can be taken from the latest block on <a href=\"https://optimistic.etherscan.io\">https://optimistic.etherscan.io</a>.</p>\n<p>Use <code>op-node</code> to track the tip. Start <code>op-node</code> with <code>--syncmode=execution-layer</code> and <code>--l2.enginekind=reth</code>. If <code>op-node</code>&#x27;s RPC\nconnection to L1 is over localhost, <code>--l1.trustrpc</code> can be set to improve performance.</p>","isPage":false,"text":"\nRunning the node with --debug.tip &lt;block-hash&gt;syncs the node without help from CL until a fixed tip. The\nblock hash can be taken from the latest block on https://optimistic.etherscan.io.\nUse op-node to track the tip. Start op-node with --syncmode=execution-layer and --l2.enginekind=reth. If op-node&#x27;s RPC\nconnection to L1 is over localhost, --l1.trustrpc can be set to improve performance.","title":"Sync from Bedrock to tip","titles":["Sync OP Mainnet"]},"225":{"href":"/run/transactions#transaction-types","html":"</header>\n<p>Over time, the Ethereum network has undergone various upgrades and improvements to enhance transaction efficiency, security, and user experience. Four significant transaction types that have evolved are:</p>\n<ul>\n<li>Legacy Transactions,</li>\n<li>EIP-2930 Transactions,</li>\n<li>EIP-1559 Transactions,</li>\n<li>EIP-4844 Transactions</li>\n</ul>\n<p>Each of these transaction types brings unique features and improvements to the Ethereum network.</p>\n","isPage":true,"text":"\nOver time, the Ethereum network has undergone various upgrades and improvements to enhance transaction efficiency, security, and user experience. Four significant transaction types that have evolved are:\n\nLegacy Transactions,\nEIP-2930 Transactions,\nEIP-1559 Transactions,\nEIP-4844 Transactions\n\nEach of these transaction types brings unique features and improvements to the Ethereum network.\n","title":"Transaction types","titles":[]},"226":{"href":"/run/transactions#legacy-transactions","html":"\n<p>Legacy Transactions (type <code>0x0</code>), the traditional Ethereum transactions in use since the network&#x27;s inception, include the following parameters:</p>\n<ul>\n<li><code>nonce</code>,</li>\n<li><code>gasPrice</code>,</li>\n<li><code>gasLimit</code>,</li>\n<li><code>to</code>,</li>\n<li><code>value</code>,</li>\n<li><code>data</code>,</li>\n<li><code>v</code>,</li>\n<li><code>r</code>,</li>\n<li><code>s</code>.</li>\n</ul>\n<p>These transactions do not utilize access lists, which specify the addresses and storage keys to be accessed, nor do they incorporate EIP-1559 fee market changes.</p>\n","isPage":false,"text":"\nLegacy Transactions (type 0x0), the traditional Ethereum transactions in use since the network&#x27;s inception, include the following parameters:\n\nnonce,\ngasPrice,\ngasLimit,\nto,\nvalue,\ndata,\nv,\nr,\ns.\n\nThese transactions do not utilize access lists, which specify the addresses and storage keys to be accessed, nor do they incorporate EIP-1559 fee market changes.\n","title":"Legacy Transactions","titles":["Transaction types"]},"227":{"href":"/run/transactions#eip-2930-transactions","html":"\n<p>Introduced in <a href=\"https://eips.ethereum.org/EIPS/eip-2930\">EIP-2930</a>, transactions with type <code>0x1</code> incorporate an <code>accessList</code> parameter alongside legacy parameters. This <code>accessList</code> specifies an array of addresses and storage keys that the transaction plans to access, enabling gas savings on cross-contract calls by pre-declaring the accessed contract and storage slots. They do not include EIP-1559 fee market changes.</p>\n","isPage":false,"text":"\nIntroduced in EIP-2930, transactions with type 0x1 incorporate an accessList parameter alongside legacy parameters. This accessList specifies an array of addresses and storage keys that the transaction plans to access, enabling gas savings on cross-contract calls by pre-declaring the accessed contract and storage slots. They do not include EIP-1559 fee market changes.\n","title":"EIP-2930 Transactions","titles":["Transaction types"]},"228":{"href":"/run/transactions#eip-1559-transactions","html":"\n<p><a href=\"https://eips.ethereum.org/EIPS/eip-1559\">EIP-1559</a> transactions (type <code>0x2</code>) were introduced in Ethereum&#x27;s London fork to address network congestion and transaction fee overpricing caused by the historical fee market. Unlike traditional transactions, EIP-1559 transactions don&#x27;t specify a gas price (<code>gasPrice</code>). Instead, they use an in-protocol, dynamically changing base fee per gas, adjusted at each block to manage network congestion.</p>\n<p>Alongside the <code>accessList</code> parameter and legacy parameters (except <code>gasPrice</code>), EIP-1559 transactions include:</p>\n<ul>\n<li><code>maxPriorityFeePerGas</code>, specifying the maximum fee above the base fee the sender is willing to pay,</li>\n<li><code>maxFeePerGas</code>, setting the maximum total fee the sender is willing to pay.</li>\n</ul>\n<p>The base fee is burned, while the priority fee is paid to the miner who includes the transaction, incentivizing miners to include transactions with higher priority fees per gas.</p>\n","isPage":false,"text":"\nEIP-1559 transactions (type 0x2) were introduced in Ethereum&#x27;s London fork to address network congestion and transaction fee overpricing caused by the historical fee market. Unlike traditional transactions, EIP-1559 transactions don&#x27;t specify a gas price (gasPrice). Instead, they use an in-protocol, dynamically changing base fee per gas, adjusted at each block to manage network congestion.\nAlongside the accessList parameter and legacy parameters (except gasPrice), EIP-1559 transactions include:\n\nmaxPriorityFeePerGas, specifying the maximum fee above the base fee the sender is willing to pay,\nmaxFeePerGas, setting the maximum total fee the sender is willing to pay.\n\nThe base fee is burned, while the priority fee is paid to the miner who includes the transaction, incentivizing miners to include transactions with higher priority fees per gas.\n","title":"EIP-1559 Transactions","titles":["Transaction types"]},"229":{"href":"/run/transactions#eip-4844-transactions","html":"\n<p><a href=\"https://eips.ethereum.org/EIPS/eip-4844\">EIP-4844</a> transactions (type <code>0x3</code>) was introduced in Ethereum&#x27;s Dencun fork. This provides a temporary but significant scaling relief for rollups by allowing them to initially scale to 0.375 MB per slot, with a separate fee market allowing fees to be very low while usage of this system is limited.</p>\n<p>Alongside the legacy parameters &amp; parameters from EIP-1559, the EIP-4844 transactions include:</p>\n<ul>\n<li><code>max_fee_per_blob_gas</code>, The maximum total fee per gas the sender is willing to pay for blob gas in wei</li>\n<li><code>blob_versioned_hashes</code>, List of versioned blob hashes associated with the transaction&#x27;s EIP-4844 data blobs.</li>\n</ul>\n<p>The actual blob fee is deducted from the sender balance before transaction execution and burned, and is not refunded in case of transaction failure.</p>","isPage":false,"text":"\nEIP-4844 transactions (type 0x3) was introduced in Ethereum&#x27;s Dencun fork. This provides a temporary but significant scaling relief for rollups by allowing them to initially scale to 0.375 MB per slot, with a separate fee market allowing fees to be very low while usage of this system is limited.\nAlongside the legacy parameters &amp; parameters from EIP-1559, the EIP-4844 transactions include:\n\nmax_fee_per_blob_gas, The maximum total fee per gas the sender is willing to pay for blob gas in wei\nblob_versioned_hashes, List of versioned blob hashes associated with the transaction&#x27;s EIP-4844 data blobs.\n\nThe actual blob fee is deducted from the sender balance before transaction execution and burned, and is not refunded in case of transaction failure.","title":"EIP-4844 Transactions","titles":["Transaction types"]},"230":{"href":"/run/troubleshooting#troubleshooting","html":"</header>\n<p>This page tries to answer how to deal with the most popular issues.</p>\n<ul>\n<li><a href=\"#troubleshooting\">Troubleshooting</a>\n<ul>\n<li><a href=\"#database\">Database</a>\n<ul>\n<li><a href=\"#docker\">Docker</a></li>\n<li><a href=\"#error-code-13\">Error code 13</a></li>\n<li><a href=\"#slow-database-inserts-and-updates\">Slow database inserts and updates</a>\n<ul>\n<li><a href=\"#compact-the-database\">Compact the database</a></li>\n<li><a href=\"#re-sync-from-scratch\">Re-sync from scratch</a></li>\n</ul>\n</li>\n<li><a href=\"#database-write-error\">Database write error</a></li>\n<li><a href=\"#concurrent-database-access-error-using-containersdocker\">Concurrent database access error (using containers/Docker)</a></li>\n</ul>\n</li>\n<li><a href=\"#hardware-performance-testing\">Hardware Performance Testing</a>\n<ul>\n<li><a href=\"#disk-speed-testing-with-iozone\">Disk Speed Testing with IOzone</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","isPage":true,"text":"\nThis page tries to answer how to deal with the most popular issues.\n\nTroubleshooting\n\nDatabase\n\nDocker\nError code 13\nSlow database inserts and updates\n\nCompact the database\nRe-sync from scratch\n\n\nDatabase write error\nConcurrent database access error (using containers/Docker)\n\n\nHardware Performance Testing\n\nDisk Speed Testing with IOzone\n\n\n\n\n\n","title":"Troubleshooting","titles":[]},"231":{"href":"/run/troubleshooting#database","html":"\n","isPage":false,"text":"\n","title":"Database","titles":["Troubleshooting"]},"232":{"href":"/run/troubleshooting#docker","html":"\n<p>Externally accessing a <code>datadir</code> inside a named docker volume will usually come with folder/file ownership/permissions issues.</p>\n<p><strong>It is not recommended</strong> to use the path to the named volume as it will trigger an error code 13. <code>RETH_DB_PATH: /var/lib/docker/volumes/named_volume/_data/eth/db cargo r --examples db-access --path </code> is <strong>DISCOURAGED</strong> and a mounted volume with the right permissions should be used instead.</p>\n","isPage":false,"text":"\nExternally accessing a datadir inside a named docker volume will usually come with folder/file ownership/permissions issues.\nIt is not recommended to use the path to the named volume as it will trigger an error code 13. RETH_DB_PATH: /var/lib/docker/volumes/named_volume/_data/eth/db cargo r --examples db-access --path  is DISCOURAGED and a mounted volume with the right permissions should be used instead.\n","title":"Docker","titles":["Troubleshooting","Database"]},"233":{"href":"/run/troubleshooting#error-code-13","html":"\n<p><code>the environment opened in read-only code: 13</code></p>\n<p>Externally accessing a database in a read-only folder is not supported, <strong>UNLESS</strong> there&#x27;s no <code>mdbx.lck</code> present, and it&#x27;s called with <code>exclusive</code> on calling <code>open_db_read_only</code>. Meaning that there&#x27;s no node syncing concurrently.</p>\n<p>If the error persists, ensure that you have the right <code>rx</code> permissions on the <code>datadir</code> <strong>and its parent</strong> folders. Eg. the following command should succeed:</p>\n<pre><code class=\"language-bash,ignore\">stat /full/path/datadir\n</code></pre>\n","isPage":false,"text":"\nthe environment opened in read-only code: 13\nExternally accessing a database in a read-only folder is not supported, UNLESS there&#x27;s no mdbx.lck present, and it&#x27;s called with exclusive on calling open_db_read_only. Meaning that there&#x27;s no node syncing concurrently.\nIf the error persists, ensure that you have the right rx permissions on the datadir and its parent folders. Eg. the following command should succeed:\nstat /full/path/datadir\n\n","title":"Error code 13","titles":["Troubleshooting","Database"]},"234":{"href":"/run/troubleshooting#slow-database-inserts-and-updates","html":"\n<p>If you&#x27;re:</p>\n<ol>\n<li>Running behind the tip</li>\n<li>Have slow canonical commit time according to the <code>Canonical Commit Latency Time</code> chart on <a href=\"./observability#prometheus--grafana\">Grafana dashboard</a> (more than 2-3 seconds)</li>\n<li>Seeing warnings in your logs such as\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2023-11-08T15:17:24.789731Z  WARN providers::db: Transaction insertion took too long block_number=18528075 tx_num=2150227643 hash=0xb7de1d6620efbdd3aa8547c47a0ff09a7fd3e48ba3fd2c53ce94c6683ed66e7c elapsed=6.793759034s</span></span></code></pre>\n</li>\n</ol>\n<p>then most likely you&#x27;re experiencing issues with the <a href=\"https://github.com/paradigmxyz/reth/issues/5228\">database freelist</a>.\nTo confirm it, check if the values on the <code>Freelist</code> chart on <a href=\"./observability#prometheus--grafana\">Grafana dashboard</a>\nis greater than 10M.</p>\n<p>Currently, there are two main ways to fix this issue.</p>\n","isPage":false,"text":"\nIf you&#x27;re:\n\nRunning behind the tip\nHave slow canonical commit time according to the Canonical Commit Latency Time chart on Grafana dashboard (more than 2-3 seconds)\nSeeing warnings in your logs such as\n2023-11-08T15:17:24.789731Z  WARN providers::db: Transaction insertion took too long block_number=18528075 tx_num=2150227643 hash=0xb7de1d6620efbdd3aa8547c47a0ff09a7fd3e48ba3fd2c53ce94c6683ed66e7c elapsed=6.793759034s\n\n\nthen most likely you&#x27;re experiencing issues with the database freelist.\nTo confirm it, check if the values on the Freelist chart on Grafana dashboard\nis greater than 10M.\nCurrently, there are two main ways to fix this issue.\n","title":"Slow database inserts and updates","titles":["Troubleshooting","Database"]},"235":{"href":"/run/troubleshooting#compact-the-database","html":"\n<p>It will take around 5-6 hours and require <strong>additional</strong> disk space located on the same or different drive\nequal to the <a href=\"/installation/overview#hardware-requirements\">freshly synced node</a>.</p>\n<ol>\n<li>Clone Reth\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> clone</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/paradigmxyz/reth</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span></span></code></pre>\n</li>\n<li>Build database debug tools\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">make</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db-tools</span></span></code></pre>\n</li>\n<li>Run compaction (this step will take 5-6 hours, depending on the I/O speed)\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">./db-tools/mdbx_copy</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -c</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> $(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> path</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">reth_compact.dat</span></span></code></pre>\n</li>\n<li>Stop Reth</li>\n<li>Backup original database\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> $(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> path</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">/mdbx.dat</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth_old.dat</span></span></code></pre>\n</li>\n<li>Move compacted database in place of the original database\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mv</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth_compact.dat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> $(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> path</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">/mdbx.dat</span></span></code></pre>\n</li>\n<li>Start Reth</li>\n<li>Confirm that the values on the <code>Freelist</code> chart are near zero and the values on the <code>Canonical Commit Latency Time</code> chart\nis less than 1 second.</li>\n<li>Delete original database\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">rm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth_old.dat</span></span></code></pre>\n</li>\n</ol>\n","isPage":false,"text":"\nIt will take around 5-6 hours and require additional disk space located on the same or different drive\nequal to the freshly synced node.\n\nClone Reth\ngit clone https://github.com/paradigmxyz/reth\ncd reth\n\nBuild database debug tools\nmake db-tools\n\nRun compaction (this step will take 5-6 hours, depending on the I/O speed)\n./db-tools/mdbx_copy -c $(reth db path) reth_compact.dat\n\nStop Reth\nBackup original database\nmv $(reth db path)/mdbx.dat reth_old.dat\n\nMove compacted database in place of the original database\nmv reth_compact.dat $(reth db path)/mdbx.dat\n\nStart Reth\nConfirm that the values on the Freelist chart are near zero and the values on the Canonical Commit Latency Time chart\nis less than 1 second.\nDelete original database\nrm reth_old.dat\n\n\n","title":"Compact the database","titles":["Troubleshooting","Database","Slow database inserts and updates"]},"236":{"href":"/run/troubleshooting#re-sync-from-scratch","html":"\n<p>It will take the same time as initial sync.</p>\n<ol>\n<li>Stop Reth</li>\n<li>Drop the database using <a href=\"#TODO\"><code>reth db drop</code></a></li>\n<li>Start reth</li>\n</ol>\n","isPage":false,"text":"\nIt will take the same time as initial sync.\n\nStop Reth\nDrop the database using reth db drop\nStart reth\n\n","title":"Re-sync from scratch","titles":["Troubleshooting","Database","Slow database inserts and updates"]},"237":{"href":"/run/troubleshooting#database-write-error","html":"\n<p>If you encounter an irrecoverable database-related errors, in most of the cases it&#x27;s related to the RAM/NVMe/SSD you use. For example:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Error: A stage encountered an irrecoverable error.</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Caused by:</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">   0: An internal database error occurred: Database write error code: -30796</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">   1: Database write error code: -30796</span></span></code></pre>\n<p>or</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Error: A stage encountered an irrecoverable error.</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Caused by:</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">   0: An internal database error occurred: Database read error code: -30797</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">   1: Database read error code: -30797</span></span></code></pre>\n<ol>\n<li>Check your memory health: use <a href=\"https://www.memtest.org/\">memtest86+</a> or <a href=\"https://linux.die.net/man/8/memtester\">memtester</a>. If your memory is faulty, it&#x27;s better to resync the node on different hardware.</li>\n<li>Check database integrity:\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> clone</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/paradigmxyz/reth</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">make</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db-tools</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">./db-tools/mdbx_chk</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> $(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> path</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">/mdbx.dat</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tee</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> mdbx_chk.log</span></span></code></pre>\nIf <code>mdbx_chk</code> has detected any errors, please <a href=\"https://github.com/paradigmxyz/reth/issues\">open an issue</a> and post the output from the <code>mdbx_chk.log</code> file.</li>\n</ol>\n","isPage":false,"text":"\nIf you encounter an irrecoverable database-related errors, in most of the cases it&#x27;s related to the RAM/NVMe/SSD you use. For example:\nError: A stage encountered an irrecoverable error.\n \nCaused by:\n   0: An internal database error occurred: Database write error code: -30796\n   1: Database write error code: -30796\nor\nError: A stage encountered an irrecoverable error.\n \nCaused by:\n   0: An internal database error occurred: Database read error code: -30797\n   1: Database read error code: -30797\n\nCheck your memory health: use memtest86+ or memtester. If your memory is faulty, it&#x27;s better to resync the node on different hardware.\nCheck database integrity:\ngit clone https://github.com/paradigmxyz/reth\ncd reth\nmake db-tools\n./db-tools/mdbx_chk $(reth db path)/mdbx.dat | tee mdbx_chk.log\nIf mdbx_chk has detected any errors, please open an issue and post the output from the mdbx_chk.log file.\n\n","title":"Database write error","titles":["Troubleshooting","Database"]},"238":{"href":"/run/troubleshooting#concurrent-database-access-error-using-containersdocker","html":"\n<p>If you encounter an error while accessing the database from multiple processes and you are using multiple containers or a mix of host and container(s), it is possible the error is related to <code>PID</code> namespaces. You might see one of the following error messages.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">mdbx:0: panic: Assertion `osal_rdt_unlock() failed: err 1&#x27; failed.</span></span></code></pre>\n<p>or</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">pthread_mutex_lock.c:438: __pthread_mutex_lock_full: Assertion `e != ESRCH || !robust&#x27; failed</span></span></code></pre>\n<p>If you are using Docker, a possible solution is to run all database-accessing containers with <code>--pid=host</code> flag.</p>\n<p>For more information, check out the <code>Containers</code> section in the <a href=\"https://github.com/erthink/libmdbx#containers\">libmdbx README</a>.</p>\n","isPage":false,"text":"\nIf you encounter an error while accessing the database from multiple processes and you are using multiple containers or a mix of host and container(s), it is possible the error is related to PID namespaces. You might see one of the following error messages.\nmdbx:0: panic: Assertion `osal_rdt_unlock() failed: err 1&#x27; failed.\nor\npthread_mutex_lock.c:438: __pthread_mutex_lock_full: Assertion `e != ESRCH || !robust&#x27; failed\nIf you are using Docker, a possible solution is to run all database-accessing containers with --pid=host flag.\nFor more information, check out the Containers section in the libmdbx README.\n","title":"Concurrent database access error (using containers/Docker)","titles":["Troubleshooting","Database"]},"239":{"href":"/run/troubleshooting#hardware-performance-testing","html":"\n<p>If you&#x27;re experiencing degraded performance, it may be related to hardware issues. Below are some tools and tests you can run to evaluate your hardware performance.</p>\n<p>If your hardware performance is significantly lower than these reference numbers, it may explain degraded node performance. Consider upgrading your hardware or investigating potential issues with your current setup.</p>\n","isPage":false,"text":"\nIf you&#x27;re experiencing degraded performance, it may be related to hardware issues. Below are some tools and tests you can run to evaluate your hardware performance.\nIf your hardware performance is significantly lower than these reference numbers, it may explain degraded node performance. Consider upgrading your hardware or investigating potential issues with your current setup.\n","title":"Hardware Performance Testing","titles":["Troubleshooting"]},"240":{"href":"/run/troubleshooting#disk-speed-testing-with-iozone","html":"\n<ol>\n<li>\n<p>Test disk speed:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">iozone</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -e</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -t1</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -i0</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -i2</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -r1k</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -s1g</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /tmp</span></span></code></pre>\n<p>Reference numbers (on Latitude c3.large.x86):</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Children see throughput for  1 initial writers  =  907733.81 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Parent sees throughput for  1 initial writers   =  907239.68 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Children see throughput for  1 rewriters        = 1765222.62 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Parent sees throughput for  1 rewriters         = 1763433.35 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Children see throughput for 1 random readers    = 1557497.38 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Parent sees throughput for 1 random readers     = 1554846.58 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Children see throughput for 1 random writers    =  984428.69 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Parent sees throughput for 1 random writers     =  983476.67 kB/sec</span></span></code></pre>\n</li>\n<li>\n<p>Test disk speed with memory-mapped files:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">iozone</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -B</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -G</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -e</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -t1</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -i0</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -i2</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -r1k</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -s1g</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /tmp</span></span></code></pre>\n<p>Reference numbers (on Latitude c3.large.x86):</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Children see throughput for  1 initial writers  =   56471.06 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Parent sees throughput for  1 initial writers   =   56365.14 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Children see throughput for  1 rewriters        =  241650.69 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Parent sees throughput for  1 rewriters         =  239067.96 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Children see throughput for 1 random readers    = 6833161.00 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Parent sees throughput for 1 random readers     = 5597659.65 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Children see throughput for 1 random writers    =  220248.53 kB/sec</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Parent sees throughput for 1 random writers     =  219112.26 kB/sec</span></span></code></pre>\n</li>\n</ol>\n","isPage":false,"text":"\n\n\nTest disk speed:\niozone -e -t1 -i0 -i2 -r1k -s1g /tmp\nReference numbers (on Latitude c3.large.x86):\nChildren see throughput for  1 initial writers  =  907733.81 kB/sec\nParent sees throughput for  1 initial writers   =  907239.68 kB/sec\nChildren see throughput for  1 rewriters        = 1765222.62 kB/sec\nParent sees throughput for  1 rewriters         = 1763433.35 kB/sec\nChildren see throughput for 1 random readers    = 1557497.38 kB/sec\nParent sees throughput for 1 random readers     = 1554846.58 kB/sec\nChildren see throughput for 1 random writers    =  984428.69 kB/sec\nParent sees throughput for 1 random writers     =  983476.67 kB/sec\n\n\nTest disk speed with memory-mapped files:\niozone -B -G -e -t1 -i0 -i2 -r1k -s1g /tmp\nReference numbers (on Latitude c3.large.x86):\nChildren see throughput for  1 initial writers  =   56471.06 kB/sec\nParent sees throughput for  1 initial writers   =   56365.14 kB/sec\nChildren see throughput for  1 rewriters        =  241650.69 kB/sec\nParent sees throughput for  1 rewriters         =  239067.96 kB/sec\nChildren see throughput for 1 random readers    = 6833161.00 kB/sec\nParent sees throughput for 1 random readers     = 5597659.65 kB/sec\nChildren see throughput for 1 random writers    =  220248.53 kB/sec\nParent sees throughput for 1 random writers     =  219112.26 kB/sec\n\n\n","title":"Disk Speed Testing with","titles":["Troubleshooting","Hardware Performance Testing"]},"241":{"href":"/run/troubleshooting#ram-speed-and-health-testing","html":"\n<ol>\n<li>\n<p>Check RAM speed with <a href=\"https://linux.die.net/man/1/lshw\">lshw</a>:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> lshw</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -short</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -C</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> memory</span></span></code></pre>\n<p>Look for the frequency in the output. Reference output:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">H/W path              Device          Class          Description</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">================================================================</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">/0/24/0                               memory         64GiB DIMM DDR4 Synchronous Registered (Buffered) 3200 MHz (0.3 ns)</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">/0/24/1                               memory         64GiB DIMM DDR4 Synchronous Registered (Buffered) 3200 MHz (0.3 ns)</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">...</span></span></code></pre>\n</li>\n<li>\n<p>Test RAM health with <a href=\"https://linux.die.net/man/8/memtester\">memtester</a>:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> memtester</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 10G</span></span></code></pre>\n<p>This will take a while. You can test with a smaller amount first:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> memtester</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 1G</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span></span></code></pre>\n<p>All checks should report &quot;ok&quot;.</p>\n</li>\n</ol>","isPage":false,"text":"\n\n\nCheck RAM speed with lshw:\nsudo lshw -short -C memory\nLook for the frequency in the output. Reference output:\nH/W path              Device          Class          Description\n================================================================\n/0/24/0                               memory         64GiB DIMM DDR4 Synchronous Registered (Buffered) 3200 MHz (0.3 ns)\n/0/24/1                               memory         64GiB DIMM DDR4 Synchronous Registered (Buffered) 3200 MHz (0.3 ns)\n...\n\n\nTest RAM health with memtester:\nsudo memtester 10G\nThis will take a while. You can test with a smaller amount first:\nsudo memtester 1G 1\nAll checks should report &quot;ok&quot;.\n\n","title":"RAM Speed and Health Testing","titles":["Troubleshooting","Hardware Performance Testing"]},"242":{"href":"/cli/reth/config#reth-config","html":"</header>\n<p>Write config to stdout</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> config</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth config [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --default</span></span>\n<span class=\"line\"><span>          Show the default config</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nWrite config to stdout\n$ reth config --help\nUsage: reth config [OPTIONS]\n\nOptions:\n      --config &lt;FILE&gt;\n          The path to the configuration file to use.\n\n      --default\n          Show the default config\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth config","titles":[]},"243":{"href":"/cli/reth/db#reth-db","html":"</header>\n<p>Database debugging utilities</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db [OPTIONS] &lt;COMMAND&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Commands:</span></span>\n<span class=\"line\"><span>  stats     Lists all the tables, their entry count and their size</span></span>\n<span class=\"line\"><span>  list      Lists the contents of a table</span></span>\n<span class=\"line\"><span>  checksum  Calculates the content checksum of a table</span></span>\n<span class=\"line\"><span>  diff      Create a diff between two database tables or two entire databases</span></span>\n<span class=\"line\"><span>  get       Gets the content of a table for the given key</span></span>\n<span class=\"line\"><span>  drop      Deletes all database entries</span></span>\n<span class=\"line\"><span>  clear     Deletes all table entries</span></span>\n<span class=\"line\"><span>  version   Lists current and local database versions</span></span>\n<span class=\"line\"><span>  path      Returns the full database path</span></span>\n<span class=\"line\"><span>  help      Print this message or the help of the given subcommand(s)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDatabase debugging utilities\n$ reth db --help\nUsage: reth db [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  stats     Lists all the tables, their entry count and their size\n  list      Lists the contents of a table\n  checksum  Calculates the content checksum of a table\n  diff      Create a diff between two database tables or two entire databases\n  get       Gets the content of a table for the given key\n  drop      Deletes all database entries\n  clear     Deletes all table entries\n  version   Lists current and local database versions\n  path      Returns the full database path\n  help      Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db","titles":[]},"244":{"href":"/cli/reth/debug#reth-debug","html":"</header>\n<p>Various debug routines</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> debug</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth debug [OPTIONS] &lt;COMMAND&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Commands:</span></span>\n<span class=\"line\"><span>  execution         Debug the roundtrip execution of blocks as well as the generated data</span></span>\n<span class=\"line\"><span>  merkle            Debug the clean &amp; incremental state root calculations</span></span>\n<span class=\"line\"><span>  in-memory-merkle  Debug in-memory state root calculation</span></span>\n<span class=\"line\"><span>  build-block       Debug block building</span></span>\n<span class=\"line\"><span>  help              Print this message or the help of the given subcommand(s)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nVarious debug routines\n$ reth debug --help\nUsage: reth debug [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  execution         Debug the roundtrip execution of blocks as well as the generated data\n  merkle            Debug the clean &amp; incremental state root calculations\n  in-memory-merkle  Debug in-memory state root calculation\n  build-block       Debug block building\n  help              Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth debug","titles":[]},"245":{"href":"/cli/reth/download#reth-download","html":"</header>\n<p>Download public node snapshots</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> download</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth download [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -u, --url &lt;URL&gt;</span></span>\n<span class=\"line\"><span>          Specify a snapshot URL or let the command propose a default one.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Available snapshot sources:</span></span>\n<span class=\"line\"><span>          - https://downloads.merkle.io (default, mainnet archive)</span></span>\n<span class=\"line\"><span>          - https://publicnode.com/snapshots (full nodes &amp; testnets)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          If no URL is provided, the latest mainnet archive snapshot</span></span>\n<span class=\"line\"><span>          will be proposed for download from merkle.io</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDownload public node snapshots\n$ reth download --help\nUsage: reth download [OPTIONS]\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\n  -u, --url &lt;URL&gt;\n          Specify a snapshot URL or let the command propose a default one.\n\n          Available snapshot sources:\n          - https://downloads.merkle.io (default, mainnet archive)\n          - https://publicnode.com/snapshots (full nodes &amp; testnets)\n\n          If no URL is provided, the latest mainnet archive snapshot\n          will be proposed for download from merkle.io\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth download","titles":[]},"246":{"href":"/cli/reth/dump-genesis#reth-dump-genesis","html":"</header>\n<p>Dumps genesis block JSON configuration to stdout</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> dump-genesis</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth dump-genesis [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDumps genesis block JSON configuration to stdout\n$ reth dump-genesis --help\nUsage: reth dump-genesis [OPTIONS]\n\nOptions:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth dump-genesis","titles":[]},"247":{"href":"/cli/reth/import-era#reth-import-era","html":"</header>\n<p>This syncs ERA encoded blocks from a directory</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> import-era</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth import-era [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --path &lt;IMPORT_ERA_PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to a directory for import.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          The ERA1 files are read from the local directory parsing headers and bodies.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --url &lt;IMPORT_ERA_URL&gt;</span></span>\n<span class=\"line\"><span>          The URL to a remote host where the ERA1 files are hosted.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          The ERA1 files are read from the remote host using HTTP GET requests parsing headers</span></span>\n<span class=\"line\"><span>          and bodies.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nThis syncs ERA encoded blocks from a directory\n$ reth import-era --help\nUsage: reth import-era [OPTIONS]\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\n      --path &lt;IMPORT_ERA_PATH&gt;\n          The path to a directory for import.\n\n          The ERA1 files are read from the local directory parsing headers and bodies.\n\n      --url &lt;IMPORT_ERA_URL&gt;\n          The URL to a remote host where the ERA1 files are hosted.\n\n          The ERA1 files are read from the remote host using HTTP GET requests parsing headers\n          and bodies.\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth import-era","titles":[]},"248":{"href":"/cli/reth/import#reth-import","html":"</header>\n<p>This syncs RLP encoded blocks from a file</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> import</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth import [OPTIONS] &lt;IMPORT_PATH&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --no-state</span></span>\n<span class=\"line\"><span>          Disables stages that require state.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chunk-len &lt;CHUNK_LEN&gt;</span></span>\n<span class=\"line\"><span>          Chunk byte length to read from file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  &lt;IMPORT_PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to a block file for import.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          The online stages (headers and bodies) are replaced by a file import, after which the</span></span>\n<span class=\"line\"><span>          remaining stages are executed.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nThis syncs RLP encoded blocks from a file\n$ reth import --help\nUsage: reth import [OPTIONS] &lt;IMPORT_PATH&gt;\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\n      --no-state\n          Disables stages that require state.\n\n      --chunk-len &lt;CHUNK_LEN&gt;\n          Chunk byte length to read from file.\n\n  &lt;IMPORT_PATH&gt;\n          The path to a block file for import.\n\n          The online stages (headers and bodies) are replaced by a file import, after which the\n          remaining stages are executed.\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth import","titles":[]},"249":{"href":"/cli/reth/init-state#reth-init-state","html":"</header>\n<p>Initialize the database from a state dump file</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> init-state</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth init-state [OPTIONS] &lt;STATE_DUMP_FILE&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --without-evm</span></span>\n<span class=\"line\"><span>          Specifies whether to initialize the state without relying on EVM historical data.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          When enabled, and before inserting the state, it creates a dummy chain up to the last EVM block specified. It then, appends the first block provided block.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - **Note**: **Do not** import receipts and blocks beforehand, or this will fail or be ignored.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --header &lt;HEADER_FILE&gt;</span></span>\n<span class=\"line\"><span>          Header file containing the header in an RLP encoded format.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --total-difficulty &lt;TOTAL_DIFFICULTY&gt;</span></span>\n<span class=\"line\"><span>          Total difficulty of the header.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --header-hash &lt;HEADER_HASH&gt;</span></span>\n<span class=\"line\"><span>          Hash of the header.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  &lt;STATE_DUMP_FILE&gt;</span></span>\n<span class=\"line\"><span>          JSONL file with state dump.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Must contain accounts in following format, additional account fields are ignored. Must</span></span>\n<span class=\"line\"><span>          also contain { &quot;root&quot;: \\&lt;state-root\\&gt; } as first line.</span></span>\n<span class=\"line\"><span>          {</span></span>\n<span class=\"line\"><span>              &quot;balance&quot;: &quot;\\&lt;balance\\&gt;&quot;,</span></span>\n<span class=\"line\"><span>              &quot;nonce&quot;: \\&lt;nonce\\&gt;,</span></span>\n<span class=\"line\"><span>              &quot;code&quot;: &quot;\\&lt;bytecode\\&gt;&quot;,</span></span>\n<span class=\"line\"><span>              &quot;storage&quot;: {</span></span>\n<span class=\"line\"><span>                  &quot;\\&lt;key\\&gt;&quot;: &quot;\\&lt;value\\&gt;&quot;,</span></span>\n<span class=\"line\"><span>                  ..</span></span>\n<span class=\"line\"><span>              },</span></span>\n<span class=\"line\"><span>              &quot;address&quot;: &quot;\\&lt;address\\&gt;&quot;,</span></span>\n<span class=\"line\"><span>          }</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Allows init at a non-genesis block. Caution! Blocks must be manually imported up until</span></span>\n<span class=\"line\"><span>          and including the non-genesis block to init chain at. See &#x27;import&#x27; command.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nInitialize the database from a state dump file\n$ reth init-state --help\nUsage: reth init-state [OPTIONS] &lt;STATE_DUMP_FILE&gt;\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\n      --without-evm\n          Specifies whether to initialize the state without relying on EVM historical data.\n\n          When enabled, and before inserting the state, it creates a dummy chain up to the last EVM block specified. It then, appends the first block provided block.\n\n          - **Note**: **Do not** import receipts and blocks beforehand, or this will fail or be ignored.\n\n      --header &lt;HEADER_FILE&gt;\n          Header file containing the header in an RLP encoded format.\n\n      --total-difficulty &lt;TOTAL_DIFFICULTY&gt;\n          Total difficulty of the header.\n\n      --header-hash &lt;HEADER_HASH&gt;\n          Hash of the header.\n\n  &lt;STATE_DUMP_FILE&gt;\n          JSONL file with state dump.\n\n          Must contain accounts in following format, additional account fields are ignored. Must\n          also contain { &quot;root&quot;: \\&lt;state-root\\&gt; } as first line.\n          {\n              &quot;balance&quot;: &quot;\\&lt;balance\\&gt;&quot;,\n              &quot;nonce&quot;: \\&lt;nonce\\&gt;,\n              &quot;code&quot;: &quot;\\&lt;bytecode\\&gt;&quot;,\n              &quot;storage&quot;: {\n                  &quot;\\&lt;key\\&gt;&quot;: &quot;\\&lt;value\\&gt;&quot;,\n                  ..\n              },\n              &quot;address&quot;: &quot;\\&lt;address\\&gt;&quot;,\n          }\n\n          Allows init at a non-genesis block. Caution! Blocks must be manually imported up until\n          and including the non-genesis block to init chain at. See &#x27;import&#x27; command.\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth init-state","titles":[]},"250":{"href":"/cli/reth/init#reth-init","html":"</header>\n<p>Initialize the database from a genesis file</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> init</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth init [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nInitialize the database from a genesis file\n$ reth init --help\nUsage: reth init [OPTIONS]\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth init","titles":[]},"251":{"href":"/cli/reth/node#reth-node","html":"</header>\n<p>Start the node</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth node [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --instance &lt;INSTANCE&gt;</span></span>\n<span class=\"line\"><span>          Add a new instance of a node.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Max number of instances is 200. It is chosen in a way so that it&#x27;s not possible to have port numbers that conflict with each other.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2 - `IPC_PATH`: default + `-instance`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --with-unused-ports</span></span>\n<span class=\"line\"><span>          Sets all ports to unused, allowing the OS to choose random unused ports when sockets are bound.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Mutually exclusive with `--instance`.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Metrics:</span></span>\n<span class=\"line\"><span>      --metrics &lt;SOCKET&gt;</span></span>\n<span class=\"line\"><span>          Enable Prometheus metrics.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          The metrics will be served at the given interface and port.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Networking:</span></span>\n<span class=\"line\"><span>  -d, --disable-discovery</span></span>\n<span class=\"line\"><span>          Disable the discovery service</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-dns-discovery</span></span>\n<span class=\"line\"><span>          Disable the DNS discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-discv4-discovery</span></span>\n<span class=\"line\"><span>          Disable Discv4 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --enable-discv5-discovery</span></span>\n<span class=\"line\"><span>          Enable Discv5 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-nat</span></span>\n<span class=\"line\"><span>          Disable Nat discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.addr &lt;DISCOVERY_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP address to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.port &lt;DISCOVERY_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP port to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;</span></span>\n<span class=\"line\"><span>          The number of times to carry out boost lookup queries at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-peers &lt;TRUSTED_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs of trusted peers for P2P connections.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          --trusted-peers enode://abcd@192.168.0.1:30303</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-only</span></span>\n<span class=\"line\"><span>          Connect to or accept from trusted peers only</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --bootnodes &lt;BOOTNODES&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs for P2P discovery bootstrap.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Will fall back to a network-specific default if not specified.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --dns-retries &lt;DNS_RETRIES&gt;</span></span>\n<span class=\"line\"><span>          Amount of DNS resolution requests retries to perform when peering</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --peers-file &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the known peers file. Connected peers are dumped to this file on nodes</span></span>\n<span class=\"line\"><span>          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --identity &lt;IDENTITY&gt;</span></span>\n<span class=\"line\"><span>          Custom node identity</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --p2p-secret-key &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          Secret key to use for this node.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --no-persist-peers</span></span>\n<span class=\"line\"><span>          Do not persist peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --nat &lt;NAT&gt;</span></span>\n<span class=\"line\"><span>          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: any]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --addr &lt;ADDR&gt;</span></span>\n<span class=\"line\"><span>          Network listening address</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --port &lt;PORT&gt;</span></span>\n<span class=\"line\"><span>          Network listening port</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of outbound requests. default: 100</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of inbound requests. default: 30</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 130]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs-peer &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-seen-tx-history &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of seen transactions to remember per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 320 transaction hashes.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 320]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-pending-imports &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of transactions to import concurrently.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 4096]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-response-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions</span></span>\n<span class=\"line\"><span>          to pack in one response.</span></span>\n<span class=\"line\"><span>          Spec&#x27;d at 2MiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 2097152]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-pack-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions to</span></span>\n<span class=\"line\"><span>          request in one request.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a</span></span>\n<span class=\"line\"><span>          transaction announcement (see `RLPx` specs). This allows a node to request a specific size</span></span>\n<span class=\"line\"><span>          response.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          By default, nodes request only 128 KiB worth of transactions, but should a peer request</span></span>\n<span class=\"line\"><span>          more, up to 2 MiB, a node will answer with more than 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 131072]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-pending-fetch &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max capacity of cache of hashes for transactions pending fetch.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 25600]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --net-if.experimental &lt;IF_NAME&gt;</span></span>\n<span class=\"line\"><span>          Name of network interface used to communicate with peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;</span></span>\n<span class=\"line\"><span>          Transaction Propagation Policy</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          The policy determines which peers transactions are gossiped to.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: All]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>RPC:</span></span>\n<span class=\"line\"><span>      --http</span></span>\n<span class=\"line\"><span>          Enable the HTTP-RPC server</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --http.addr &lt;HTTP_ADDR&gt;</span></span>\n<span class=\"line\"><span>          Http server address to listen on</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 127.0.0.1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --http.port &lt;HTTP_PORT&gt;</span></span>\n<span class=\"line\"><span>          Http server port to listen on</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 8545]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --http.disable-compression</span></span>\n<span class=\"line\"><span>          Disable compression for HTTP responses</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --http.api &lt;HTTP_API&gt;</span></span>\n<span class=\"line\"><span>          Rpc Modules to be configured for the HTTP server</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: admin, debug, eth, net, trace, txpool, web3, rpc, reth, ots, flashbots, miner, mev]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --http.corsdomain &lt;HTTP_CORSDOMAIN&gt;</span></span>\n<span class=\"line\"><span>          Http Corsdomain to allow request from</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --ws</span></span>\n<span class=\"line\"><span>          Enable the WS-RPC server</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --ws.addr &lt;WS_ADDR&gt;</span></span>\n<span class=\"line\"><span>          Ws server address to listen on</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 127.0.0.1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --ws.port &lt;WS_PORT&gt;</span></span>\n<span class=\"line\"><span>          Ws server port to listen on</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 8546]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --ws.origins &lt;ws.origins&gt;</span></span>\n<span class=\"line\"><span>          Origins from which to accept `WebSocket` requests</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --ws.api &lt;WS_API&gt;</span></span>\n<span class=\"line\"><span>          Rpc Modules to be configured for the WS server</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: admin, debug, eth, net, trace, txpool, web3, rpc, reth, ots, flashbots, miner, mev]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --ipcdisable</span></span>\n<span class=\"line\"><span>          Disable the IPC-RPC server</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --ipcpath &lt;IPCPATH&gt;</span></span>\n<span class=\"line\"><span>          Filename for IPC socket/pipe within the datadir</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;.ipc]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --authrpc.addr &lt;AUTH_ADDR&gt;</span></span>\n<span class=\"line\"><span>          Auth server address to listen on</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 127.0.0.1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --authrpc.port &lt;AUTH_PORT&gt;</span></span>\n<span class=\"line\"><span>          Auth server port to listen on</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 8551]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --authrpc.jwtsecret &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          Path to a JWT secret to use for the authenticated engine-API RPC server.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          This will enforce JWT authentication for all requests coming from the consensus layer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          If no path is provided, a secret will be generated and stored in the datadir under `&lt;DIR&gt;/&lt;CHAIN_ID&gt;/jwt.hex`. For mainnet this would be `~/.reth/mainnet/jwt.hex` by default.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --auth-ipc</span></span>\n<span class=\"line\"><span>          Enable auth engine API over IPC</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --auth-ipc.path &lt;AUTH_IPC_PATH&gt;</span></span>\n<span class=\"line\"><span>          Filename for auth IPC socket/pipe within the datadir</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;_engine_api.ipc]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.jwtsecret &lt;HEX&gt;</span></span>\n<span class=\"line\"><span>          Hex encoded JWT secret to authenticate the regular RPC server(s), see `--http.api` and `--ws.api`.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          This is __not__ used for the authenticated engine-API RPC server, see `--authrpc.jwtsecret`.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.max-request-size &lt;RPC_MAX_REQUEST_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Set the maximum RPC request payload size for both HTTP and WS in megabytes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 15]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.max-response-size &lt;RPC_MAX_RESPONSE_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Set the maximum RPC response payload size for both HTTP and WS in megabytes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 160]</span></span>\n<span class=\"line\"><span>          [aliases: --rpc.returndata.limit]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.max-subscriptions-per-connection &lt;RPC_MAX_SUBSCRIPTIONS_PER_CONNECTION&gt;</span></span>\n<span class=\"line\"><span>          Set the maximum concurrent subscriptions per connection</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1024]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.max-connections &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of RPC server connections</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 500]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.max-tracing-requests &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of concurrent tracing requests.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          By default this chooses a sensible value based on the number of available cores. Tracing requests are generally CPU bound. Choosing a value that is higher than the available CPU cores can have a negative impact on the performance of the node and affect the node&#x27;s ability to maintain sync.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;NUM CPU CORES-2&gt;]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.max-trace-filter-blocks &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of blocks for `trace_filter` requests</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 100]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.max-blocks-per-filter &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of blocks that could be scanned per filter request. (0 = entire chain)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 100000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.max-logs-per-response &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of logs that can be returned in a single response. (0 = no limit)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.gascap &lt;GAS_CAP&gt;</span></span>\n<span class=\"line\"><span>          Maximum gas limit for `eth_call` and call tracing RPC methods</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 50000000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.txfeecap &lt;TX_FEE_CAP&gt;</span></span>\n<span class=\"line\"><span>          Maximum eth transaction fee (in ether) that can be sent via the RPC APIs (0 = no cap)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.max-simulate-blocks &lt;BLOCKS_COUNT&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of blocks for `eth_simulateV1` call</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 256]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.eth-proof-window &lt;RPC_ETH_PROOF_WINDOW&gt;</span></span>\n<span class=\"line\"><span>          The maximum proof window for historical proof generation. This value allows for generating historical proofs up to configured number of blocks from current tip (up to `tip - window`)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc.proof-permits &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of concurrent getproof requests</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 25]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --builder.disallow &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          Path to file containing disallowed addresses, json-encoded list of strings. Block validation API will reject blocks containing transactions from these addresses</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>RPC State Cache:</span></span>\n<span class=\"line\"><span>      --rpc-cache.max-blocks &lt;MAX_BLOCKS&gt;</span></span>\n<span class=\"line\"><span>          Max number of blocks in cache</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc-cache.max-receipts &lt;MAX_RECEIPTS&gt;</span></span>\n<span class=\"line\"><span>          Max number receipts in cache</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 2000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc-cache.max-headers &lt;MAX_HEADERS&gt;</span></span>\n<span class=\"line\"><span>          Max number of headers in cache</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --rpc-cache.max-concurrent-db-requests &lt;MAX_CONCURRENT_DB_REQUESTS&gt;</span></span>\n<span class=\"line\"><span>          Max number of concurrent database requests</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 512]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Gas Price Oracle:</span></span>\n<span class=\"line\"><span>      --gpo.blocks &lt;BLOCKS&gt;</span></span>\n<span class=\"line\"><span>          Number of recent blocks to check for gas price</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --gpo.ignoreprice &lt;IGNORE_PRICE&gt;</span></span>\n<span class=\"line\"><span>          Gas Price below which gpo will ignore transactions</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 2]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --gpo.maxprice &lt;MAX_PRICE&gt;</span></span>\n<span class=\"line\"><span>          Maximum transaction priority fee(or gasprice before London Fork) to be recommended by gpo</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 500000000000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --gpo.percentile &lt;PERCENTILE&gt;</span></span>\n<span class=\"line\"><span>          The percentile of gas prices to use for the estimate</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 60]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>TxPool:</span></span>\n<span class=\"line\"><span>      --txpool.pending-max-count &lt;PENDING_MAX_COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of transaction in the pending sub-pool</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 10000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.pending-max-size &lt;PENDING_MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Max size of the pending sub-pool in megabytes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.basefee-max-count &lt;BASEFEE_MAX_COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of transaction in the basefee sub-pool</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 10000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.basefee-max-size &lt;BASEFEE_MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Max size of the basefee sub-pool in megabytes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.queued-max-count &lt;QUEUED_MAX_COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of transaction in the queued sub-pool</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 10000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.queued-max-size &lt;QUEUED_MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Max size of the queued sub-pool in megabytes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.blobpool-max-count &lt;BLOBPOOL_MAX_COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of transaction in the blobpool</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 10000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.blobpool-max-size &lt;BLOBPOOL_MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Max size of the blobpool in megabytes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.blob-cache-size &lt;BLOB_CACHE_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Max number of entries for the in memory cache of the blob store</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.max-account-slots &lt;MAX_ACCOUNT_SLOTS&gt;</span></span>\n<span class=\"line\"><span>          Max number of executable transaction slots guaranteed per account</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 16]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.pricebump &lt;PRICE_BUMP&gt;</span></span>\n<span class=\"line\"><span>          Price bump (in %) for the transaction pool underpriced check</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 10]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.minimal-protocol-fee &lt;MINIMAL_PROTOCOL_BASEFEE&gt;</span></span>\n<span class=\"line\"><span>          Minimum base fee required by the protocol</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 7]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.gas-limit &lt;ENFORCED_GAS_LIMIT&gt;</span></span>\n<span class=\"line\"><span>          The default enforced gas limit for transactions entering the pool</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30000000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --blobpool.pricebump &lt;BLOB_TRANSACTION_PRICE_BUMP&gt;</span></span>\n<span class=\"line\"><span>          Price bump percentage to replace an already existing blob transaction</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 100]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.max-tx-input-bytes &lt;MAX_TX_INPUT_BYTES&gt;</span></span>\n<span class=\"line\"><span>          Max size in bytes of a single transaction allowed to enter the pool</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 131072]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.max-cached-entries &lt;MAX_CACHED_ENTRIES&gt;</span></span>\n<span class=\"line\"><span>          The maximum number of blobs to keep in the in memory blob cache</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 100]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.nolocals</span></span>\n<span class=\"line\"><span>          Flag to disable local transaction exemptions</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.locals &lt;LOCALS&gt;</span></span>\n<span class=\"line\"><span>          Flag to allow certain addresses as local</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.no-local-transactions-propagation</span></span>\n<span class=\"line\"><span>          Flag to toggle local transaction propagation</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.additional-validation-tasks &lt;ADDITIONAL_VALIDATION_TASKS&gt;</span></span>\n<span class=\"line\"><span>          Number of additional transaction validation tasks to spawn</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.max-pending-txns &lt;PENDING_TX_LISTENER_BUFFER_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of pending transactions from the network to buffer</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 2048]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.max-new-txns &lt;NEW_TX_LISTENER_BUFFER_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of new transactions to buffer</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1024]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.max-new-pending-txs-notifications &lt;MAX_NEW_PENDING_TXS_NOTIFICATIONS&gt;</span></span>\n<span class=\"line\"><span>          How many new pending transactions to buffer and send to in progress pending transaction iterators</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.lifetime &lt;DURATION&gt;</span></span>\n<span class=\"line\"><span>          Maximum amount of time non-executable transaction are queued</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 10800]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.transactions-backup &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          Path to store the local transaction backup at, to survive node restarts</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --txpool.disable-transactions-backup</span></span>\n<span class=\"line\"><span>          Disables transaction backup to disk on node shutdown</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Builder:</span></span>\n<span class=\"line\"><span>      --builder.extradata &lt;EXTRA_DATA&gt;</span></span>\n<span class=\"line\"><span>          Block extra data set by the payload builder</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: reth/&lt;VERSION&gt;/&lt;OS&gt;]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --builder.gaslimit &lt;GAS_LIMIT&gt;</span></span>\n<span class=\"line\"><span>          Target gas limit for built blocks</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --builder.interval &lt;DURATION&gt;</span></span>\n<span class=\"line\"><span>          The interval at which the job should build a new payload after the last.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Interval is specified in seconds or in milliseconds if the value ends with `ms`: * `50ms` -&gt; 50 milliseconds * `1` -&gt; 1 second</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --builder.deadline &lt;SECONDS&gt;</span></span>\n<span class=\"line\"><span>          The deadline for when the payload builder job should resolve</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 12]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --builder.max-tasks &lt;MAX_PAYLOAD_TASKS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of tasks to spawn for building a payload</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 3]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Debug:</span></span>\n<span class=\"line\"><span>      --debug.terminate</span></span>\n<span class=\"line\"><span>          Flag indicating whether the node should be terminated after the pipeline sync</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --debug.tip &lt;TIP&gt;</span></span>\n<span class=\"line\"><span>          Set the chain tip manually for testing purposes.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          NOTE: This is a temporary flag</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --debug.max-block &lt;MAX_BLOCK&gt;</span></span>\n<span class=\"line\"><span>          Runs the sync only up to the specified block</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --debug.etherscan [&lt;ETHERSCAN_API_URL&gt;]</span></span>\n<span class=\"line\"><span>          Runs a fake consensus client that advances the chain using recent block hashes on Etherscan. If specified, requires an `ETHERSCAN_API_KEY` environment variable</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --debug.rpc-consensus-ws &lt;RPC_CONSENSUS_WS&gt;</span></span>\n<span class=\"line\"><span>          Runs a fake consensus client using blocks fetched from an RPC `WebSocket` endpoint</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --debug.skip-fcu &lt;SKIP_FCU&gt;</span></span>\n<span class=\"line\"><span>          If provided, the engine will skip `n` consecutive FCUs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --debug.skip-new-payload &lt;SKIP_NEW_PAYLOAD&gt;</span></span>\n<span class=\"line\"><span>          If provided, the engine will skip `n` consecutive new payloads</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --debug.reorg-frequency &lt;REORG_FREQUENCY&gt;</span></span>\n<span class=\"line\"><span>          If provided, the chain will be reorged at specified frequency</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --debug.reorg-depth &lt;REORG_DEPTH&gt;</span></span>\n<span class=\"line\"><span>          The reorg depth for chain reorgs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --debug.engine-api-store &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to store engine API messages at. If specified, all of the intercepted engine API messages will be written to specified location</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --debug.invalid-block-hook &lt;INVALID_BLOCK_HOOK&gt;</span></span>\n<span class=\"line\"><span>          Determines which type of invalid block hook to install</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Example: `witness,prestate`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: witness]</span></span>\n<span class=\"line\"><span>          [possible values: witness, pre-state, opcode]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --debug.healthy-node-rpc-url &lt;URL&gt;</span></span>\n<span class=\"line\"><span>          The RPC URL of a healthy node to use for comparing invalid block hook results against.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Dev testnet:</span></span>\n<span class=\"line\"><span>      --dev</span></span>\n<span class=\"line\"><span>          Start the node in dev mode</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          This mode uses a local proof-of-authority consensus engine with either fixed block times</span></span>\n<span class=\"line\"><span>          or automatically mined blocks.</span></span>\n<span class=\"line\"><span>          Disables network discovery and enables local http server.</span></span>\n<span class=\"line\"><span>          Prefunds 20 accounts derived by mnemonic &quot;test test test test test test test test test test</span></span>\n<span class=\"line\"><span>          test junk&quot; with 10 000 ETH each.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --dev.block-max-transactions &lt;BLOCK_MAX_TRANSACTIONS&gt;</span></span>\n<span class=\"line\"><span>          How many transactions to mine per block</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --dev.block-time &lt;BLOCK_TIME&gt;</span></span>\n<span class=\"line\"><span>          Interval between blocks.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Parses strings using [`humantime::parse_duration`]</span></span>\n<span class=\"line\"><span>          --dev.block-time 12s</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Pruning:</span></span>\n<span class=\"line\"><span>      --full</span></span>\n<span class=\"line\"><span>          Run full node. Only the most recent [`MINIMUM_PRUNING_DISTANCE`] block states are stored</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --block-interval &lt;BLOCK_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          Minimum pruning interval measured in blocks</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.senderrecovery.full</span></span>\n<span class=\"line\"><span>          Prunes all sender recovery data</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.senderrecovery.distance &lt;BLOCKS&gt;</span></span>\n<span class=\"line\"><span>          Prune sender recovery data before the `head-N` block number. In other words, keep last N + 1 blocks</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.senderrecovery.before &lt;BLOCK_NUMBER&gt;</span></span>\n<span class=\"line\"><span>          Prune sender recovery data before the specified block number. The specified block number is not pruned</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.transactionlookup.full</span></span>\n<span class=\"line\"><span>          Prunes all transaction lookup data</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.transactionlookup.distance &lt;BLOCKS&gt;</span></span>\n<span class=\"line\"><span>          Prune transaction lookup data before the `head-N` block number. In other words, keep last N + 1 blocks</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.transactionlookup.before &lt;BLOCK_NUMBER&gt;</span></span>\n<span class=\"line\"><span>          Prune transaction lookup data before the specified block number. The specified block number is not pruned</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.receipts.full</span></span>\n<span class=\"line\"><span>          Prunes all receipt data</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.receipts.distance &lt;BLOCKS&gt;</span></span>\n<span class=\"line\"><span>          Prune receipts before the `head-N` block number. In other words, keep last N + 1 blocks</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.receipts.before &lt;BLOCK_NUMBER&gt;</span></span>\n<span class=\"line\"><span>          Prune receipts before the specified block number. The specified block number is not pruned</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.receiptslogfilter &lt;FILTER_CONFIG&gt;</span></span>\n<span class=\"line\"><span>          Configure receipts log filter. Format: &lt;`address`&gt;:&lt;`prune_mode`&gt;[,&lt;`address`&gt;:&lt;`prune_mode`&gt;...] Where &lt;`prune_mode`&gt; can be &#x27;full&#x27;, &#x27;distance:&lt;`blocks`&gt;&#x27;, or &#x27;before:&lt;`block_number`&gt;&#x27;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.accounthistory.full</span></span>\n<span class=\"line\"><span>          Prunes all account history</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.accounthistory.distance &lt;BLOCKS&gt;</span></span>\n<span class=\"line\"><span>          Prune account before the `head-N` block number. In other words, keep last N + 1 blocks</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.accounthistory.before &lt;BLOCK_NUMBER&gt;</span></span>\n<span class=\"line\"><span>          Prune account history before the specified block number. The specified block number is not pruned</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.storagehistory.full</span></span>\n<span class=\"line\"><span>          Prunes all storage history data</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.storagehistory.distance &lt;BLOCKS&gt;</span></span>\n<span class=\"line\"><span>          Prune storage history before the `head-N` block number. In other words, keep last N + 1 blocks</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prune.storagehistory.before &lt;BLOCK_NUMBER&gt;</span></span>\n<span class=\"line\"><span>          Prune storage history before the specified block number. The specified block number is not pruned</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Engine:</span></span>\n<span class=\"line\"><span>      --engine.persistence-threshold &lt;PERSISTENCE_THRESHOLD&gt;</span></span>\n<span class=\"line\"><span>          Configure persistence threshold for engine experimental</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 2]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.memory-block-buffer-target &lt;MEMORY_BLOCK_BUFFER_TARGET&gt;</span></span>\n<span class=\"line\"><span>          Configure the target number of blocks to keep in memory</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 2]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.legacy-state-root</span></span>\n<span class=\"line\"><span>          Enable legacy state root</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.caching-and-prewarming</span></span>\n<span class=\"line\"><span>          CAUTION: This CLI flag has no effect anymore, use --engine.disable-caching-and-prewarming if you want to disable caching and prewarming</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.disable-caching-and-prewarming</span></span>\n<span class=\"line\"><span>          Disable cross-block caching and parallel prewarming</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.state-provider-metrics</span></span>\n<span class=\"line\"><span>          Enable state provider latency metrics. This allows the engine to collect and report stats about how long state provider calls took during execution, but this does introduce slight overhead to state provider calls</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.cross-block-cache-size &lt;CROSS_BLOCK_CACHE_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Configure the size of cross-block cache in megabytes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 4096]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.state-root-task-compare-updates</span></span>\n<span class=\"line\"><span>          Enable comparing trie updates from the state root task to the trie updates from the regular state root calculation</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.accept-execution-requests-hash</span></span>\n<span class=\"line\"><span>          Enables accepting requests hash instead of an array of requests in `engine_newPayloadV4`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.max-proof-task-concurrency &lt;MAX_PROOF_TASK_CONCURRENCY&gt;</span></span>\n<span class=\"line\"><span>          Configure the maximum number of concurrent proof tasks</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 256]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.reserved-cpu-cores &lt;RESERVED_CPU_CORES&gt;</span></span>\n<span class=\"line\"><span>          Configure the number of reserved CPU cores for non-reth processes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.precompile-cache</span></span>\n<span class=\"line\"><span>          Enable precompile cache</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --engine.state-root-fallback</span></span>\n<span class=\"line\"><span>          Enable state root fallback, useful for testing</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Ress:</span></span>\n<span class=\"line\"><span>      --ress.enable</span></span>\n<span class=\"line\"><span>          Enable support for `ress` subprotocol</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --ress.max-active-connections &lt;MAX_ACTIVE_CONNECTIONS&gt;</span></span>\n<span class=\"line\"><span>          The maximum number of active connections for `ress` subprotocol</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --ress.max-witness-window &lt;MAX_WITNESS_WINDOW&gt;</span></span>\n<span class=\"line\"><span>          The maximum witness lookback window</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1024]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --ress.witness-max-parallel &lt;WITNESS_MAX_PARALLEL&gt;</span></span>\n<span class=\"line\"><span>          The maximum number of witnesses to generate in parallel</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --ress.witness-cache-size &lt;WITNESS_CACHE_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Witness cache size</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 10]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nStart the node\n$ reth node --help\nUsage: reth node [OPTIONS]\n\nOptions:\n      --config &lt;FILE&gt;\n          The path to the configuration file to use.\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\n      --instance &lt;INSTANCE&gt;\n          Add a new instance of a node.\n\n          Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.\n\n          Max number of instances is 200. It is chosen in a way so that it&#x27;s not possible to have port numbers that conflict with each other.\n\n          Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2 - `IPC_PATH`: default + `-instance`\n\n      --with-unused-ports\n          Sets all ports to unused, allowing the OS to choose random unused ports when sockets are bound.\n\n          Mutually exclusive with `--instance`.\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nMetrics:\n      --metrics &lt;SOCKET&gt;\n          Enable Prometheus metrics.\n\n          The metrics will be served at the given interface and port.\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\nNetworking:\n  -d, --disable-discovery\n          Disable the discovery service\n\n      --disable-dns-discovery\n          Disable the DNS discovery\n\n      --disable-discv4-discovery\n          Disable Discv4 discovery\n\n      --enable-discv5-discovery\n          Enable Discv5 discovery\n\n      --disable-nat\n          Disable Nat discovery\n\n      --discovery.addr &lt;DISCOVERY_ADDR&gt;\n          The UDP address to use for devp2p peer discovery version 4\n\n          [default: 0.0.0.0]\n\n      --discovery.port &lt;DISCOVERY_PORT&gt;\n          The UDP port to use for devp2p peer discovery version 4\n\n          [default: 30303]\n\n      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;\n          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4\n\n      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;\n          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6\n\n      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;\n          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set\n\n          [default: 9200]\n\n      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;\n          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set\n\n          [default: 9200]\n\n      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program\n\n          [default: 20]\n\n      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap\n\n          [default: 5]\n\n      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;\n          The number of times to carry out boost lookup queries at bootstrap\n\n          [default: 200]\n\n      --trusted-peers &lt;TRUSTED_PEERS&gt;\n          Comma separated enode URLs of trusted peers for P2P connections.\n\n          --trusted-peers enode://abcd@192.168.0.1:30303\n\n      --trusted-only\n          Connect to or accept from trusted peers only\n\n      --bootnodes &lt;BOOTNODES&gt;\n          Comma separated enode URLs for P2P discovery bootstrap.\n\n          Will fall back to a network-specific default if not specified.\n\n      --dns-retries &lt;DNS_RETRIES&gt;\n          Amount of DNS resolution requests retries to perform when peering\n\n          [default: 0]\n\n      --peers-file &lt;FILE&gt;\n          The path to the known peers file. Connected peers are dumped to this file on nodes\n          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.\n\n      --identity &lt;IDENTITY&gt;\n          Custom node identity\n\n          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]\n\n      --p2p-secret-key &lt;PATH&gt;\n          Secret key to use for this node.\n\n          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.\n\n      --no-persist-peers\n          Do not persist peers.\n\n      --nat &lt;NAT&gt;\n          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)\n\n          [default: any]\n\n      --addr &lt;ADDR&gt;\n          Network listening address\n\n          [default: 0.0.0.0]\n\n      --port &lt;PORT&gt;\n          Network listening port\n\n          [default: 30303]\n\n      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;\n          Maximum number of outbound requests. default: 100\n\n      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;\n          Maximum number of inbound requests. default: 30\n\n      --max-tx-reqs &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests.\n\n          [default: 130]\n\n      --max-tx-reqs-peer &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests per peer.\n\n          [default: 1]\n\n      --max-seen-tx-history &lt;COUNT&gt;\n          Max number of seen transactions to remember per peer.\n\n          Default is 320 transaction hashes.\n\n          [default: 320]\n\n      --max-pending-imports &lt;COUNT&gt;\n          Max number of transactions to import concurrently.\n\n          [default: 4096]\n\n      --pooled-tx-response-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions\n          to pack in one response.\n          Spec&#x27;d at 2MiB.\n\n          [default: 2097152]\n\n      --pooled-tx-pack-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions to\n          request in one request.\n\n          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a\n          transaction announcement (see `RLPx` specs). This allows a node to request a specific size\n          response.\n\n          By default, nodes request only 128 KiB worth of transactions, but should a peer request\n          more, up to 2 MiB, a node will answer with more than 128 KiB.\n\n          Default is 128 KiB.\n\n          [default: 131072]\n\n      --max-tx-pending-fetch &lt;COUNT&gt;\n          Max capacity of cache of hashes for transactions pending fetch.\n\n          [default: 25600]\n\n      --net-if.experimental &lt;IF_NAME&gt;\n          Name of network interface used to communicate with peers.\n\n          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.\n\n      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;\n          Transaction Propagation Policy\n\n          The policy determines which peers transactions are gossiped to.\n\n          [default: All]\n\nRPC:\n      --http\n          Enable the HTTP-RPC server\n\n      --http.addr &lt;HTTP_ADDR&gt;\n          Http server address to listen on\n\n          [default: 127.0.0.1]\n\n      --http.port &lt;HTTP_PORT&gt;\n          Http server port to listen on\n\n          [default: 8545]\n\n      --http.disable-compression\n          Disable compression for HTTP responses\n\n      --http.api &lt;HTTP_API&gt;\n          Rpc Modules to be configured for the HTTP server\n\n          [possible values: admin, debug, eth, net, trace, txpool, web3, rpc, reth, ots, flashbots, miner, mev]\n\n      --http.corsdomain &lt;HTTP_CORSDOMAIN&gt;\n          Http Corsdomain to allow request from\n\n      --ws\n          Enable the WS-RPC server\n\n      --ws.addr &lt;WS_ADDR&gt;\n          Ws server address to listen on\n\n          [default: 127.0.0.1]\n\n      --ws.port &lt;WS_PORT&gt;\n          Ws server port to listen on\n\n          [default: 8546]\n\n      --ws.origins &lt;ws.origins&gt;\n          Origins from which to accept `WebSocket` requests\n\n      --ws.api &lt;WS_API&gt;\n          Rpc Modules to be configured for the WS server\n\n          [possible values: admin, debug, eth, net, trace, txpool, web3, rpc, reth, ots, flashbots, miner, mev]\n\n      --ipcdisable\n          Disable the IPC-RPC server\n\n      --ipcpath &lt;IPCPATH&gt;\n          Filename for IPC socket/pipe within the datadir\n\n          [default: &lt;CACHE_DIR&gt;.ipc]\n\n      --authrpc.addr &lt;AUTH_ADDR&gt;\n          Auth server address to listen on\n\n          [default: 127.0.0.1]\n\n      --authrpc.port &lt;AUTH_PORT&gt;\n          Auth server port to listen on\n\n          [default: 8551]\n\n      --authrpc.jwtsecret &lt;PATH&gt;\n          Path to a JWT secret to use for the authenticated engine-API RPC server.\n\n          This will enforce JWT authentication for all requests coming from the consensus layer.\n\n          If no path is provided, a secret will be generated and stored in the datadir under `&lt;DIR&gt;/&lt;CHAIN_ID&gt;/jwt.hex`. For mainnet this would be `~/.reth/mainnet/jwt.hex` by default.\n\n      --auth-ipc\n          Enable auth engine API over IPC\n\n      --auth-ipc.path &lt;AUTH_IPC_PATH&gt;\n          Filename for auth IPC socket/pipe within the datadir\n\n          [default: &lt;CACHE_DIR&gt;_engine_api.ipc]\n\n      --rpc.jwtsecret &lt;HEX&gt;\n          Hex encoded JWT secret to authenticate the regular RPC server(s), see `--http.api` and `--ws.api`.\n\n          This is __not__ used for the authenticated engine-API RPC server, see `--authrpc.jwtsecret`.\n\n      --rpc.max-request-size &lt;RPC_MAX_REQUEST_SIZE&gt;\n          Set the maximum RPC request payload size for both HTTP and WS in megabytes\n\n          [default: 15]\n\n      --rpc.max-response-size &lt;RPC_MAX_RESPONSE_SIZE&gt;\n          Set the maximum RPC response payload size for both HTTP and WS in megabytes\n\n          [default: 160]\n          [aliases: --rpc.returndata.limit]\n\n      --rpc.max-subscriptions-per-connection &lt;RPC_MAX_SUBSCRIPTIONS_PER_CONNECTION&gt;\n          Set the maximum concurrent subscriptions per connection\n\n          [default: 1024]\n\n      --rpc.max-connections &lt;COUNT&gt;\n          Maximum number of RPC server connections\n\n          [default: 500]\n\n      --rpc.max-tracing-requests &lt;COUNT&gt;\n          Maximum number of concurrent tracing requests.\n\n          By default this chooses a sensible value based on the number of available cores. Tracing requests are generally CPU bound. Choosing a value that is higher than the available CPU cores can have a negative impact on the performance of the node and affect the node&#x27;s ability to maintain sync.\n\n          [default: &lt;NUM CPU CORES-2&gt;]\n\n      --rpc.max-trace-filter-blocks &lt;COUNT&gt;\n          Maximum number of blocks for `trace_filter` requests\n\n          [default: 100]\n\n      --rpc.max-blocks-per-filter &lt;COUNT&gt;\n          Maximum number of blocks that could be scanned per filter request. (0 = entire chain)\n\n          [default: 100000]\n\n      --rpc.max-logs-per-response &lt;COUNT&gt;\n          Maximum number of logs that can be returned in a single response. (0 = no limit)\n\n          [default: 20000]\n\n      --rpc.gascap &lt;GAS_CAP&gt;\n          Maximum gas limit for `eth_call` and call tracing RPC methods\n\n          [default: 50000000]\n\n      --rpc.txfeecap &lt;TX_FEE_CAP&gt;\n          Maximum eth transaction fee (in ether) that can be sent via the RPC APIs (0 = no cap)\n\n          [default: 1.0]\n\n      --rpc.max-simulate-blocks &lt;BLOCKS_COUNT&gt;\n          Maximum number of blocks for `eth_simulateV1` call\n\n          [default: 256]\n\n      --rpc.eth-proof-window &lt;RPC_ETH_PROOF_WINDOW&gt;\n          The maximum proof window for historical proof generation. This value allows for generating historical proofs up to configured number of blocks from current tip (up to `tip - window`)\n\n          [default: 0]\n\n      --rpc.proof-permits &lt;COUNT&gt;\n          Maximum number of concurrent getproof requests\n\n          [default: 25]\n\n      --builder.disallow &lt;PATH&gt;\n          Path to file containing disallowed addresses, json-encoded list of strings. Block validation API will reject blocks containing transactions from these addresses\n\nRPC State Cache:\n      --rpc-cache.max-blocks &lt;MAX_BLOCKS&gt;\n          Max number of blocks in cache\n\n          [default: 5000]\n\n      --rpc-cache.max-receipts &lt;MAX_RECEIPTS&gt;\n          Max number receipts in cache\n\n          [default: 2000]\n\n      --rpc-cache.max-headers &lt;MAX_HEADERS&gt;\n          Max number of headers in cache\n\n          [default: 1000]\n\n      --rpc-cache.max-concurrent-db-requests &lt;MAX_CONCURRENT_DB_REQUESTS&gt;\n          Max number of concurrent database requests\n\n          [default: 512]\n\nGas Price Oracle:\n      --gpo.blocks &lt;BLOCKS&gt;\n          Number of recent blocks to check for gas price\n\n          [default: 20]\n\n      --gpo.ignoreprice &lt;IGNORE_PRICE&gt;\n          Gas Price below which gpo will ignore transactions\n\n          [default: 2]\n\n      --gpo.maxprice &lt;MAX_PRICE&gt;\n          Maximum transaction priority fee(or gasprice before London Fork) to be recommended by gpo\n\n          [default: 500000000000]\n\n      --gpo.percentile &lt;PERCENTILE&gt;\n          The percentile of gas prices to use for the estimate\n\n          [default: 60]\n\nTxPool:\n      --txpool.pending-max-count &lt;PENDING_MAX_COUNT&gt;\n          Max number of transaction in the pending sub-pool\n\n          [default: 10000]\n\n      --txpool.pending-max-size &lt;PENDING_MAX_SIZE&gt;\n          Max size of the pending sub-pool in megabytes\n\n          [default: 20]\n\n      --txpool.basefee-max-count &lt;BASEFEE_MAX_COUNT&gt;\n          Max number of transaction in the basefee sub-pool\n\n          [default: 10000]\n\n      --txpool.basefee-max-size &lt;BASEFEE_MAX_SIZE&gt;\n          Max size of the basefee sub-pool in megabytes\n\n          [default: 20]\n\n      --txpool.queued-max-count &lt;QUEUED_MAX_COUNT&gt;\n          Max number of transaction in the queued sub-pool\n\n          [default: 10000]\n\n      --txpool.queued-max-size &lt;QUEUED_MAX_SIZE&gt;\n          Max size of the queued sub-pool in megabytes\n\n          [default: 20]\n\n      --txpool.blobpool-max-count &lt;BLOBPOOL_MAX_COUNT&gt;\n          Max number of transaction in the blobpool\n\n          [default: 10000]\n\n      --txpool.blobpool-max-size &lt;BLOBPOOL_MAX_SIZE&gt;\n          Max size of the blobpool in megabytes\n\n          [default: 20]\n\n      --txpool.blob-cache-size &lt;BLOB_CACHE_SIZE&gt;\n          Max number of entries for the in memory cache of the blob store\n\n      --txpool.max-account-slots &lt;MAX_ACCOUNT_SLOTS&gt;\n          Max number of executable transaction slots guaranteed per account\n\n          [default: 16]\n\n      --txpool.pricebump &lt;PRICE_BUMP&gt;\n          Price bump (in %) for the transaction pool underpriced check\n\n          [default: 10]\n\n      --txpool.minimal-protocol-fee &lt;MINIMAL_PROTOCOL_BASEFEE&gt;\n          Minimum base fee required by the protocol\n\n          [default: 7]\n\n      --txpool.gas-limit &lt;ENFORCED_GAS_LIMIT&gt;\n          The default enforced gas limit for transactions entering the pool\n\n          [default: 30000000]\n\n      --blobpool.pricebump &lt;BLOB_TRANSACTION_PRICE_BUMP&gt;\n          Price bump percentage to replace an already existing blob transaction\n\n          [default: 100]\n\n      --txpool.max-tx-input-bytes &lt;MAX_TX_INPUT_BYTES&gt;\n          Max size in bytes of a single transaction allowed to enter the pool\n\n          [default: 131072]\n\n      --txpool.max-cached-entries &lt;MAX_CACHED_ENTRIES&gt;\n          The maximum number of blobs to keep in the in memory blob cache\n\n          [default: 100]\n\n      --txpool.nolocals\n          Flag to disable local transaction exemptions\n\n      --txpool.locals &lt;LOCALS&gt;\n          Flag to allow certain addresses as local\n\n      --txpool.no-local-transactions-propagation\n          Flag to toggle local transaction propagation\n\n      --txpool.additional-validation-tasks &lt;ADDITIONAL_VALIDATION_TASKS&gt;\n          Number of additional transaction validation tasks to spawn\n\n          [default: 1]\n\n      --txpool.max-pending-txns &lt;PENDING_TX_LISTENER_BUFFER_SIZE&gt;\n          Maximum number of pending transactions from the network to buffer\n\n          [default: 2048]\n\n      --txpool.max-new-txns &lt;NEW_TX_LISTENER_BUFFER_SIZE&gt;\n          Maximum number of new transactions to buffer\n\n          [default: 1024]\n\n      --txpool.max-new-pending-txs-notifications &lt;MAX_NEW_PENDING_TXS_NOTIFICATIONS&gt;\n          How many new pending transactions to buffer and send to in progress pending transaction iterators\n\n          [default: 200]\n\n      --txpool.lifetime &lt;DURATION&gt;\n          Maximum amount of time non-executable transaction are queued\n\n          [default: 10800]\n\n      --txpool.transactions-backup &lt;PATH&gt;\n          Path to store the local transaction backup at, to survive node restarts\n\n      --txpool.disable-transactions-backup\n          Disables transaction backup to disk on node shutdown\n\nBuilder:\n      --builder.extradata &lt;EXTRA_DATA&gt;\n          Block extra data set by the payload builder\n\n          [default: reth/&lt;VERSION&gt;/&lt;OS&gt;]\n\n      --builder.gaslimit &lt;GAS_LIMIT&gt;\n          Target gas limit for built blocks\n\n      --builder.interval &lt;DURATION&gt;\n          The interval at which the job should build a new payload after the last.\n\n          Interval is specified in seconds or in milliseconds if the value ends with `ms`: * `50ms` -&gt; 50 milliseconds * `1` -&gt; 1 second\n\n          [default: 1]\n\n      --builder.deadline &lt;SECONDS&gt;\n          The deadline for when the payload builder job should resolve\n\n          [default: 12]\n\n      --builder.max-tasks &lt;MAX_PAYLOAD_TASKS&gt;\n          Maximum number of tasks to spawn for building a payload\n\n          [default: 3]\n\nDebug:\n      --debug.terminate\n          Flag indicating whether the node should be terminated after the pipeline sync\n\n      --debug.tip &lt;TIP&gt;\n          Set the chain tip manually for testing purposes.\n\n          NOTE: This is a temporary flag\n\n      --debug.max-block &lt;MAX_BLOCK&gt;\n          Runs the sync only up to the specified block\n\n      --debug.etherscan [&lt;ETHERSCAN_API_URL&gt;]\n          Runs a fake consensus client that advances the chain using recent block hashes on Etherscan. If specified, requires an `ETHERSCAN_API_KEY` environment variable\n\n      --debug.rpc-consensus-ws &lt;RPC_CONSENSUS_WS&gt;\n          Runs a fake consensus client using blocks fetched from an RPC `WebSocket` endpoint\n\n      --debug.skip-fcu &lt;SKIP_FCU&gt;\n          If provided, the engine will skip `n` consecutive FCUs\n\n      --debug.skip-new-payload &lt;SKIP_NEW_PAYLOAD&gt;\n          If provided, the engine will skip `n` consecutive new payloads\n\n      --debug.reorg-frequency &lt;REORG_FREQUENCY&gt;\n          If provided, the chain will be reorged at specified frequency\n\n      --debug.reorg-depth &lt;REORG_DEPTH&gt;\n          The reorg depth for chain reorgs\n\n      --debug.engine-api-store &lt;PATH&gt;\n          The path to store engine API messages at. If specified, all of the intercepted engine API messages will be written to specified location\n\n      --debug.invalid-block-hook &lt;INVALID_BLOCK_HOOK&gt;\n          Determines which type of invalid block hook to install\n\n          Example: `witness,prestate`\n\n          [default: witness]\n          [possible values: witness, pre-state, opcode]\n\n      --debug.healthy-node-rpc-url &lt;URL&gt;\n          The RPC URL of a healthy node to use for comparing invalid block hook results against.\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\nDev testnet:\n      --dev\n          Start the node in dev mode\n\n          This mode uses a local proof-of-authority consensus engine with either fixed block times\n          or automatically mined blocks.\n          Disables network discovery and enables local http server.\n          Prefunds 20 accounts derived by mnemonic &quot;test test test test test test test test test test\n          test junk&quot; with 10 000 ETH each.\n\n      --dev.block-max-transactions &lt;BLOCK_MAX_TRANSACTIONS&gt;\n          How many transactions to mine per block\n\n      --dev.block-time &lt;BLOCK_TIME&gt;\n          Interval between blocks.\n\n          Parses strings using [`humantime::parse_duration`]\n          --dev.block-time 12s\n\nPruning:\n      --full\n          Run full node. Only the most recent [`MINIMUM_PRUNING_DISTANCE`] block states are stored\n\n      --block-interval &lt;BLOCK_INTERVAL&gt;\n          Minimum pruning interval measured in blocks\n\n      --prune.senderrecovery.full\n          Prunes all sender recovery data\n\n      --prune.senderrecovery.distance &lt;BLOCKS&gt;\n          Prune sender recovery data before the `head-N` block number. In other words, keep last N + 1 blocks\n\n      --prune.senderrecovery.before &lt;BLOCK_NUMBER&gt;\n          Prune sender recovery data before the specified block number. The specified block number is not pruned\n\n      --prune.transactionlookup.full\n          Prunes all transaction lookup data\n\n      --prune.transactionlookup.distance &lt;BLOCKS&gt;\n          Prune transaction lookup data before the `head-N` block number. In other words, keep last N + 1 blocks\n\n      --prune.transactionlookup.before &lt;BLOCK_NUMBER&gt;\n          Prune transaction lookup data before the specified block number. The specified block number is not pruned\n\n      --prune.receipts.full\n          Prunes all receipt data\n\n      --prune.receipts.distance &lt;BLOCKS&gt;\n          Prune receipts before the `head-N` block number. In other words, keep last N + 1 blocks\n\n      --prune.receipts.before &lt;BLOCK_NUMBER&gt;\n          Prune receipts before the specified block number. The specified block number is not pruned\n\n      --prune.receiptslogfilter &lt;FILTER_CONFIG&gt;\n          Configure receipts log filter. Format: &lt;`address`&gt;:&lt;`prune_mode`&gt;[,&lt;`address`&gt;:&lt;`prune_mode`&gt;...] Where &lt;`prune_mode`&gt; can be &#x27;full&#x27;, &#x27;distance:&lt;`blocks`&gt;&#x27;, or &#x27;before:&lt;`block_number`&gt;&#x27;\n\n      --prune.accounthistory.full\n          Prunes all account history\n\n      --prune.accounthistory.distance &lt;BLOCKS&gt;\n          Prune account before the `head-N` block number. In other words, keep last N + 1 blocks\n\n      --prune.accounthistory.before &lt;BLOCK_NUMBER&gt;\n          Prune account history before the specified block number. The specified block number is not pruned\n\n      --prune.storagehistory.full\n          Prunes all storage history data\n\n      --prune.storagehistory.distance &lt;BLOCKS&gt;\n          Prune storage history before the `head-N` block number. In other words, keep last N + 1 blocks\n\n      --prune.storagehistory.before &lt;BLOCK_NUMBER&gt;\n          Prune storage history before the specified block number. The specified block number is not pruned\n\nEngine:\n      --engine.persistence-threshold &lt;PERSISTENCE_THRESHOLD&gt;\n          Configure persistence threshold for engine experimental\n\n          [default: 2]\n\n      --engine.memory-block-buffer-target &lt;MEMORY_BLOCK_BUFFER_TARGET&gt;\n          Configure the target number of blocks to keep in memory\n\n          [default: 2]\n\n      --engine.legacy-state-root\n          Enable legacy state root\n\n      --engine.caching-and-prewarming\n          CAUTION: This CLI flag has no effect anymore, use --engine.disable-caching-and-prewarming if you want to disable caching and prewarming\n\n      --engine.disable-caching-and-prewarming\n          Disable cross-block caching and parallel prewarming\n\n      --engine.state-provider-metrics\n          Enable state provider latency metrics. This allows the engine to collect and report stats about how long state provider calls took during execution, but this does introduce slight overhead to state provider calls\n\n      --engine.cross-block-cache-size &lt;CROSS_BLOCK_CACHE_SIZE&gt;\n          Configure the size of cross-block cache in megabytes\n\n          [default: 4096]\n\n      --engine.state-root-task-compare-updates\n          Enable comparing trie updates from the state root task to the trie updates from the regular state root calculation\n\n      --engine.accept-execution-requests-hash\n          Enables accepting requests hash instead of an array of requests in `engine_newPayloadV4`\n\n      --engine.max-proof-task-concurrency &lt;MAX_PROOF_TASK_CONCURRENCY&gt;\n          Configure the maximum number of concurrent proof tasks\n\n          [default: 256]\n\n      --engine.reserved-cpu-cores &lt;RESERVED_CPU_CORES&gt;\n          Configure the number of reserved CPU cores for non-reth processes\n\n          [default: 1]\n\n      --engine.precompile-cache\n          Enable precompile cache\n\n      --engine.state-root-fallback\n          Enable state root fallback, useful for testing\n\nRess:\n      --ress.enable\n          Enable support for `ress` subprotocol\n\n      --ress.max-active-connections &lt;MAX_ACTIVE_CONNECTIONS&gt;\n          The maximum number of active connections for `ress` subprotocol\n\n          [default: 5]\n\n      --ress.max-witness-window &lt;MAX_WITNESS_WINDOW&gt;\n          The maximum witness lookback window\n\n          [default: 1024]\n\n      --ress.witness-max-parallel &lt;WITNESS_MAX_PARALLEL&gt;\n          The maximum number of witnesses to generate in parallel\n\n          [default: 5]\n\n      --ress.witness-cache-size &lt;WITNESS_CACHE_SIZE&gt;\n          Witness cache size\n\n          [default: 10]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth node","titles":[]},"252":{"href":"/cli/reth/p2p#reth-p2p","html":"</header>\n<p>P2P Debugging utilities</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> p2p</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth p2p [OPTIONS] &lt;COMMAND&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Commands:</span></span>\n<span class=\"line\"><span>  header  Download block header</span></span>\n<span class=\"line\"><span>  body    Download block body</span></span>\n<span class=\"line\"><span>  rlpx    RLPx commands</span></span>\n<span class=\"line\"><span>  help    Print this message or the help of the given subcommand(s)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --retries &lt;RETRIES&gt;</span></span>\n<span class=\"line\"><span>          The number of retries per request</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Networking:</span></span>\n<span class=\"line\"><span>  -d, --disable-discovery</span></span>\n<span class=\"line\"><span>          Disable the discovery service</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-dns-discovery</span></span>\n<span class=\"line\"><span>          Disable the DNS discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-discv4-discovery</span></span>\n<span class=\"line\"><span>          Disable Discv4 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --enable-discv5-discovery</span></span>\n<span class=\"line\"><span>          Enable Discv5 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-nat</span></span>\n<span class=\"line\"><span>          Disable Nat discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.addr &lt;DISCOVERY_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP address to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.port &lt;DISCOVERY_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP port to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;</span></span>\n<span class=\"line\"><span>          The number of times to carry out boost lookup queries at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-peers &lt;TRUSTED_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs of trusted peers for P2P connections.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          --trusted-peers enode://abcd@192.168.0.1:30303</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-only</span></span>\n<span class=\"line\"><span>          Connect to or accept from trusted peers only</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --bootnodes &lt;BOOTNODES&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs for P2P discovery bootstrap.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Will fall back to a network-specific default if not specified.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --dns-retries &lt;DNS_RETRIES&gt;</span></span>\n<span class=\"line\"><span>          Amount of DNS resolution requests retries to perform when peering</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --peers-file &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the known peers file. Connected peers are dumped to this file on nodes</span></span>\n<span class=\"line\"><span>          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --identity &lt;IDENTITY&gt;</span></span>\n<span class=\"line\"><span>          Custom node identity</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --p2p-secret-key &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          Secret key to use for this node.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --no-persist-peers</span></span>\n<span class=\"line\"><span>          Do not persist peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --nat &lt;NAT&gt;</span></span>\n<span class=\"line\"><span>          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: any]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --addr &lt;ADDR&gt;</span></span>\n<span class=\"line\"><span>          Network listening address</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --port &lt;PORT&gt;</span></span>\n<span class=\"line\"><span>          Network listening port</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of outbound requests. default: 100</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of inbound requests. default: 30</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 130]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs-peer &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-seen-tx-history &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of seen transactions to remember per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 320 transaction hashes.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 320]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-pending-imports &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of transactions to import concurrently.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 4096]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-response-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions</span></span>\n<span class=\"line\"><span>          to pack in one response.</span></span>\n<span class=\"line\"><span>          Spec&#x27;d at 2MiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 2097152]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-pack-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions to</span></span>\n<span class=\"line\"><span>          request in one request.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a</span></span>\n<span class=\"line\"><span>          transaction announcement (see `RLPx` specs). This allows a node to request a specific size</span></span>\n<span class=\"line\"><span>          response.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          By default, nodes request only 128 KiB worth of transactions, but should a peer request</span></span>\n<span class=\"line\"><span>          more, up to 2 MiB, a node will answer with more than 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 131072]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-pending-fetch &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max capacity of cache of hashes for transactions pending fetch.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 25600]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --net-if.experimental &lt;IF_NAME&gt;</span></span>\n<span class=\"line\"><span>          Name of network interface used to communicate with peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;</span></span>\n<span class=\"line\"><span>          Transaction Propagation Policy</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          The policy determines which peers transactions are gossiped to.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: All]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nP2P Debugging utilities\n$ reth p2p --help\nUsage: reth p2p [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  header  Download block header\n  body    Download block body\n  rlpx    RLPx commands\n  help    Print this message or the help of the given subcommand(s)\n\nOptions:\n      --config &lt;FILE&gt;\n          The path to the configuration file to use.\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\n      --retries &lt;RETRIES&gt;\n          The number of retries per request\n\n          [default: 5]\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nNetworking:\n  -d, --disable-discovery\n          Disable the discovery service\n\n      --disable-dns-discovery\n          Disable the DNS discovery\n\n      --disable-discv4-discovery\n          Disable Discv4 discovery\n\n      --enable-discv5-discovery\n          Enable Discv5 discovery\n\n      --disable-nat\n          Disable Nat discovery\n\n      --discovery.addr &lt;DISCOVERY_ADDR&gt;\n          The UDP address to use for devp2p peer discovery version 4\n\n          [default: 0.0.0.0]\n\n      --discovery.port &lt;DISCOVERY_PORT&gt;\n          The UDP port to use for devp2p peer discovery version 4\n\n          [default: 30303]\n\n      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;\n          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4\n\n      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;\n          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6\n\n      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;\n          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set\n\n          [default: 9200]\n\n      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;\n          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set\n\n          [default: 9200]\n\n      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program\n\n          [default: 20]\n\n      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap\n\n          [default: 5]\n\n      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;\n          The number of times to carry out boost lookup queries at bootstrap\n\n          [default: 200]\n\n      --trusted-peers &lt;TRUSTED_PEERS&gt;\n          Comma separated enode URLs of trusted peers for P2P connections.\n\n          --trusted-peers enode://abcd@192.168.0.1:30303\n\n      --trusted-only\n          Connect to or accept from trusted peers only\n\n      --bootnodes &lt;BOOTNODES&gt;\n          Comma separated enode URLs for P2P discovery bootstrap.\n\n          Will fall back to a network-specific default if not specified.\n\n      --dns-retries &lt;DNS_RETRIES&gt;\n          Amount of DNS resolution requests retries to perform when peering\n\n          [default: 0]\n\n      --peers-file &lt;FILE&gt;\n          The path to the known peers file. Connected peers are dumped to this file on nodes\n          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.\n\n      --identity &lt;IDENTITY&gt;\n          Custom node identity\n\n          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]\n\n      --p2p-secret-key &lt;PATH&gt;\n          Secret key to use for this node.\n\n          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.\n\n      --no-persist-peers\n          Do not persist peers.\n\n      --nat &lt;NAT&gt;\n          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)\n\n          [default: any]\n\n      --addr &lt;ADDR&gt;\n          Network listening address\n\n          [default: 0.0.0.0]\n\n      --port &lt;PORT&gt;\n          Network listening port\n\n          [default: 30303]\n\n      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;\n          Maximum number of outbound requests. default: 100\n\n      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;\n          Maximum number of inbound requests. default: 30\n\n      --max-tx-reqs &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests.\n\n          [default: 130]\n\n      --max-tx-reqs-peer &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests per peer.\n\n          [default: 1]\n\n      --max-seen-tx-history &lt;COUNT&gt;\n          Max number of seen transactions to remember per peer.\n\n          Default is 320 transaction hashes.\n\n          [default: 320]\n\n      --max-pending-imports &lt;COUNT&gt;\n          Max number of transactions to import concurrently.\n\n          [default: 4096]\n\n      --pooled-tx-response-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions\n          to pack in one response.\n          Spec&#x27;d at 2MiB.\n\n          [default: 2097152]\n\n      --pooled-tx-pack-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions to\n          request in one request.\n\n          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a\n          transaction announcement (see `RLPx` specs). This allows a node to request a specific size\n          response.\n\n          By default, nodes request only 128 KiB worth of transactions, but should a peer request\n          more, up to 2 MiB, a node will answer with more than 128 KiB.\n\n          Default is 128 KiB.\n\n          [default: 131072]\n\n      --max-tx-pending-fetch &lt;COUNT&gt;\n          Max capacity of cache of hashes for transactions pending fetch.\n\n          [default: 25600]\n\n      --net-if.experimental &lt;IF_NAME&gt;\n          Name of network interface used to communicate with peers.\n\n          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.\n\n      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;\n          Transaction Propagation Policy\n\n          The policy determines which peers transactions are gossiped to.\n\n          [default: All]\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth p2p","titles":[]},"253":{"href":"/cli/reth/prune#reth-prune","html":"</header>\n<p>Prune according to the configuration without any limits</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> prune</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth prune [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nPrune according to the configuration without any limits\n$ reth prune --help\nUsage: reth prune [OPTIONS]\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth prune","titles":[]},"254":{"href":"/cli/reth/recover#reth-recover","html":"</header>\n<p>Scripts for node recovery</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> recover</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth recover [OPTIONS] &lt;COMMAND&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Commands:</span></span>\n<span class=\"line\"><span>  storage-tries  Recover the node by deleting dangling storage tries</span></span>\n<span class=\"line\"><span>  help           Print this message or the help of the given subcommand(s)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nScripts for node recovery\n$ reth recover --help\nUsage: reth recover [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  storage-tries  Recover the node by deleting dangling storage tries\n  help           Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth recover","titles":[]},"255":{"href":"/cli/reth/stage#reth-stage","html":"</header>\n<p>Manipulate individual stages</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stage</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth stage [OPTIONS] &lt;COMMAND&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Commands:</span></span>\n<span class=\"line\"><span>  run     Run a single stage</span></span>\n<span class=\"line\"><span>  drop    Drop a stage&#x27;s tables from the database</span></span>\n<span class=\"line\"><span>  dump    Dumps a stage from a range into a new database</span></span>\n<span class=\"line\"><span>  unwind  Unwinds a certain block range, deleting it from the database</span></span>\n<span class=\"line\"><span>  help    Print this message or the help of the given subcommand(s)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nManipulate individual stages\n$ reth stage --help\nUsage: reth stage [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  run     Run a single stage\n  drop    Drop a stage&#x27;s tables from the database\n  dump    Dumps a stage from a range into a new database\n  unwind  Unwinds a certain block range, deleting it from the database\n  help    Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth stage","titles":[]},"256":{"href":"/developers/exex/hello-world#hello-world","html":"</header>\n<p>Let&#x27;s write a simple &quot;Hello World&quot; ExEx that emits a log every time a new chain of blocks is committed, reverted, or reorged.</p>\n","isPage":true,"text":"\nLet&#x27;s write a simple &quot;Hello World&quot; ExEx that emits a log every time a new chain of blocks is committed, reverted, or reorged.\n","title":"Hello World","titles":[]},"257":{"href":"/developers/exex/hello-world#create-a-project","html":"\n<p>First, let&#x27;s create a new project for our ExEx</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cargo new --bin my-exex</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd my-exex</span></span></code></pre>\n<p>And add Reth as a dependency in <code>Cargo.toml</code></p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">package</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;my-exex&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">version = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0.1.0&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">edition = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2021&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">dependencies</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">reth = { git = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://github.com/paradigmxyz/reth.git&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#6A737D;--shiki-dark:#768390\"># Reth</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">reth-exex = { git = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://github.com/paradigmxyz/reth.git&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#6A737D;--shiki-dark:#768390\"># Execution Extensions</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">reth-node-ethereum = { git = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://github.com/paradigmxyz/reth.git&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#6A737D;--shiki-dark:#768390\"># Ethereum Node implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">reth-tracing = { git = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://github.com/paradigmxyz/reth.git&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#6A737D;--shiki-dark:#768390\"># Logging</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">eyre = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0.6&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> # Easy error handling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">futures-util = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0.3&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> # Stream utilities for consuming notifications</span></span></code></pre>\n","isPage":false,"text":"\nFirst, let&#x27;s create a new project for our ExEx\ncargo new --bin my-exex\ncd my-exex\nAnd add Reth as a dependency in Cargo.toml\n[package]\nname = &quot;my-exex&quot;\nversion = &quot;0.1.0&quot;\nedition = &quot;2021&quot;\n \n[dependencies]\nreth = { git = &quot;https://github.com/paradigmxyz/reth.git&quot; } # Reth\nreth-exex = { git = &quot;https://github.com/paradigmxyz/reth.git&quot; } # Execution Extensions\nreth-node-ethereum = { git = &quot;https://github.com/paradigmxyz/reth.git&quot; } # Ethereum Node implementation\nreth-tracing = { git = &quot;https://github.com/paradigmxyz/reth.git&quot; } # Logging\n \neyre = &quot;0.6&quot; # Easy error handling\nfutures-util = &quot;0.3&quot; # Stream utilities for consuming notifications\n","title":"Create a project","titles":["Hello World",null]},"258":{"href":"/developers/exex/hello-world#default-reth-node","html":"\n<p>Now, let&#x27;s jump to our <code>main.rs</code> and start by initializing and launching a default Reth node</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_ethereum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse_args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">run</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">builder, _</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handle </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> builder</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">launch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">wait_for_node_exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>You can already test that it works by running the binary and initializing the Holesky node in a custom datadir\n(to not interfere with any instances of Reth you already have on your machine):</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">$ cargo run -- init --chain holesky --datadir data</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2024-06-12T16:48:06.420296Z  INFO reth init starting</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2024-06-12T16:48:06.422380Z  INFO Opening storage db_path=&quot;data/db&quot; sf_path=&quot;data/static_files&quot;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2024-06-12T16:48:06.432939Z  INFO Verifying storage consistency.</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2024-06-12T16:48:06.577673Z  INFO Genesis block written hash=0xb5f7f912443c940f21fd611f12828d75b53</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">4364ed9e95ca4e307729a4661bde4</span></span></code></pre>\n","isPage":false,"text":"\nNow, let&#x27;s jump to our main.rs and start by initializing and launching a default Reth node\nuse reth_node_ethereum::EthereumNode;\n \nfn main() -&gt; eyre::Result&lt;()&gt; {\n    reth::cli::Cli::parse_args().run(async move |builder, _| {\n        let handle = builder.node(EthereumNode::default()).launch().await?;\n \n        handle.wait_for_node_exit().await\n    })\n}\nYou can already test that it works by running the binary and initializing the Holesky node in a custom datadir\n(to not interfere with any instances of Reth you already have on your machine):\n$ cargo run -- init --chain holesky --datadir data\n \n2024-06-12T16:48:06.420296Z  INFO reth init starting\n2024-06-12T16:48:06.422380Z  INFO Opening storage db_path=&quot;data/db&quot; sf_path=&quot;data/static_files&quot;\n2024-06-12T16:48:06.432939Z  INFO Verifying storage consistency.\n2024-06-12T16:48:06.577673Z  INFO Genesis block written hash=0xb5f7f912443c940f21fd611f12828d75b53\n4364ed9e95ca4e307729a4661bde4\n","title":"Default Reth node","titles":["Hello World",null]},"259":{"href":"/developers/exex/hello-world#simplest-exex","html":"\n<p>The simplest ExEx is just an async function that never returns. We need to install it into our node</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">api</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_ethereum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> my_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    #[expect(clippy</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">empty_loop)]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    loop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse_args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">run</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">builder, _</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handle </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> builder</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">install_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;my-exex&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">my_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">launch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">wait_for_node_exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>See that unused <code>_ctx</code>? That&#x27;s the context that we&#x27;ll use to listen to new notifications coming from the main node,\nand send events back to it. It also contains all components that the node exposes to the ExEx.</p>\n<p>Currently, our ExEx does absolutely nothing by running an infinite loop in an async function that never returns.</p>\n<div class=\"warning\"><p>It&#x27;s important that the future returned by the ExEx (<code>my_exex</code>) never resolves.</p><p>If you try running a node with an ExEx that exits, the node will exit as well.</p></div>\n","isPage":false,"text":"\nThe simplest ExEx is just an async function that never returns. We need to install it into our node\nuse reth::api::FullNodeComponents;\nuse reth_exex::ExExContext;\nuse reth_node_ethereum::EthereumNode;\n \nasync fn my_exex&lt;Node: FullNodeComponents&gt;(mut _ctx: ExExContext&lt;Node&gt;) -&gt; eyre::Result&lt;()&gt; {\n    #[expect(clippy::empty_loop)]\n    loop {}\n}\n \nfn main() -&gt; eyre::Result&lt;()&gt; {\n    reth::cli::Cli::parse_args().run(async move |builder, _| {\n        let handle = builder\n            .node(EthereumNode::default())\n            .install_exex(&quot;my-exex&quot;, async move |ctx| Ok(my_exex(ctx)))\n            .launch()\n            .await?;\n \n        handle.wait_for_node_exit().await\n    })\n}\nSee that unused _ctx? That&#x27;s the context that we&#x27;ll use to listen to new notifications coming from the main node,\nand send events back to it. It also contains all components that the node exposes to the ExEx.\nCurrently, our ExEx does absolutely nothing by running an infinite loop in an async function that never returns.\nIt&#x27;s important that the future returned by the ExEx (my_exex) never resolves.If you try running a node with an ExEx that exits, the node will exit as well.\n","title":"Simplest ExEx","titles":["Hello World",null]},"260":{"href":"/developers/exex/hello-world#hello-world-exex","html":"\n<p>Now, let&#x27;s extend our simplest ExEx and start actually listening to new notifications, log them, and send events back to the main node</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> futures_util</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TryStreamExt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">api</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">builder</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_ethereum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">info;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> my_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Types</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    while</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">try_next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        match</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notification {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            ExExNotification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChainCommitted</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { new } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">new</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received commit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            ExExNotification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChainReorged</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { old, new } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(from_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">old</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), to_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">new</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received reorg&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            ExExNotification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChainReverted</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { old } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(reverted_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">old</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received revert&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        };</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">committed_chain</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">events</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FinishedHeight</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">tip</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">num_hash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()))</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse_args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">run</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">builder, _</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handle </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> builder</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">install_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;my-exex&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">my_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">launch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">wait_for_node_exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>Woah, there&#x27;s a lot of new stuff here! Let&#x27;s go through it step by step:</p>\n<ul>\n<li>First, we&#x27;ve added a <code>while let Some(notification) = ctx.notifications.recv().await</code> loop that waits for new notifications to come in.\n<ul>\n<li>The main node is responsible for sending notifications to the ExEx, so we&#x27;re waiting for them to come in.</li>\n</ul>\n</li>\n<li>Next, we&#x27;ve added a <code>match &amp;notification { ... }</code> block that matches on the type of the notification.\n<ul>\n<li>In each case, we&#x27;re logging the notification and the corresponding block range, be it a chain commit, revert, or reorg.</li>\n</ul>\n</li>\n<li>Finally, we&#x27;re checking if the notification contains a committed chain, and if it does, we&#x27;re sending a <code>ExExEvent::FinishedHeight</code> event back to the main node using the <code>ctx.events.send</code> method.</li>\n</ul>\n<div class=\"warning\"><p>Sending an <code>ExExEvent::FinishedHeight</code> event is a very important part of every ExEx.</p><p>It&#x27;s the only way to communicate to the main node that the ExEx has finished processing the specified height\nand it&#x27;s safe to prune the associated data.</p></div>\n<p>What we&#x27;ve arrived at is the <a href=\"https://github.com/paradigmxyz/reth-exex-examples/blob/4f3498f0cc00e038d6d8c32cd94fe82788862f49/minimal/src/main.rs\">minimal ExEx example</a> that we provide in the <a href=\"https://github.com/paradigmxyz/reth-exex-examples\">reth-exex-examples</a> repository.</p>\n","isPage":false,"text":"\nNow, let&#x27;s extend our simplest ExEx and start actually listening to new notifications, log them, and send events back to the main node\nuse futures_util::TryStreamExt;\nuse reth::{api::FullNodeComponents, builder::NodeTypes, primitives::EthPrimitives};\nuse reth_exex::{ExExContext, ExExEvent, ExExNotification};\nuse reth_node_ethereum::EthereumNode;\nuse reth_tracing::tracing::info;\n \nasync fn my_exex&lt;Node: FullNodeComponents&lt;Types: NodeTypes&lt;Primitives = EthPrimitives&gt;&gt;&gt;(\n    mut ctx: ExExContext&lt;Node&gt;,\n) -&gt; eyre::Result&lt;()&gt; {\n    while let Some(notification) = ctx.notifications.try_next().await? {\n        match &amp;notification {\n            ExExNotification::ChainCommitted { new } =&gt; {\n                info!(committed_chain = ?new.range(), &quot;Received commit&quot;);\n            }\n            ExExNotification::ChainReorged { old, new } =&gt; {\n                info!(from_chain = ?old.range(), to_chain = ?new.range(), &quot;Received reorg&quot;);\n            }\n            ExExNotification::ChainReverted { old } =&gt; {\n                info!(reverted_chain = ?old.range(), &quot;Received revert&quot;);\n            }\n        };\n \n        if let Some(committed_chain) = notification.committed_chain() {\n            ctx.events.send(ExExEvent::FinishedHeight(committed_chain.tip().num_hash()))?;\n        }\n    }\n \n    Ok(())\n}\n \nfn main() -&gt; eyre::Result&lt;()&gt; {\n    reth::cli::Cli::parse_args().run(async move |builder, _| {\n        let handle = builder\n            .node(EthereumNode::default())\n            .install_exex(&quot;my-exex&quot;, async move |ctx| Ok(my_exex(ctx)))\n            .launch()\n            .await?;\n \n        handle.wait_for_node_exit().await\n    })\n}\nWoah, there&#x27;s a lot of new stuff here! Let&#x27;s go through it step by step:\n\nFirst, we&#x27;ve added a while let Some(notification) = ctx.notifications.recv().await loop that waits for new notifications to come in.\n\nThe main node is responsible for sending notifications to the ExEx, so we&#x27;re waiting for them to come in.\n\n\nNext, we&#x27;ve added a match &amp;notification { ... } block that matches on the type of the notification.\n\nIn each case, we&#x27;re logging the notification and the corresponding block range, be it a chain commit, revert, or reorg.\n\n\nFinally, we&#x27;re checking if the notification contains a committed chain, and if it does, we&#x27;re sending a ExExEvent::FinishedHeight event back to the main node using the ctx.events.send method.\n\nSending an ExExEvent::FinishedHeight event is a very important part of every ExEx.It&#x27;s the only way to communicate to the main node that the ExEx has finished processing the specified height\nand it&#x27;s safe to prune the associated data.\nWhat we&#x27;ve arrived at is the minimal ExEx example that we provide in the reth-exex-examples repository.\n","title":"Hello World ExEx","titles":["Hello World",null]},"261":{"href":"/developers/exex/hello-world#whats-next","html":"\n<p>Let&#x27;s do something a bit more interesting, and see how you can <a href=\"./tracking-state\">keep track of some state</a> inside your ExEx.</p>","isPage":false,"text":"\nLet&#x27;s do something a bit more interesting, and see how you can keep track of some state inside your ExEx.","title":"What&#x27;s next?","titles":["Hello World"]},"262":{"href":"/developers/exex/how-it-works#how-do-exexes-work","html":"</header>\n<p>ExExes are just <a href=\"https://doc.rust-lang.org/std/future/trait.Future.html\">Futures</a> that run indefinitely alongside Reth\n– as simple as that.</p>\n<p>An ExEx is usually driven by and acts on new notifications about chain commits, reverts, and reorgs, but it can span beyond that.</p>\n<p>They are installed into the node by using the <a href=\"https://reth.rs/docs/reth/builder/struct.NodeBuilder.html\">node builder</a>.\nReth manages the lifecycle of all ExExes, including:</p>\n<ul>\n<li>Polling ExEx futures</li>\n<li>Sending <a href=\"https://reth.rs/docs/reth_exex/enum.ExExNotification.html\">notifications</a> about new chain, reverts,\nand reorgs from historical and live sync</li>\n<li>Processing <a href=\"https://reth.rs/docs/reth_exex/enum.ExExEvent.html\">events</a> emitted by ExExes</li>\n<li>Pruning (in case of a full or pruned node) only the data that has been processed by all ExExes</li>\n<li>Shutting ExExes down when the node is shut down</li>\n</ul>\n","isPage":true,"text":"\nExExes are just Futures that run indefinitely alongside Reth\n– as simple as that.\nAn ExEx is usually driven by and acts on new notifications about chain commits, reverts, and reorgs, but it can span beyond that.\nThey are installed into the node by using the node builder.\nReth manages the lifecycle of all ExExes, including:\n\nPolling ExEx futures\nSending notifications about new chain, reverts,\nand reorgs from historical and live sync\nProcessing events emitted by ExExes\nPruning (in case of a full or pruned node) only the data that has been processed by all ExExes\nShutting ExExes down when the node is shut down\n\n","title":"How do ExExes work?","titles":[]},"263":{"href":"/developers/exex/how-it-works#pruning","html":"\n<p>Pruning deserves a special mention here.</p>\n<p>ExExes <strong>SHOULD</strong> emit an <a href=\"https://reth.rs/docs/reth_exex/enum.ExExEvent.html#variant.FinishedHeight\"><code>ExExEvent::FinishedHeight</code></a>\nevent to signify what blocks have been processed. This event is used by Reth to determine what state can be pruned.</p>\n<p>An ExEx will only receive notifications for block numbers greater than the block in the most recently emitted <code>FinishedHeight</code> event.</p>\n<p>To clarify: if an ExEx emits <code>ExExEvent::FinishedHeight</code> for <code>block #0</code> it will receive notifications for any <code>block_number &gt; 0</code>.</p>","isPage":false,"text":"\nPruning deserves a special mention here.\nExExes SHOULD emit an ExExEvent::FinishedHeight\nevent to signify what blocks have been processed. This event is used by Reth to determine what state can be pruned.\nAn ExEx will only receive notifications for block numbers greater than the block in the most recently emitted FinishedHeight event.\nTo clarify: if an ExEx emits ExExEvent::FinishedHeight for block #0 it will receive notifications for any block_number &gt; 0.","title":"Pruning","titles":["How do ExExes work?"]},"264":{"href":"/developers/exex/overview#execution-extensions-exex","html":"</header>\n","isPage":true,"text":"\n","title":"Execution Extensions (ExEx)","titles":[]},"265":{"href":"/developers/exex/overview#what-are-execution-extensions","html":"\n<p>Execution Extensions (or ExExes, for short) allow developers to build their own infrastructure that relies on Reth\nas a base for driving the chain (be it <a href=\"../../run/mainnet\">Ethereum</a> or <a href=\"../../run/optimism\">OP Stack</a>) forward.</p>\n<p>An Execution Extension is a task that derives its state from changes in Reth&#x27;s state.\nSome examples of such state derivations are rollups, bridges, and indexers.</p>\n<p>They are called Execution Extensions because the main trigger for them is the execution of new blocks (or reorgs of old blocks)\ninitiated by Reth.</p>\n<p>Read more about things you can build with Execution Extensions in the <a href=\"https://www.paradigm.xyz/2024/05/reth-exex\">Paradigm blog</a>.</p>\n","isPage":false,"text":"\nExecution Extensions (or ExExes, for short) allow developers to build their own infrastructure that relies on Reth\nas a base for driving the chain (be it Ethereum or OP Stack) forward.\nAn Execution Extension is a task that derives its state from changes in Reth&#x27;s state.\nSome examples of such state derivations are rollups, bridges, and indexers.\nThey are called Execution Extensions because the main trigger for them is the execution of new blocks (or reorgs of old blocks)\ninitiated by Reth.\nRead more about things you can build with Execution Extensions in the Paradigm blog.\n","title":"What are Execution Extensions?","titles":["Execution Extensions (ExEx)"]},"266":{"href":"/developers/exex/overview#what-execution-extensions-are-not","html":"\n<p>Execution Extensions are not separate processes that connect to the main Reth node process.\nInstead, ExExes are compiled into the same binary as Reth, and run alongside it, using shared memory for communication.</p>\n<p>If you want to build an Execution Extension that sends data into a separate process, check out the <a href=\"./remote\">Remote</a> chapter.</p>\n","isPage":false,"text":"\nExecution Extensions are not separate processes that connect to the main Reth node process.\nInstead, ExExes are compiled into the same binary as Reth, and run alongside it, using shared memory for communication.\nIf you want to build an Execution Extension that sends data into a separate process, check out the Remote chapter.\n","title":"What Execution Extensions are not","titles":["Execution Extensions (ExEx)"]},"267":{"href":"/developers/exex/overview#how-do-i-build-an-execution-extension","html":"\n<p>Let&#x27;s dive into how to build our own ExEx from scratch, add tests for it,\nand run it on the Holesky testnet.</p>\n<ol>\n<li><a href=\"./how-it-works\">How do ExExes work?</a></li>\n<li><a href=\"./hello-world\">Hello World</a></li>\n<li><a href=\"./tracking-state\">Tracking State</a></li>\n<li><a href=\"./remote\">Remote</a></li>\n</ol>","isPage":false,"text":"\nLet&#x27;s dive into how to build our own ExEx from scratch, add tests for it,\nand run it on the Holesky testnet.\n\nHow do ExExes work?\nHello World\nTracking State\nRemote\n","title":"How do I build an Execution Extension?","titles":["Execution Extensions (ExEx)"]},"268":{"href":"/developers/exex/remote#remote-execution-extensions","html":"</header>\n<p>In this chapter, we will learn how to create an ExEx that emits all notifications to an external process.</p>\n<p>We will use <a href=\"https://github.com/hyperium/tonic\">Tonic</a> to create a gRPC server and a client.</p>\n<ul>\n<li>The server binary will have the Reth client, our ExEx and the gRPC server.</li>\n<li>The client binary will have the gRPC client that connects to the server.</li>\n</ul>\n","isPage":true,"text":"\nIn this chapter, we will learn how to create an ExEx that emits all notifications to an external process.\nWe will use Tonic to create a gRPC server and a client.\n\nThe server binary will have the Reth client, our ExEx and the gRPC server.\nThe client binary will have the gRPC client that connects to the server.\n\n","title":"Remote Execution Extensions","titles":[]},"269":{"href":"/developers/exex/remote#prerequisites","html":"\n<p>See <a href=\"https://github.com/hyperium/tonic?tab=readme-ov-file#dependencies\">section</a> of the Tonic documentation\nto install the required dependencies.</p>\n","isPage":false,"text":"\nSee section of the Tonic documentation\nto install the required dependencies.\n","title":"Prerequisites","titles":["Remote Execution Extensions"]},"270":{"href":"/developers/exex/remote#create-a-new-project","html":"\n<p>Let&#x27;s create a new project. Don&#x27;t forget to provide the <code>--lib</code> flag to <code>cargo new</code>,\nbecause we will have two custom binaries in this project that we will create manually.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">$ cargo new --lib exex-remote</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">$ cd exex-remote</span></span></code></pre>\n<p>We will also need a bunch of dependencies. Some of them you know from the <a href=\"./hello-world\">Hello World</a> chapter,\nbut some of specific to what we need now.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">package</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;remote-exex&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">version = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0.1.0&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">edition = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2021&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">dependencies</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># reth</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">reth = { git = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://github.com/paradigmxyz/reth.git&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">reth-exex = { git = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://github.com/paradigmxyz/reth.git&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, features = [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;serde&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">reth-node-ethereum = { git = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://github.com/paradigmxyz/reth.git&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">reth-node-api = { git = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://github.com/paradigmxyz/reth.git&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">reth-tracing = { git = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://github.com/paradigmxyz/reth.git&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># async</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tokio = { version = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, features = [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;full&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tokio-stream = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0.1&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">futures-util = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0.3&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># grpc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tonic = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0.11&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">prost = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0.12&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">bincode = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># misc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">eyre = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0.6&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">build-dependencies</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tonic-build = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0.11&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;exex_1&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">path = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;src/exex_1.rs&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;exex_2&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">path = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;src/exex_2.rs&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;exex_3&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">path = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;src/exex_3.rs&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;exex_4&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">path = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;src/exex_4.rs&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;exex&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">path = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;src/exex.rs&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[[</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;consumer&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">path = </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;src/consumer.rs&quot;</span></span></code></pre>\n<p>We also added a build dependency for Tonic. We will use it to generate the Rust code for our\nProtobuf definitions at compile time. Read more about using Tonic in the\n<a href=\"https://github.com/hyperium/tonic/blob/6a213e9485965db0628591e30577ed81cdaeaf2b/examples/helloworld-tutorial\">introductory tutorial</a>.</p>\n<p>Also, we now have two separate binaries:</p>\n<ul>\n<li><code>exex</code> is the server binary that will run the ExEx and the gRPC server.</li>\n<li><code>consumer</code> is the client binary that will connect to the server and receive notifications.</li>\n</ul>\n","isPage":false,"text":"\nLet&#x27;s create a new project. Don&#x27;t forget to provide the --lib flag to cargo new,\nbecause we will have two custom binaries in this project that we will create manually.\n$ cargo new --lib exex-remote\n$ cd exex-remote\nWe will also need a bunch of dependencies. Some of them you know from the Hello World chapter,\nbut some of specific to what we need now.\n[package]\nname = &quot;remote-exex&quot;\nversion = &quot;0.1.0&quot;\nedition = &quot;2021&quot;\n \n[dependencies]\n# reth\nreth = { git = &quot;https://github.com/paradigmxyz/reth.git&quot; }\nreth-exex = { git = &quot;https://github.com/paradigmxyz/reth.git&quot;, features = [&quot;serde&quot;] }\nreth-node-ethereum = { git = &quot;https://github.com/paradigmxyz/reth.git&quot; }\nreth-node-api = { git = &quot;https://github.com/paradigmxyz/reth.git&quot; }\nreth-tracing = { git = &quot;https://github.com/paradigmxyz/reth.git&quot; }\n \n# async\ntokio = { version = &quot;1&quot;, features = [&quot;full&quot;] }\ntokio-stream = &quot;0.1&quot;\nfutures-util = &quot;0.3&quot;\n \n# grpc\ntonic = &quot;0.11&quot;\nprost = &quot;0.12&quot;\nbincode = &quot;1&quot;\n \n# misc\neyre = &quot;0.6&quot;\n \n[build-dependencies]\ntonic-build = &quot;0.11&quot;\n \n[[bin]]\nname = &quot;exex_1&quot;\npath = &quot;src/exex_1.rs&quot;\n \n[[bin]]\nname = &quot;exex_2&quot;\npath = &quot;src/exex_2.rs&quot;\n \n[[bin]]\nname = &quot;exex_3&quot;\npath = &quot;src/exex_3.rs&quot;\n \n[[bin]]\nname = &quot;exex_4&quot;\npath = &quot;src/exex_4.rs&quot;\n \n[[bin]]\nname = &quot;exex&quot;\npath = &quot;src/exex.rs&quot;\n \n[[bin]]\nname = &quot;consumer&quot;\npath = &quot;src/consumer.rs&quot;\nWe also added a build dependency for Tonic. We will use it to generate the Rust code for our\nProtobuf definitions at compile time. Read more about using Tonic in the\nintroductory tutorial.\nAlso, we now have two separate binaries:\n\nexex is the server binary that will run the ExEx and the gRPC server.\nconsumer is the client binary that will connect to the server and receive notifications.\n\n","title":"Create a new project","titles":["Remote Execution Extensions"]},"271":{"href":"/developers/exex/remote#create-the-protobuf-definitions","html":"\n<p>In the root directory of your project (not <code>src</code>), create a new directory called <code>proto</code> and a file called <code>exex.proto</code>.</p>\n<p>We define a service called <code>RemoteExEx</code> that exposes a single method called <code>Subscribe</code>.\nThis method streams notifications to the client.</p>\n<div class=\"warning\"><p>A proper way to represent the notification would be to define all fields in the schema, but it goes beyond the scope\nof this chapter.</p><p>For an example of a full schema, see the <a href=\"https://github.com/paradigmxyz/reth-exex-examples/blob/1f74410740ac996276a84ee72003f4f9cf041491/remote/proto/exex.proto\">Remote ExEx</a> example.</p></div>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">syntax</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;proto3&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">service</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RemoteExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  rpc</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">stream</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">message</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SubscribeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">message</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  bytes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>To instruct Tonic to generate the Rust code using this <code>.proto</code>, add the following lines to your <code>lib.rs</code> file:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">pub</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> mod</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> proto</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">include_proto!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;exex&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nIn the root directory of your project (not src), create a new directory called proto and a file called exex.proto.\nWe define a service called RemoteExEx that exposes a single method called Subscribe.\nThis method streams notifications to the client.\nA proper way to represent the notification would be to define all fields in the schema, but it goes beyond the scope\nof this chapter.For an example of a full schema, see the Remote ExEx example.\nsyntax = &quot;proto3&quot;;\n \npackage exex;\n \nservice RemoteExEx {\n  rpc Subscribe(SubscribeRequest) returns (stream ExExNotification) {}\n}\n \nmessage SubscribeRequest {}\n \nmessage ExExNotification {\n  bytes data = 1;\n}\nTo instruct Tonic to generate the Rust code using this .proto, add the following lines to your lib.rs file:\npub mod proto {\n    tonic::include_proto!(&quot;exex&quot;);\n}\n","title":"Create the Protobuf definitions","titles":["Remote Execution Extensions","Create a new project"]},"272":{"href":"/developers/exex/remote#exex-and-grpc-server","html":"\n<p>We will now create the ExEx and the gRPC server in our <code>src/exex.rs</code> file.</p>\n","isPage":false,"text":"\nWe will now create the ExEx and the gRPC server in our src/exex.rs file.\n","title":"ExEx and gRPC server","titles":["Remote Execution Extensions"]},"273":{"href":"/developers/exex/remote#grpc-server","html":"\n<p>Let&#x27;s create a minimal gRPC server that listens on the port <code>:10000</code>, and spawn it using\nthe <a href=\"https://reth.rs/docs/reth/builder/struct.NodeBuilder.html\">NodeBuilder</a>&#x27;s <a href=\"https://reth.rs/docs/reth/tasks/struct.TaskExecutor.html\">task executor</a>.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> remote_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    remote_ex_ex_server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_ethereum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mpsc;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio_stream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">wrappers</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">#[tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">async_trait]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">impl</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RemoteExEx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> for</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SubscribeStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        &amp;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        _request</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (_tx, rx) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mpsc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">channel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rx)))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse_args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">run</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">builder, _</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">builder</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">add_service</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">serve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;[::1]:10000&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">unwrap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">());</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handle </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> builder</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">launch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">task_executor</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">spawn_critical</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to start gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">wait_for_node_exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>Currently, it does not send anything on the stream.\nWe need to create a communication channel between our future ExEx and this gRPC server\nto send new <code>ExExNotification</code> on it.</p>\n<p>Let&#x27;s create this channel in the <code>main</code> function where we will have both gRPC server and ExEx initiated,\nand save the sender part (that way we will be able to create new receivers) of this channel in our gRPC server.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> remote_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    remote_ex_ex_server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_ethereum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> std</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{broadcast, mpsc};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio_stream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">wrappers</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">#[expect(dead_code)]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Sender</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">#[tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">async_trait]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">impl</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RemoteExEx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> for</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SubscribeStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        &amp;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        _request</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (_tx, rx) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mpsc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">channel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rx)))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse_args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">run</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">builder, _</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">channel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">builder</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">add_service</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">clone</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">serve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;[::1]:10000&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">unwrap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">());</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handle </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> builder</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">launch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">task_executor</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">spawn_critical</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to start gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">wait_for_node_exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>And with that, we&#x27;re ready to handle incoming notifications, serialize them with <a href=\"https://docs.rs/bincode/\">bincode</a>\nand send back to the client.</p>\n<p>For each incoming request, we spawn a separate tokio task that will run in the background,\nand then return the stream receiver to the client.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> remote_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    remote_ex_ex_server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_ethereum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">info;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> std</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{broadcast, mpsc};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio_stream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">wrappers</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Sender</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// ANCHOR: snippet</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">#[tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">async_trait]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">impl</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RemoteExEx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> for</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SubscribeStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        &amp;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        _request</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (tx, rx) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mpsc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">channel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        tokio</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">spawn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            while</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">recv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> proto_notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    data</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> bincode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">serialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notification)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to serialize&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                };</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(proto_notification))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .await</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to send notification to client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Notification sent to the gRPC client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rx)))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// ANCHOR_END: snippet</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse_args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">run</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">builder, _</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">channel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">builder</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">add_service</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">clone</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">serve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;[::1]:10000&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">unwrap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">());</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handle </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> builder</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">launch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">task_executor</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">spawn_critical</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to start gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">wait_for_node_exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>That&#x27;s it for the gRPC server part! It doesn&#x27;t receive anything on the <code>notifications</code> channel yet,\nbut we will fix it with our ExEx.</p>\n","isPage":false,"text":"\nLet&#x27;s create a minimal gRPC server that listens on the port :10000, and spawn it using\nthe NodeBuilder&#x27;s task executor.\nuse remote_exex::proto::{\n    self,\n    remote_ex_ex_server::{RemoteExEx, RemoteExExServer},\n};\nuse reth_node_ethereum::EthereumNode;\nuse tokio::sync::mpsc;\nuse tokio_stream::wrappers::ReceiverStream;\nuse tonic::{transport::Server, Request, Response, Status};\n \nstruct ExExService {}\n \n#[tonic::async_trait]\nimpl RemoteExEx for ExExService {\n    type SubscribeStream = ReceiverStream&lt;Result&lt;proto::ExExNotification, Status&gt;&gt;;\n \n    async fn subscribe(\n        &amp;self,\n        _request: Request&lt;proto::SubscribeRequest&gt;,\n    ) -&gt; Result&lt;Response&lt;Self::SubscribeStream&gt;, Status&gt; {\n        let (_tx, rx) = mpsc::channel(1);\n \n        Ok(Response::new(ReceiverStream::new(rx)))\n    }\n}\n \nfn main() -&gt; eyre::Result&lt;()&gt; {\n    reth::cli::Cli::parse_args().run(|builder, _| async move {\n        let server = Server::builder()\n            .add_service(RemoteExExServer::new(ExExService {}))\n            .serve(&quot;[::1]:10000&quot;.parse().unwrap());\n \n        let handle = builder.node(EthereumNode::default()).launch().await?;\n \n        handle.node.task_executor.spawn_critical(&quot;gRPC server&quot;, async move {\n            server.await.expect(&quot;failed to start gRPC server&quot;)\n        });\n \n        handle.wait_for_node_exit().await\n    })\n}\nCurrently, it does not send anything on the stream.\nWe need to create a communication channel between our future ExEx and this gRPC server\nto send new ExExNotification on it.\nLet&#x27;s create this channel in the main function where we will have both gRPC server and ExEx initiated,\nand save the sender part (that way we will be able to create new receivers) of this channel in our gRPC server.\nuse remote_exex::proto::{\n    self,\n    remote_ex_ex_server::{RemoteExEx, RemoteExExServer},\n};\nuse reth_exex::ExExNotification;\nuse reth_node_ethereum::EthereumNode;\nuse std::sync::Arc;\nuse tokio::sync::{broadcast, mpsc};\nuse tokio_stream::wrappers::ReceiverStream;\nuse tonic::{transport::Server, Request, Response, Status};\n \n#[expect(dead_code)]\nstruct ExExService {\n    notifications: Arc&lt;broadcast::Sender&lt;ExExNotification&gt;&gt;,\n}\n \n#[tonic::async_trait]\nimpl RemoteExEx for ExExService {\n    type SubscribeStream = ReceiverStream&lt;Result&lt;proto::ExExNotification, Status&gt;&gt;;\n \n    async fn subscribe(\n        &amp;self,\n        _request: Request&lt;proto::SubscribeRequest&gt;,\n    ) -&gt; Result&lt;Response&lt;Self::SubscribeStream&gt;, Status&gt; {\n        let (_tx, rx) = mpsc::channel(1);\n \n        Ok(Response::new(ReceiverStream::new(rx)))\n    }\n}\n \nfn main() -&gt; eyre::Result&lt;()&gt; {\n    reth::cli::Cli::parse_args().run(|builder, _| async move {\n        let notifications = Arc::new(broadcast::channel(1).0);\n \n        let server = Server::builder()\n            .add_service(RemoteExExServer::new(ExExService {\n                notifications: notifications.clone(),\n            }))\n            .serve(&quot;[::1]:10000&quot;.parse().unwrap());\n \n        let handle = builder.node(EthereumNode::default()).launch().await?;\n \n        handle.node.task_executor.spawn_critical(&quot;gRPC server&quot;, async move {\n            server.await.expect(&quot;failed to start gRPC server&quot;)\n        });\n \n        handle.wait_for_node_exit().await\n    })\n}\nAnd with that, we&#x27;re ready to handle incoming notifications, serialize them with bincode\nand send back to the client.\nFor each incoming request, we spawn a separate tokio task that will run in the background,\nand then return the stream receiver to the client.\nuse remote_exex::proto::{\n    self,\n    remote_ex_ex_server::{RemoteExEx, RemoteExExServer},\n};\nuse reth_exex::ExExNotification;\nuse reth_node_ethereum::EthereumNode;\nuse reth_tracing::tracing::info;\nuse std::sync::Arc;\nuse tokio::sync::{broadcast, mpsc};\nuse tokio_stream::wrappers::ReceiverStream;\nuse tonic::{transport::Server, Request, Response, Status};\n \nstruct ExExService {\n    notifications: Arc&lt;broadcast::Sender&lt;ExExNotification&gt;&gt;,\n}\n \n// ANCHOR: snippet\n#[tonic::async_trait]\nimpl RemoteExEx for ExExService {\n    type SubscribeStream = ReceiverStream&lt;Result&lt;proto::ExExNotification, Status&gt;&gt;;\n \n    async fn subscribe(\n        &amp;self,\n        _request: Request&lt;proto::SubscribeRequest&gt;,\n    ) -&gt; Result&lt;Response&lt;Self::SubscribeStream&gt;, Status&gt; {\n        let (tx, rx) = mpsc::channel(1);\n \n        let mut notifications = self.notifications.subscribe();\n        tokio::spawn(async move {\n            while let Ok(notification) = notifications.recv().await {\n                let proto_notification = proto::ExExNotification {\n                    data: bincode::serialize(&amp;notification).expect(&quot;failed to serialize&quot;),\n                };\n                tx.send(Ok(proto_notification))\n                    .await\n                    .expect(&quot;failed to send notification to client&quot;);\n \n                info!(&quot;Notification sent to the gRPC client&quot;);\n            }\n        });\n \n        Ok(Response::new(ReceiverStream::new(rx)))\n    }\n}\n// ANCHOR_END: snippet\n \nfn main() -&gt; eyre::Result&lt;()&gt; {\n    reth::cli::Cli::parse_args().run(|builder, _| async move {\n        let notifications = Arc::new(broadcast::channel(1).0);\n \n        let server = Server::builder()\n            .add_service(RemoteExExServer::new(ExExService {\n                notifications: notifications.clone(),\n            }))\n            .serve(&quot;[::1]:10000&quot;.parse().unwrap());\n \n        let handle = builder.node(EthereumNode::default()).launch().await?;\n \n        handle.node.task_executor.spawn_critical(&quot;gRPC server&quot;, async move {\n            server.await.expect(&quot;failed to start gRPC server&quot;)\n        });\n \n        handle.wait_for_node_exit().await\n    })\n}\nThat&#x27;s it for the gRPC server part! It doesn&#x27;t receive anything on the notifications channel yet,\nbut we will fix it with our ExEx.\n","title":"gRPC server","titles":["Remote Execution Extensions","ExEx and gRPC server"]},"274":{"href":"/developers/exex/remote#exex","html":"\n<p>Now, let&#x27;s define the ExEx part of our binary.</p>\n<p>Our ExEx accepts a <code>notifications</code> channel and redirects all incoming <code>ExExNotification</code>s to it.</p>\n<div class=\"warning\"><p>Don&#x27;t forget to emit <code>ExExEvent::FinishedHeight</code></p></div>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> futures_util</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TryStreamExt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> remote_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    remote_ex_ex_server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">builder</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_api</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_ethereum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">info;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> std</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{broadcast, mpsc};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio_stream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">wrappers</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Sender</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">#[tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">async_trait]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">impl</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RemoteExEx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> for</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SubscribeStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        &amp;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        _request</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (tx, rx) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mpsc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">channel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        tokio</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">spawn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            while</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">recv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> proto_notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    data</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> bincode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">serialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notification)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to serialize&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                };</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(proto_notification))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .await</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to send notification to client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Notification sent to the gRPC client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rx)))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// ANCHOR: snippet</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">#[expect(dead_code)]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> remote_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Types</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Sender</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    while</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">try_next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">committed_chain</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">events</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FinishedHeight</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">tip</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">num_hash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()))</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Notification sent to the gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// ANCHOR_END: snippet</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse_args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">run</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">builder, _</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">channel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">builder</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">add_service</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">clone</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">serve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;[::1]:10000&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">unwrap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">());</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handle </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> builder</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">launch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">task_executor</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">spawn_critical</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to start gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">wait_for_node_exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>All that&#x27;s left is to connect all pieces together: install our ExEx in the node and pass the sender part\nof communication channel to it.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> futures_util</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TryStreamExt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> remote_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    remote_ex_ex_server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">builder</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_api</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_ethereum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">info;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> std</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{broadcast, mpsc};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio_stream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">wrappers</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Sender</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">#[tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">async_trait]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">impl</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RemoteExEx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> for</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SubscribeStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        &amp;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        _request</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (tx, rx) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mpsc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">channel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        tokio</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">spawn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            while</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">recv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> proto_notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    data</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> bincode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">serialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notification)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to serialize&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                };</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(proto_notification))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .await</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to send notification to client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Notification sent to the gRPC client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rx)))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> remote_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Types</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Sender</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    while</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">try_next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">committed_chain</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">events</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FinishedHeight</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">tip</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">num_hash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()))</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Notification sent to the gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// ANCHOR: snippet</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse_args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">run</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">builder, _</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">channel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">builder</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">add_service</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">clone</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">serve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;[::1]:10000&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">unwrap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">());</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handle </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> builder</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">install_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;remote-exex&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">remote_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, notifications)) })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">launch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">task_executor</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">spawn_critical</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to start gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">wait_for_node_exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// ANCHOR_END: snippet</span></span></code></pre>\n","isPage":false,"text":"\nNow, let&#x27;s define the ExEx part of our binary.\nOur ExEx accepts a notifications channel and redirects all incoming ExExNotifications to it.\nDon&#x27;t forget to emit ExExEvent::FinishedHeight\nuse futures_util::TryStreamExt;\nuse remote_exex::proto::{\n    self,\n    remote_ex_ex_server::{RemoteExEx, RemoteExExServer},\n};\nuse reth::{builder::NodeTypes, primitives::EthPrimitives};\nuse reth_exex::{ExExContext, ExExEvent, ExExNotification};\nuse reth_node_api::FullNodeComponents;\nuse reth_node_ethereum::EthereumNode;\nuse reth_tracing::tracing::info;\nuse std::sync::Arc;\nuse tokio::sync::{broadcast, mpsc};\nuse tokio_stream::wrappers::ReceiverStream;\nuse tonic::{transport::Server, Request, Response, Status};\n \nstruct ExExService {\n    notifications: Arc&lt;broadcast::Sender&lt;ExExNotification&gt;&gt;,\n}\n \n#[tonic::async_trait]\nimpl RemoteExEx for ExExService {\n    type SubscribeStream = ReceiverStream&lt;Result&lt;proto::ExExNotification, Status&gt;&gt;;\n \n    async fn subscribe(\n        &amp;self,\n        _request: Request&lt;proto::SubscribeRequest&gt;,\n    ) -&gt; Result&lt;Response&lt;Self::SubscribeStream&gt;, Status&gt; {\n        let (tx, rx) = mpsc::channel(1);\n \n        let mut notifications = self.notifications.subscribe();\n        tokio::spawn(async move {\n            while let Ok(notification) = notifications.recv().await {\n                let proto_notification = proto::ExExNotification {\n                    data: bincode::serialize(&amp;notification).expect(&quot;failed to serialize&quot;),\n                };\n                tx.send(Ok(proto_notification))\n                    .await\n                    .expect(&quot;failed to send notification to client&quot;);\n \n                info!(&quot;Notification sent to the gRPC client&quot;);\n            }\n        });\n \n        Ok(Response::new(ReceiverStream::new(rx)))\n    }\n}\n \n// ANCHOR: snippet\n#[expect(dead_code)]\nasync fn remote_exex&lt;Node: FullNodeComponents&lt;Types: NodeTypes&lt;Primitives = EthPrimitives&gt;&gt;&gt;(\n    mut ctx: ExExContext&lt;Node&gt;,\n    notifications: Arc&lt;broadcast::Sender&lt;ExExNotification&gt;&gt;,\n) -&gt; eyre::Result&lt;()&gt; {\n    while let Some(notification) = ctx.notifications.try_next().await? {\n        if let Some(committed_chain) = notification.committed_chain() {\n            ctx.events.send(ExExEvent::FinishedHeight(committed_chain.tip().num_hash()))?;\n        }\n \n        info!(&quot;Notification sent to the gRPC server&quot;);\n        let _ = notifications.send(notification);\n    }\n \n    Ok(())\n}\n// ANCHOR_END: snippet\n \nfn main() -&gt; eyre::Result&lt;()&gt; {\n    reth::cli::Cli::parse_args().run(|builder, _| async move {\n        let notifications = Arc::new(broadcast::channel(1).0);\n \n        let server = Server::builder()\n            .add_service(RemoteExExServer::new(ExExService {\n                notifications: notifications.clone(),\n            }))\n            .serve(&quot;[::1]:10000&quot;.parse().unwrap());\n \n        let handle = builder.node(EthereumNode::default()).launch().await?;\n \n        handle.node.task_executor.spawn_critical(&quot;gRPC server&quot;, async move {\n            server.await.expect(&quot;failed to start gRPC server&quot;)\n        });\n \n        handle.wait_for_node_exit().await\n    })\n}\nAll that&#x27;s left is to connect all pieces together: install our ExEx in the node and pass the sender part\nof communication channel to it.\nuse futures_util::TryStreamExt;\nuse remote_exex::proto::{\n    self,\n    remote_ex_ex_server::{RemoteExEx, RemoteExExServer},\n};\nuse reth::{builder::NodeTypes, primitives::EthPrimitives};\nuse reth_exex::{ExExContext, ExExEvent, ExExNotification};\nuse reth_node_api::FullNodeComponents;\nuse reth_node_ethereum::EthereumNode;\nuse reth_tracing::tracing::info;\nuse std::sync::Arc;\nuse tokio::sync::{broadcast, mpsc};\nuse tokio_stream::wrappers::ReceiverStream;\nuse tonic::{transport::Server, Request, Response, Status};\n \nstruct ExExService {\n    notifications: Arc&lt;broadcast::Sender&lt;ExExNotification&gt;&gt;,\n}\n \n#[tonic::async_trait]\nimpl RemoteExEx for ExExService {\n    type SubscribeStream = ReceiverStream&lt;Result&lt;proto::ExExNotification, Status&gt;&gt;;\n \n    async fn subscribe(\n        &amp;self,\n        _request: Request&lt;proto::SubscribeRequest&gt;,\n    ) -&gt; Result&lt;Response&lt;Self::SubscribeStream&gt;, Status&gt; {\n        let (tx, rx) = mpsc::channel(1);\n \n        let mut notifications = self.notifications.subscribe();\n        tokio::spawn(async move {\n            while let Ok(notification) = notifications.recv().await {\n                let proto_notification = proto::ExExNotification {\n                    data: bincode::serialize(&amp;notification).expect(&quot;failed to serialize&quot;),\n                };\n                tx.send(Ok(proto_notification))\n                    .await\n                    .expect(&quot;failed to send notification to client&quot;);\n \n                info!(&quot;Notification sent to the gRPC client&quot;);\n            }\n        });\n \n        Ok(Response::new(ReceiverStream::new(rx)))\n    }\n}\n \nasync fn remote_exex&lt;Node: FullNodeComponents&lt;Types: NodeTypes&lt;Primitives = EthPrimitives&gt;&gt;&gt;(\n    mut ctx: ExExContext&lt;Node&gt;,\n    notifications: Arc&lt;broadcast::Sender&lt;ExExNotification&gt;&gt;,\n) -&gt; eyre::Result&lt;()&gt; {\n    while let Some(notification) = ctx.notifications.try_next().await? {\n        if let Some(committed_chain) = notification.committed_chain() {\n            ctx.events.send(ExExEvent::FinishedHeight(committed_chain.tip().num_hash()))?;\n        }\n \n        info!(&quot;Notification sent to the gRPC server&quot;);\n        let _ = notifications.send(notification);\n    }\n \n    Ok(())\n}\n \n// ANCHOR: snippet\nfn main() -&gt; eyre::Result&lt;()&gt; {\n    reth::cli::Cli::parse_args().run(|builder, _| async move {\n        let notifications = Arc::new(broadcast::channel(1).0);\n \n        let server = Server::builder()\n            .add_service(RemoteExExServer::new(ExExService {\n                notifications: notifications.clone(),\n            }))\n            .serve(&quot;[::1]:10000&quot;.parse().unwrap());\n \n        let handle = builder\n            .node(EthereumNode::default())\n            .install_exex(&quot;remote-exex&quot;, |ctx| async move { Ok(remote_exex(ctx, notifications)) })\n            .launch()\n            .await?;\n \n        handle.node.task_executor.spawn_critical(&quot;gRPC server&quot;, async move {\n            server.await.expect(&quot;failed to start gRPC server&quot;)\n        });\n \n        handle.wait_for_node_exit().await\n    })\n}\n// ANCHOR_END: snippet\n","title":"ExEx","titles":["Remote Execution Extensions","ExEx and gRPC server"]},"275":{"href":"/developers/exex/remote#full-exexrs-code","html":"\n<details><summary>Click to expand</summary><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> futures_util</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TryStreamExt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> remote_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    remote_ex_ex_server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">builder</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_api</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_ethereum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">info;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> std</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{broadcast, mpsc};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tokio_stream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">wrappers</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Sender</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">#[tonic</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">async_trait]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">impl</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RemoteExEx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> for</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SubscribeStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ReceiverStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        &amp;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        _request</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeStream</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Status</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (tx, rx) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mpsc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">channel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        tokio</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">spawn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            while</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">recv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> proto_notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    data</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> bincode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">serialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notification)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to serialize&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                };</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(proto_notification))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .await</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to send notification to client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Notification sent to the gRPC client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Response</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReceiverStream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rx)))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> remote_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Types</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Sender</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    while</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">try_next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">committed_chain</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">events</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FinishedHeight</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">tip</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">num_hash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()))</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Notification sent to the gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// ANCHOR: snippet</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse_args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">run</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">builder, _</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Arc</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">broadcast</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">channel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">builder</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">add_service</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExServer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExService</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">clone</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">serve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;[::1]:10000&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">unwrap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">());</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handle </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> builder</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">install_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;remote-exex&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">remote_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, notifications)) })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">launch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">task_executor</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">spawn_critical</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            server</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">expect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to start gRPC server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">wait_for_node_exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// ANCHOR_END: snippet</span></span></code></pre></details>\n","isPage":false,"text":"\nClick to expanduse futures_util::TryStreamExt;\nuse remote_exex::proto::{\n    self,\n    remote_ex_ex_server::{RemoteExEx, RemoteExExServer},\n};\nuse reth::{builder::NodeTypes, primitives::EthPrimitives};\nuse reth_exex::{ExExContext, ExExEvent, ExExNotification};\nuse reth_node_api::FullNodeComponents;\nuse reth_node_ethereum::EthereumNode;\nuse reth_tracing::tracing::info;\nuse std::sync::Arc;\nuse tokio::sync::{broadcast, mpsc};\nuse tokio_stream::wrappers::ReceiverStream;\nuse tonic::{transport::Server, Request, Response, Status};\n \nstruct ExExService {\n    notifications: Arc&lt;broadcast::Sender&lt;ExExNotification&gt;&gt;,\n}\n \n#[tonic::async_trait]\nimpl RemoteExEx for ExExService {\n    type SubscribeStream = ReceiverStream&lt;Result&lt;proto::ExExNotification, Status&gt;&gt;;\n \n    async fn subscribe(\n        &amp;self,\n        _request: Request&lt;proto::SubscribeRequest&gt;,\n    ) -&gt; Result&lt;Response&lt;Self::SubscribeStream&gt;, Status&gt; {\n        let (tx, rx) = mpsc::channel(1);\n \n        let mut notifications = self.notifications.subscribe();\n        tokio::spawn(async move {\n            while let Ok(notification) = notifications.recv().await {\n                let proto_notification = proto::ExExNotification {\n                    data: bincode::serialize(&amp;notification).expect(&quot;failed to serialize&quot;),\n                };\n                tx.send(Ok(proto_notification))\n                    .await\n                    .expect(&quot;failed to send notification to client&quot;);\n \n                info!(&quot;Notification sent to the gRPC client&quot;);\n            }\n        });\n \n        Ok(Response::new(ReceiverStream::new(rx)))\n    }\n}\n \nasync fn remote_exex&lt;Node: FullNodeComponents&lt;Types: NodeTypes&lt;Primitives = EthPrimitives&gt;&gt;&gt;(\n    mut ctx: ExExContext&lt;Node&gt;,\n    notifications: Arc&lt;broadcast::Sender&lt;ExExNotification&gt;&gt;,\n) -&gt; eyre::Result&lt;()&gt; {\n    while let Some(notification) = ctx.notifications.try_next().await? {\n        if let Some(committed_chain) = notification.committed_chain() {\n            ctx.events.send(ExExEvent::FinishedHeight(committed_chain.tip().num_hash()))?;\n        }\n \n        info!(&quot;Notification sent to the gRPC server&quot;);\n        let _ = notifications.send(notification);\n    }\n \n    Ok(())\n}\n \n// ANCHOR: snippet\nfn main() -&gt; eyre::Result&lt;()&gt; {\n    reth::cli::Cli::parse_args().run(|builder, _| async move {\n        let notifications = Arc::new(broadcast::channel(1).0);\n \n        let server = Server::builder()\n            .add_service(RemoteExExServer::new(ExExService {\n                notifications: notifications.clone(),\n            }))\n            .serve(&quot;[::1]:10000&quot;.parse().unwrap());\n \n        let handle = builder\n            .node(EthereumNode::default())\n            .install_exex(&quot;remote-exex&quot;, |ctx| async move { Ok(remote_exex(ctx, notifications)) })\n            .launch()\n            .await?;\n \n        handle.node.task_executor.spawn_critical(&quot;gRPC server&quot;, async move {\n            server.await.expect(&quot;failed to start gRPC server&quot;)\n        });\n \n        handle.wait_for_node_exit().await\n    })\n}\n// ANCHOR_END: snippet\n","title":"Full exex.rs code","titles":["Remote Execution Extensions","ExEx and gRPC server"]},"276":{"href":"/developers/exex/remote#consumer","html":"\n<p>Consumer will be a much simpler binary that just connects to our gRPC server and prints out all the notifications\nit receives.</p>\n<div class=\"warning\"><p>We need to increase maximum message encoding and decoding sizes to <code>usize::MAX</code>,\nbecause notifications can get very heavy</p></div>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> remote_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">proto</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">remote_ex_ex_client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RemoteExExClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">info, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RethTracer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tracer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">#[tokio</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">main]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RethTracer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">init</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    let</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RemoteExExClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://[::1]:10000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        .await?</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">max_encoding_message_size</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">usize</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">MAX</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">max_decoding_message_size</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">usize</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">MAX</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    let</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> stream </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscribeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {})</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await?.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">into_inner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    while</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> stream</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">message</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExNotification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> bincode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">deserialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">data)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        match</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            ExExNotification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChainCommitted</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { new } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">new</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received commit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            ExExNotification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChainReorged</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { old, new } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(from_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">old</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), to_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">new</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received reorg&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            ExExNotification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChainReverted</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { old } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(reverted_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">old</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received revert&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        };</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nConsumer will be a much simpler binary that just connects to our gRPC server and prints out all the notifications\nit receives.\nWe need to increase maximum message encoding and decoding sizes to usize::MAX,\nbecause notifications can get very heavy\nuse remote_exex::proto::{remote_ex_ex_client::RemoteExExClient, SubscribeRequest};\nuse reth_exex::ExExNotification;\nuse reth_tracing::{tracing::info, RethTracer, Tracer};\n \n#[tokio::main]\nasync fn main() -&gt; eyre::Result&lt;()&gt; {\n    let _ = RethTracer::new().init()?;\n \n    let mut client = RemoteExExClient::connect(&quot;http://[::1]:10000&quot;)\n        .await?\n        .max_encoding_message_size(usize::MAX)\n        .max_decoding_message_size(usize::MAX);\n \n    let mut stream = client.subscribe(SubscribeRequest {}).await?.into_inner();\n    while let Some(notification) = stream.message().await? {\n        let notification: ExExNotification = bincode::deserialize(&amp;notification.data)?;\n \n        match notification {\n            ExExNotification::ChainCommitted { new } =&gt; {\n                info!(committed_chain = ?new.range(), &quot;Received commit&quot;);\n            }\n            ExExNotification::ChainReorged { old, new } =&gt; {\n                info!(from_chain = ?old.range(), to_chain = ?new.range(), &quot;Received reorg&quot;);\n            }\n            ExExNotification::ChainReverted { old } =&gt; {\n                info!(reverted_chain = ?old.range(), &quot;Received revert&quot;);\n            }\n        };\n    }\n \n    Ok(())\n}\n","title":"Consumer","titles":["Remote Execution Extensions"]},"277":{"href":"/developers/exex/remote#running","html":"\n<p>In one terminal window, we will run our ExEx and gRPC server. It will start syncing Reth on the Holesky chain\nand use Etherscan in place of a real Consensus Client. Make sure to have <code>ETHERSCAN_API_KEY</code> on your env.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">export ETHERSCAN_API_KEY={YOUR_API_KEY} &amp;&amp; cargo run --bin exex --release -- node --chain holesky --debug.etherscan</span></span></code></pre>\n<p>And in the other, we will run our consumer:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cargo run --bin consumer --release</span></span></code></pre>\n<p><img src=\"/remote_exex.png\" alt=\"remote_exex\"/></p>","isPage":false,"text":"\nIn one terminal window, we will run our ExEx and gRPC server. It will start syncing Reth on the Holesky chain\nand use Etherscan in place of a real Consensus Client. Make sure to have ETHERSCAN_API_KEY on your env.\nexport ETHERSCAN_API_KEY={YOUR_API_KEY} &amp;&amp; cargo run --bin exex --release -- node --chain holesky --debug.etherscan\nAnd in the other, we will run our consumer:\ncargo run --bin consumer --release\n","title":"Running","titles":["Remote Execution Extensions"]},"278":{"href":"/developers/exex/tracking-state#tracking-state","html":"</header>\n<p>In this chapter, we&#x27;ll learn how to keep track of some state inside our ExEx.</p>\n<p>Let&#x27;s continue with our Hello World example from the <a href=\"./hello-world\">previous chapter</a>.</p>\n","isPage":true,"text":"\nIn this chapter, we&#x27;ll learn how to keep track of some state inside our ExEx.\nLet&#x27;s continue with our Hello World example from the previous chapter.\n","title":"Tracking State","titles":[]},"279":{"href":"/developers/exex/tracking-state#turning-exex-into-a-struct","html":"\n<p>First, we need to turn our ExEx into a stateful struct.</p>\n<p>Before, we had just an async function, but now we&#x27;ll need to implement\nthe <a href=\"https://doc.rust-lang.org/std/future/trait.Future.html\"><code>Future</code></a> trait manually.</p>\n<div class=\"warning\"><p>Having a stateful async function is also possible, but it makes testing harder,\nbecause you can&#x27;t access variables inside the function to assert the state of your ExEx.</p></div>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> std</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    future</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Future</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    pin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Pin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    task</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{ready, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Poll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> futures_util</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FutureExt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TryStreamExt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">api</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">builder</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_ethereum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">info;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MyExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">impl</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Types</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;&gt; </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Future</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MyExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Output</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt;;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> poll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Pin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;mut</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> Self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, cx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;mut</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;&#x27;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">_</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Poll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Output</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> this </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">get_mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        while</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> ready!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(this</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">try_next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">poll_unpin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(cx))</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            match</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notification {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">                ExExNotification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChainCommitted</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { new } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                    info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">new</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received commit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                }</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">                ExExNotification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChainReorged</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { old, new } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                    info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(from_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">old</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), to_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">new</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received reorg&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                }</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">                ExExNotification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ChainReverted</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { old } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                    info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(reverted_chain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">old</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received revert&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            };</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">committed_chain</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                this</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">events</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FinishedHeight</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">tip</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">num_hash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()))</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        Poll</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Ready</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(()))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse_args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">run</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">builder, _</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handle </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> builder</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">install_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;my-exex&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MyExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { ctx }))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">launch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">wait_for_node_exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>For those who are not familiar with how async Rust works on a lower level, that may seem scary,\nbut let&#x27;s unpack what&#x27;s going on here:</p>\n<ol>\n<li>Our ExEx is now a <code>struct</code> that contains the context and implements the <code>Future</code> trait. It&#x27;s now pollable (hence <code>await</code>-able).</li>\n<li>We can&#x27;t use <code>self</code> directly inside our <code>poll</code> method, and instead need to acquire a mutable reference to the data inside of the <code>Pin</code>.\nRead more about pinning in <a href=\"https://rust-lang.github.io/async-book/04_pinning/01_chapter.html\">the book</a>.</li>\n<li>We also can&#x27;t use <code>await</code> directly inside <code>poll</code>, and instead need to poll futures manually.\nWe wrap the call to <code>poll_recv(cx)</code> into a <a href=\"https://doc.rust-lang.org/std/task/macro.ready.html\"><code>ready!</code></a> macro,\nso that if the channel of notifications has no value ready, we will instantly return <code>Poll::Pending</code> from our Future.</li>\n<li>We initialize and return the <code>MyExEx</code> struct directly in the <code>install_exex</code> method, because it&#x27;s a Future.</li>\n</ol>\n<p>With all that done, we&#x27;re now free to add more fields to our <code>MyExEx</code> struct, and track some state in them.</p>\n","isPage":false,"text":"\nFirst, we need to turn our ExEx into a stateful struct.\nBefore, we had just an async function, but now we&#x27;ll need to implement\nthe Future trait manually.\nHaving a stateful async function is also possible, but it makes testing harder,\nbecause you can&#x27;t access variables inside the function to assert the state of your ExEx.\nuse std::{\n    future::Future,\n    pin::Pin,\n    task::{ready, Context, Poll},\n};\n \nuse futures_util::{FutureExt, TryStreamExt};\nuse reth::{api::FullNodeComponents, builder::NodeTypes, primitives::EthPrimitives};\nuse reth_exex::{ExExContext, ExExEvent, ExExNotification};\nuse reth_node_ethereum::EthereumNode;\nuse reth_tracing::tracing::info;\n \nstruct MyExEx&lt;Node: FullNodeComponents&gt; {\n    ctx: ExExContext&lt;Node&gt;,\n}\n \nimpl&lt;Node: FullNodeComponents&lt;Types: NodeTypes&lt;Primitives = EthPrimitives&gt;&gt;&gt; Future\n    for MyExEx&lt;Node&gt;\n{\n    type Output = eyre::Result&lt;()&gt;;\n \n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context&lt;&#x27;_&gt;) -&gt; Poll&lt;Self::Output&gt; {\n        let this = self.get_mut();\n \n        while let Some(notification) = ready!(this.ctx.notifications.try_next().poll_unpin(cx))? {\n            match &amp;notification {\n                ExExNotification::ChainCommitted { new } =&gt; {\n                    info!(committed_chain = ?new.range(), &quot;Received commit&quot;);\n                }\n                ExExNotification::ChainReorged { old, new } =&gt; {\n                    info!(from_chain = ?old.range(), to_chain = ?new.range(), &quot;Received reorg&quot;);\n                }\n                ExExNotification::ChainReverted { old } =&gt; {\n                    info!(reverted_chain = ?old.range(), &quot;Received revert&quot;);\n                }\n            };\n \n            if let Some(committed_chain) = notification.committed_chain() {\n                this.ctx\n                    .events\n                    .send(ExExEvent::FinishedHeight(committed_chain.tip().num_hash()))?;\n            }\n        }\n \n        Poll::Ready(Ok(()))\n    }\n}\n \nfn main() -&gt; eyre::Result&lt;()&gt; {\n    reth::cli::Cli::parse_args().run(async move |builder, _| {\n        let handle = builder\n            .node(EthereumNode::default())\n            .install_exex(&quot;my-exex&quot;, async move |ctx| Ok(MyExEx { ctx }))\n            .launch()\n            .await?;\n \n        handle.wait_for_node_exit().await\n    })\n}\nFor those who are not familiar with how async Rust works on a lower level, that may seem scary,\nbut let&#x27;s unpack what&#x27;s going on here:\n\nOur ExEx is now a struct that contains the context and implements the Future trait. It&#x27;s now pollable (hence await-able).\nWe can&#x27;t use self directly inside our poll method, and instead need to acquire a mutable reference to the data inside of the Pin.\nRead more about pinning in the book.\nWe also can&#x27;t use await directly inside poll, and instead need to poll futures manually.\nWe wrap the call to poll_recv(cx) into a ready! macro,\nso that if the channel of notifications has no value ready, we will instantly return Poll::Pending from our Future.\nWe initialize and return the MyExEx struct directly in the install_exex method, because it&#x27;s a Future.\n\nWith all that done, we&#x27;re now free to add more fields to our MyExEx struct, and track some state in them.\n","title":"Turning ExEx into a struct","titles":["Tracking State",null]},"280":{"href":"/developers/exex/tracking-state#adding-state","html":"\n<p>Our ExEx will count the number of transactions in each block and log it to the console.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> std</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    future</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Future</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    pin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Pin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    task</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{ready, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Poll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> alloy_primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">BlockNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> futures_util</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FutureExt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TryStreamExt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    api</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">BlockBody</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    builder</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_exex</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_node_ethereum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">use</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> reth_tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tracing</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">info;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MyExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// First block that was committed since the start of the ExEx.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    first_block</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Option</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">BlockNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// Total number of transactions committed.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    transactions</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">impl</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MyExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ExExContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> Self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">        Self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { ctx, first_block</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> None</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, transactions</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">impl</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FullNodeComponents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Types</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NodeTypes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Primitives</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EthPrimitives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;&gt; </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Future</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MyExEx</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Output</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt;;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> poll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Pin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;mut</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> Self</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, cx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;mut</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;&#x27;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">_</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Poll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">Self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Output</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> this </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> self</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">get_mut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        while</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> ready!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(this</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">try_next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">poll_unpin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(cx))</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(reverted_chain) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">reverted_chain</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                this</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">transactions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> this</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">transactions</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">saturating_sub</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    reverted_chain</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">blocks_iter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">b</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> b</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">body</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">transaction_count</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">as</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                );</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">committed_chain</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                this</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">first_block</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">get_or_insert</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">first</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">number);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                this</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">transactions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> committed_chain</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">blocks_iter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">b</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> b</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">body</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">transaction_count</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">as</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sum</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;();</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                this</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">events</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ExExEvent</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FinishedHeight</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(committed_chain</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">tip</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">num_hash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()))</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> let</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Some</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(first_block) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> this</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">first_block {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                info!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">%</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">first_block, transactions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> %</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">this</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">transactions, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Total number of transactions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        Poll</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Ready</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(()))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">fn</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-&gt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> eyre</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Result</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;()&gt; {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    reth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Cli</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">parse_args</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">run</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">builder, _</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        let</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handle </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> builder</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">node</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EthereumNode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">install_exex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;my-exex&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> move</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Ok</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MyExEx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">launch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            .await?</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handle</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">wait_for_node_exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">.await</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>As you can see, we added two fields to our ExEx struct:</p>\n<ul>\n<li><code>first_block</code> to keep track of the first block that was committed since the start of the ExEx.</li>\n<li><code>transactions</code> to keep track of the total number of transactions committed, accounting for reorgs and reverts.</li>\n</ul>\n<p>We also changed our <code>match</code> block to two <code>if</code> clauses:</p>\n<ul>\n<li>First one checks if there&#x27;s a reverted chain using <code>notification.reverted_chain()</code>. If there is:\n<ul>\n<li>We subtract the number of transactions in the reverted chain from the total number of transactions.</li>\n<li>It&#x27;s important to do the <code>saturating_sub</code> here, because if we just started our node and\ninstantly received a reorg, our <code>transactions</code> field will still be zero.</li>\n</ul>\n</li>\n<li>Second one checks if there&#x27;s a committed chain using <code>notification.committed_chain()</code>. If there is:\n<ul>\n<li>We update the <code>first_block</code> field to the first block of the committed chain.</li>\n<li>We add the number of transactions in the committed chain to the total number of transactions.</li>\n<li>We send a <code>FinishedHeight</code> event back to the main node.</li>\n</ul>\n</li>\n</ul>\n<p>Finally, on every notification, we log the total number of transactions and\nthe first block that was committed since the start of the ExEx.</p>","isPage":false,"text":"\nOur ExEx will count the number of transactions in each block and log it to the console.\nuse std::{\n    future::Future,\n    pin::Pin,\n    task::{ready, Context, Poll},\n};\n \nuse alloy_primitives::BlockNumber;\nuse futures_util::{FutureExt, TryStreamExt};\nuse reth::{\n    api::{BlockBody, FullNodeComponents},\n    builder::NodeTypes,\n    primitives::EthPrimitives,\n};\nuse reth_exex::{ExExContext, ExExEvent};\nuse reth_node_ethereum::EthereumNode;\nuse reth_tracing::tracing::info;\n \nstruct MyExEx&lt;Node: FullNodeComponents&gt; {\n    ctx: ExExContext&lt;Node&gt;,\n    /// First block that was committed since the start of the ExEx.\n    first_block: Option&lt;BlockNumber&gt;,\n    /// Total number of transactions committed.\n    transactions: u64,\n}\n \nimpl&lt;Node: FullNodeComponents&gt; MyExEx&lt;Node&gt; {\n    fn new(ctx: ExExContext&lt;Node&gt;) -&gt; Self {\n        Self { ctx, first_block: None, transactions: 0 }\n    }\n}\n \nimpl&lt;Node: FullNodeComponents&lt;Types: NodeTypes&lt;Primitives = EthPrimitives&gt;&gt;&gt; Future\n    for MyExEx&lt;Node&gt;\n{\n    type Output = eyre::Result&lt;()&gt;;\n \n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context&lt;&#x27;_&gt;) -&gt; Poll&lt;Self::Output&gt; {\n        let this = self.get_mut();\n \n        while let Some(notification) = ready!(this.ctx.notifications.try_next().poll_unpin(cx))? {\n            if let Some(reverted_chain) = notification.reverted_chain() {\n                this.transactions = this.transactions.saturating_sub(\n                    reverted_chain.blocks_iter().map(|b| b.body().transaction_count() as u64).sum(),\n                );\n            }\n \n            if let Some(committed_chain) = notification.committed_chain() {\n                this.first_block.get_or_insert(committed_chain.first().number);\n \n                this.transactions += committed_chain\n                    .blocks_iter()\n                    .map(|b| b.body().transaction_count() as u64)\n                    .sum::&lt;u64&gt;();\n \n                this.ctx\n                    .events\n                    .send(ExExEvent::FinishedHeight(committed_chain.tip().num_hash()))?;\n            }\n \n            if let Some(first_block) = this.first_block {\n                info!(%first_block, transactions = %this.transactions, &quot;Total number of transactions&quot;);\n            }\n        }\n \n        Poll::Ready(Ok(()))\n    }\n}\n \nfn main() -&gt; eyre::Result&lt;()&gt; {\n    reth::cli::Cli::parse_args().run(async move |builder, _| {\n        let handle = builder\n            .node(EthereumNode::default())\n            .install_exex(&quot;my-exex&quot;, async move |ctx| Ok(MyExEx::new(ctx)))\n            .launch()\n            .await?;\n \n        handle.wait_for_node_exit().await\n    })\n}\nAs you can see, we added two fields to our ExEx struct:\n\nfirst_block to keep track of the first block that was committed since the start of the ExEx.\ntransactions to keep track of the total number of transactions committed, accounting for reorgs and reverts.\n\nWe also changed our match block to two if clauses:\n\nFirst one checks if there&#x27;s a reverted chain using notification.reverted_chain(). If there is:\n\nWe subtract the number of transactions in the reverted chain from the total number of transactions.\nIt&#x27;s important to do the saturating_sub here, because if we just started our node and\ninstantly received a reorg, our transactions field will still be zero.\n\n\nSecond one checks if there&#x27;s a committed chain using notification.committed_chain(). If there is:\n\nWe update the first_block field to the first block of the committed chain.\nWe add the number of transactions in the committed chain to the total number of transactions.\nWe send a FinishedHeight event back to the main node.\n\n\n\nFinally, on every notification, we log the total number of transactions and\nthe first block that was committed since the start of the ExEx.","title":"Adding state","titles":["Tracking State",null]},"281":{"href":"/cli/reth/db/checksum#reth-db-checksum","html":"</header>\n<p>Calculates the content checksum of a table</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> checksum</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db checksum [OPTIONS] &lt;TABLE&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Arguments:</span></span>\n<span class=\"line\"><span>  &lt;TABLE&gt;</span></span>\n<span class=\"line\"><span>          The table name</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --start-key &lt;START_KEY&gt;</span></span>\n<span class=\"line\"><span>          The start of the range to checksum</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --end-key &lt;END_KEY&gt;</span></span>\n<span class=\"line\"><span>          The end of the range to checksum</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --limit &lt;LIMIT&gt;</span></span>\n<span class=\"line\"><span>          The maximum number of records that are queried and used to compute the checksum</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nCalculates the content checksum of a table\n$ reth db checksum --help\nUsage: reth db checksum [OPTIONS] &lt;TABLE&gt;\n\nArguments:\n  &lt;TABLE&gt;\n          The table name\n\nOptions:\n      --start-key &lt;START_KEY&gt;\n          The start of the range to checksum\n\n      --end-key &lt;END_KEY&gt;\n          The end of the range to checksum\n\n      --limit &lt;LIMIT&gt;\n          The maximum number of records that are queried and used to compute the checksum\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db checksum","titles":[]},"282":{"href":"/cli/reth/db/clear#reth-db-clear","html":"</header>\n<p>Deletes all table entries</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> clear</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db clear [OPTIONS] &lt;COMMAND&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Commands:</span></span>\n<span class=\"line\"><span>  mdbx         Deletes all database table entries</span></span>\n<span class=\"line\"><span>  static-file  Deletes all static file segment entries</span></span>\n<span class=\"line\"><span>  help         Print this message or the help of the given subcommand(s)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDeletes all table entries\n$ reth db clear --help\nUsage: reth db clear [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  mdbx         Deletes all database table entries\n  static-file  Deletes all static file segment entries\n  help         Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db clear","titles":[]},"283":{"href":"/cli/reth/db/diff#reth-db-diff","html":"</header>\n<p>Create a diff between two database tables or two entire databases</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> diff</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db diff [OPTIONS] --secondary-datadir &lt;SECONDARY_DATADIR&gt; --output &lt;OUTPUT&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --secondary-datadir &lt;SECONDARY_DATADIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --table &lt;TABLE&gt;</span></span>\n<span class=\"line\"><span>          The table name to diff. If not specified, all tables are diffed.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --output &lt;OUTPUT&gt;</span></span>\n<span class=\"line\"><span>          The output directory for the diff report.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nCreate a diff between two database tables or two entire databases\n$ reth db diff --help\nUsage: reth db diff [OPTIONS] --secondary-datadir &lt;SECONDARY_DATADIR&gt; --output &lt;OUTPUT&gt;\n\nOptions:\n      --secondary-datadir &lt;SECONDARY_DATADIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\n      --table &lt;TABLE&gt;\n          The table name to diff. If not specified, all tables are diffed.\n\n      --output &lt;OUTPUT&gt;\n          The output directory for the diff report.\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db diff","titles":[]},"284":{"href":"/cli/reth/db/drop#reth-db-drop","html":"</header>\n<p>Deletes all database entries</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> drop</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db drop [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -f, --force</span></span>\n<span class=\"line\"><span>          Bypasses the interactive confirmation and drops the database directly</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDeletes all database entries\n$ reth db drop --help\nUsage: reth db drop [OPTIONS]\n\nOptions:\n  -f, --force\n          Bypasses the interactive confirmation and drops the database directly\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db drop","titles":[]},"285":{"href":"/cli/reth/db/get#reth-db-get","html":"</header>\n<p>Gets the content of a table for the given key</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> get</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db get [OPTIONS] &lt;COMMAND&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Commands:</span></span>\n<span class=\"line\"><span>  mdbx         Gets the content of a database table for the given key</span></span>\n<span class=\"line\"><span>  static-file  Gets the content of a static file segment for the given key</span></span>\n<span class=\"line\"><span>  help         Print this message or the help of the given subcommand(s)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nGets the content of a table for the given key\n$ reth db get --help\nUsage: reth db get [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  mdbx         Gets the content of a database table for the given key\n  static-file  Gets the content of a static file segment for the given key\n  help         Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db get","titles":[]},"286":{"href":"/cli/reth/db/list#reth-db-list","html":"</header>\n<p>Lists the contents of a table</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> list</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db list [OPTIONS] &lt;TABLE&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Arguments:</span></span>\n<span class=\"line\"><span>  &lt;TABLE&gt;</span></span>\n<span class=\"line\"><span>          The table name</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -s, --skip &lt;SKIP&gt;</span></span>\n<span class=\"line\"><span>          Skip first N entries</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -r, --reverse</span></span>\n<span class=\"line\"><span>          Reverse the order of the entries. If enabled last table entries are read</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -l, --len &lt;LEN&gt;</span></span>\n<span class=\"line\"><span>          How many items to take from the walker</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --search &lt;SEARCH&gt;</span></span>\n<span class=\"line\"><span>          Search parameter for both keys and values. Prefix it with `0x` to search for binary data, and text otherwise.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          ATTENTION! For compressed tables (`Transactions` and `Receipts`), there might be missing results since the search uses the raw uncompressed value from the database.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --min-row-size &lt;MIN_ROW_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Minimum size of row in bytes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --min-key-size &lt;MIN_KEY_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Minimum size of key in bytes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --min-value-size &lt;MIN_VALUE_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Minimum size of value in bytes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -c, --count</span></span>\n<span class=\"line\"><span>          Returns the number of rows found</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -j, --json</span></span>\n<span class=\"line\"><span>          Dump as JSON instead of using TUI</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --raw</span></span>\n<span class=\"line\"><span>          Output bytes instead of human-readable decoded value</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nLists the contents of a table\n$ reth db list --help\nUsage: reth db list [OPTIONS] &lt;TABLE&gt;\n\nArguments:\n  &lt;TABLE&gt;\n          The table name\n\nOptions:\n  -s, --skip &lt;SKIP&gt;\n          Skip first N entries\n\n          [default: 0]\n\n  -r, --reverse\n          Reverse the order of the entries. If enabled last table entries are read\n\n  -l, --len &lt;LEN&gt;\n          How many items to take from the walker\n\n          [default: 5]\n\n      --search &lt;SEARCH&gt;\n          Search parameter for both keys and values. Prefix it with `0x` to search for binary data, and text otherwise.\n\n          ATTENTION! For compressed tables (`Transactions` and `Receipts`), there might be missing results since the search uses the raw uncompressed value from the database.\n\n      --min-row-size &lt;MIN_ROW_SIZE&gt;\n          Minimum size of row in bytes\n\n          [default: 0]\n\n      --min-key-size &lt;MIN_KEY_SIZE&gt;\n          Minimum size of key in bytes\n\n          [default: 0]\n\n      --min-value-size &lt;MIN_VALUE_SIZE&gt;\n          Minimum size of value in bytes\n\n          [default: 0]\n\n  -c, --count\n          Returns the number of rows found\n\n  -j, --json\n          Dump as JSON instead of using TUI\n\n      --raw\n          Output bytes instead of human-readable decoded value\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db list","titles":[]},"287":{"href":"/cli/reth/db/path#reth-db-path","html":"</header>\n<p>Returns the full database path</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> path</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db path [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nReturns the full database path\n$ reth db path --help\nUsage: reth db path [OPTIONS]\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db path","titles":[]},"288":{"href":"/cli/reth/db/stats#reth-db-stats","html":"</header>\n<p>Lists all the tables, their entry count and their size</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stats</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db stats [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --detailed-sizes</span></span>\n<span class=\"line\"><span>          Show only the total size for static files</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --detailed-segments</span></span>\n<span class=\"line\"><span>          Show detailed information per static file segment</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --checksum</span></span>\n<span class=\"line\"><span>          Show a checksum of each table in the database.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          WARNING: this option will take a long time to run, as it needs to traverse and hash the entire database.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          For individual table checksums, use the `reth db checksum` command.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nLists all the tables, their entry count and their size\n$ reth db stats --help\nUsage: reth db stats [OPTIONS]\n\nOptions:\n      --detailed-sizes\n          Show only the total size for static files\n\n      --detailed-segments\n          Show detailed information per static file segment\n\n      --checksum\n          Show a checksum of each table in the database.\n\n          WARNING: this option will take a long time to run, as it needs to traverse and hash the entire database.\n\n          For individual table checksums, use the `reth db checksum` command.\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db stats","titles":[]},"289":{"href":"/cli/reth/db/version#reth-db-version","html":"</header>\n<p>Lists current and local database versions</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> version</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db version [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nLists current and local database versions\n$ reth db version --help\nUsage: reth db version [OPTIONS]\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db version","titles":[]},"290":{"href":"/cli/reth/debug/build-block#reth-debug-build-block","html":"</header>\n<p>Debug block building</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> debug</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> build-block</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth debug build-block [OPTIONS] --prev-randao &lt;PREV_RANDAO&gt; --timestamp &lt;TIMESTAMP&gt; --suggested-fee-recipient &lt;SUGGESTED_FEE_RECIPIENT&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --parent-beacon-block-root &lt;PARENT_BEACON_BLOCK_ROOT&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --prev-randao &lt;PREV_RANDAO&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --timestamp &lt;TIMESTAMP&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --suggested-fee-recipient &lt;SUGGESTED_FEE_RECIPIENT&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --transactions &lt;TRANSACTIONS&gt;</span></span>\n<span class=\"line\"><span>          Array of transactions. NOTE: 4844 transactions must be provided in the same order as they appear in the blobs bundle</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --blobs-bundle-path &lt;BLOBS_BUNDLE_PATH&gt;</span></span>\n<span class=\"line\"><span>          Path to the file that contains a corresponding blobs bundle</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDebug block building\n$ reth debug build-block --help\nUsage: reth debug build-block [OPTIONS] --prev-randao &lt;PREV_RANDAO&gt; --timestamp &lt;TIMESTAMP&gt; --suggested-fee-recipient &lt;SUGGESTED_FEE_RECIPIENT&gt;\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\n      --parent-beacon-block-root &lt;PARENT_BEACON_BLOCK_ROOT&gt;\n\n\n      --prev-randao &lt;PREV_RANDAO&gt;\n\n\n      --timestamp &lt;TIMESTAMP&gt;\n\n\n      --suggested-fee-recipient &lt;SUGGESTED_FEE_RECIPIENT&gt;\n\n\n      --transactions &lt;TRANSACTIONS&gt;\n          Array of transactions. NOTE: 4844 transactions must be provided in the same order as they appear in the blobs bundle\n\n      --blobs-bundle-path &lt;BLOBS_BUNDLE_PATH&gt;\n          Path to the file that contains a corresponding blobs bundle\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth debug build-block","titles":[]},"291":{"href":"/cli/reth/debug/execution#reth-debug-execution","html":"</header>\n<p>Debug the roundtrip execution of blocks as well as the generated data</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> debug</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> execution</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth debug execution [OPTIONS] --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Networking:</span></span>\n<span class=\"line\"><span>  -d, --disable-discovery</span></span>\n<span class=\"line\"><span>          Disable the discovery service</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-dns-discovery</span></span>\n<span class=\"line\"><span>          Disable the DNS discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-discv4-discovery</span></span>\n<span class=\"line\"><span>          Disable Discv4 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --enable-discv5-discovery</span></span>\n<span class=\"line\"><span>          Enable Discv5 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-nat</span></span>\n<span class=\"line\"><span>          Disable Nat discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.addr &lt;DISCOVERY_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP address to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.port &lt;DISCOVERY_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP port to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;</span></span>\n<span class=\"line\"><span>          The number of times to carry out boost lookup queries at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-peers &lt;TRUSTED_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs of trusted peers for P2P connections.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          --trusted-peers enode://abcd@192.168.0.1:30303</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-only</span></span>\n<span class=\"line\"><span>          Connect to or accept from trusted peers only</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --bootnodes &lt;BOOTNODES&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs for P2P discovery bootstrap.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Will fall back to a network-specific default if not specified.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --dns-retries &lt;DNS_RETRIES&gt;</span></span>\n<span class=\"line\"><span>          Amount of DNS resolution requests retries to perform when peering</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --peers-file &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the known peers file. Connected peers are dumped to this file on nodes</span></span>\n<span class=\"line\"><span>          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --identity &lt;IDENTITY&gt;</span></span>\n<span class=\"line\"><span>          Custom node identity</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --p2p-secret-key &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          Secret key to use for this node.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --no-persist-peers</span></span>\n<span class=\"line\"><span>          Do not persist peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --nat &lt;NAT&gt;</span></span>\n<span class=\"line\"><span>          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: any]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --addr &lt;ADDR&gt;</span></span>\n<span class=\"line\"><span>          Network listening address</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --port &lt;PORT&gt;</span></span>\n<span class=\"line\"><span>          Network listening port</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of outbound requests. default: 100</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of inbound requests. default: 30</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 130]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs-peer &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-seen-tx-history &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of seen transactions to remember per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 320 transaction hashes.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 320]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-pending-imports &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of transactions to import concurrently.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 4096]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-response-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions</span></span>\n<span class=\"line\"><span>          to pack in one response.</span></span>\n<span class=\"line\"><span>          Spec&#x27;d at 2MiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 2097152]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-pack-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions to</span></span>\n<span class=\"line\"><span>          request in one request.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a</span></span>\n<span class=\"line\"><span>          transaction announcement (see `RLPx` specs). This allows a node to request a specific size</span></span>\n<span class=\"line\"><span>          response.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          By default, nodes request only 128 KiB worth of transactions, but should a peer request</span></span>\n<span class=\"line\"><span>          more, up to 2 MiB, a node will answer with more than 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 131072]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-pending-fetch &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max capacity of cache of hashes for transactions pending fetch.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 25600]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --net-if.experimental &lt;IF_NAME&gt;</span></span>\n<span class=\"line\"><span>          Name of network interface used to communicate with peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;</span></span>\n<span class=\"line\"><span>          Transaction Propagation Policy</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          The policy determines which peers transactions are gossiped to.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: All]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span>          The maximum block height</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --interval &lt;INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The block interval for sync and unwind. Defaults to `1000`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1000]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDebug the roundtrip execution of blocks as well as the generated data\n$ reth debug execution --help\nUsage: reth debug execution [OPTIONS] --to &lt;TO&gt;\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\nNetworking:\n  -d, --disable-discovery\n          Disable the discovery service\n\n      --disable-dns-discovery\n          Disable the DNS discovery\n\n      --disable-discv4-discovery\n          Disable Discv4 discovery\n\n      --enable-discv5-discovery\n          Enable Discv5 discovery\n\n      --disable-nat\n          Disable Nat discovery\n\n      --discovery.addr &lt;DISCOVERY_ADDR&gt;\n          The UDP address to use for devp2p peer discovery version 4\n\n          [default: 0.0.0.0]\n\n      --discovery.port &lt;DISCOVERY_PORT&gt;\n          The UDP port to use for devp2p peer discovery version 4\n\n          [default: 30303]\n\n      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;\n          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4\n\n      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;\n          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6\n\n      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;\n          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set\n\n          [default: 9200]\n\n      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;\n          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set\n\n          [default: 9200]\n\n      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program\n\n          [default: 20]\n\n      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap\n\n          [default: 5]\n\n      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;\n          The number of times to carry out boost lookup queries at bootstrap\n\n          [default: 200]\n\n      --trusted-peers &lt;TRUSTED_PEERS&gt;\n          Comma separated enode URLs of trusted peers for P2P connections.\n\n          --trusted-peers enode://abcd@192.168.0.1:30303\n\n      --trusted-only\n          Connect to or accept from trusted peers only\n\n      --bootnodes &lt;BOOTNODES&gt;\n          Comma separated enode URLs for P2P discovery bootstrap.\n\n          Will fall back to a network-specific default if not specified.\n\n      --dns-retries &lt;DNS_RETRIES&gt;\n          Amount of DNS resolution requests retries to perform when peering\n\n          [default: 0]\n\n      --peers-file &lt;FILE&gt;\n          The path to the known peers file. Connected peers are dumped to this file on nodes\n          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.\n\n      --identity &lt;IDENTITY&gt;\n          Custom node identity\n\n          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]\n\n      --p2p-secret-key &lt;PATH&gt;\n          Secret key to use for this node.\n\n          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.\n\n      --no-persist-peers\n          Do not persist peers.\n\n      --nat &lt;NAT&gt;\n          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)\n\n          [default: any]\n\n      --addr &lt;ADDR&gt;\n          Network listening address\n\n          [default: 0.0.0.0]\n\n      --port &lt;PORT&gt;\n          Network listening port\n\n          [default: 30303]\n\n      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;\n          Maximum number of outbound requests. default: 100\n\n      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;\n          Maximum number of inbound requests. default: 30\n\n      --max-tx-reqs &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests.\n\n          [default: 130]\n\n      --max-tx-reqs-peer &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests per peer.\n\n          [default: 1]\n\n      --max-seen-tx-history &lt;COUNT&gt;\n          Max number of seen transactions to remember per peer.\n\n          Default is 320 transaction hashes.\n\n          [default: 320]\n\n      --max-pending-imports &lt;COUNT&gt;\n          Max number of transactions to import concurrently.\n\n          [default: 4096]\n\n      --pooled-tx-response-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions\n          to pack in one response.\n          Spec&#x27;d at 2MiB.\n\n          [default: 2097152]\n\n      --pooled-tx-pack-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions to\n          request in one request.\n\n          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a\n          transaction announcement (see `RLPx` specs). This allows a node to request a specific size\n          response.\n\n          By default, nodes request only 128 KiB worth of transactions, but should a peer request\n          more, up to 2 MiB, a node will answer with more than 128 KiB.\n\n          Default is 128 KiB.\n\n          [default: 131072]\n\n      --max-tx-pending-fetch &lt;COUNT&gt;\n          Max capacity of cache of hashes for transactions pending fetch.\n\n          [default: 25600]\n\n      --net-if.experimental &lt;IF_NAME&gt;\n          Name of network interface used to communicate with peers.\n\n          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.\n\n      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;\n          Transaction Propagation Policy\n\n          The policy determines which peers transactions are gossiped to.\n\n          [default: All]\n\n      --to &lt;TO&gt;\n          The maximum block height\n\n      --interval &lt;INTERVAL&gt;\n          The block interval for sync and unwind. Defaults to `1000`\n\n          [default: 1000]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth debug execution","titles":[]},"292":{"href":"/cli/reth/debug/in-memory-merkle#reth-debug-in-memory-merkle","html":"</header>\n<p>Debug in-memory state root calculation</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> debug</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> in-memory-merkle</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth debug in-memory-merkle [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Networking:</span></span>\n<span class=\"line\"><span>  -d, --disable-discovery</span></span>\n<span class=\"line\"><span>          Disable the discovery service</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-dns-discovery</span></span>\n<span class=\"line\"><span>          Disable the DNS discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-discv4-discovery</span></span>\n<span class=\"line\"><span>          Disable Discv4 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --enable-discv5-discovery</span></span>\n<span class=\"line\"><span>          Enable Discv5 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-nat</span></span>\n<span class=\"line\"><span>          Disable Nat discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.addr &lt;DISCOVERY_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP address to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.port &lt;DISCOVERY_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP port to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;</span></span>\n<span class=\"line\"><span>          The number of times to carry out boost lookup queries at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-peers &lt;TRUSTED_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs of trusted peers for P2P connections.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          --trusted-peers enode://abcd@192.168.0.1:30303</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-only</span></span>\n<span class=\"line\"><span>          Connect to or accept from trusted peers only</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --bootnodes &lt;BOOTNODES&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs for P2P discovery bootstrap.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Will fall back to a network-specific default if not specified.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --dns-retries &lt;DNS_RETRIES&gt;</span></span>\n<span class=\"line\"><span>          Amount of DNS resolution requests retries to perform when peering</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --peers-file &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the known peers file. Connected peers are dumped to this file on nodes</span></span>\n<span class=\"line\"><span>          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --identity &lt;IDENTITY&gt;</span></span>\n<span class=\"line\"><span>          Custom node identity</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --p2p-secret-key &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          Secret key to use for this node.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --no-persist-peers</span></span>\n<span class=\"line\"><span>          Do not persist peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --nat &lt;NAT&gt;</span></span>\n<span class=\"line\"><span>          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: any]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --addr &lt;ADDR&gt;</span></span>\n<span class=\"line\"><span>          Network listening address</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --port &lt;PORT&gt;</span></span>\n<span class=\"line\"><span>          Network listening port</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of outbound requests. default: 100</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of inbound requests. default: 30</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 130]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs-peer &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-seen-tx-history &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of seen transactions to remember per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 320 transaction hashes.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 320]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-pending-imports &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of transactions to import concurrently.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 4096]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-response-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions</span></span>\n<span class=\"line\"><span>          to pack in one response.</span></span>\n<span class=\"line\"><span>          Spec&#x27;d at 2MiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 2097152]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-pack-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions to</span></span>\n<span class=\"line\"><span>          request in one request.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a</span></span>\n<span class=\"line\"><span>          transaction announcement (see `RLPx` specs). This allows a node to request a specific size</span></span>\n<span class=\"line\"><span>          response.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          By default, nodes request only 128 KiB worth of transactions, but should a peer request</span></span>\n<span class=\"line\"><span>          more, up to 2 MiB, a node will answer with more than 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 131072]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-pending-fetch &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max capacity of cache of hashes for transactions pending fetch.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 25600]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --net-if.experimental &lt;IF_NAME&gt;</span></span>\n<span class=\"line\"><span>          Name of network interface used to communicate with peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;</span></span>\n<span class=\"line\"><span>          Transaction Propagation Policy</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          The policy determines which peers transactions are gossiped to.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: All]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --retries &lt;RETRIES&gt;</span></span>\n<span class=\"line\"><span>          The number of retries per request</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --skip-node-depth &lt;SKIP_NODE_DEPTH&gt;</span></span>\n<span class=\"line\"><span>          The depth after which we should start comparing branch nodes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDebug in-memory state root calculation\n$ reth debug in-memory-merkle --help\nUsage: reth debug in-memory-merkle [OPTIONS]\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\nNetworking:\n  -d, --disable-discovery\n          Disable the discovery service\n\n      --disable-dns-discovery\n          Disable the DNS discovery\n\n      --disable-discv4-discovery\n          Disable Discv4 discovery\n\n      --enable-discv5-discovery\n          Enable Discv5 discovery\n\n      --disable-nat\n          Disable Nat discovery\n\n      --discovery.addr &lt;DISCOVERY_ADDR&gt;\n          The UDP address to use for devp2p peer discovery version 4\n\n          [default: 0.0.0.0]\n\n      --discovery.port &lt;DISCOVERY_PORT&gt;\n          The UDP port to use for devp2p peer discovery version 4\n\n          [default: 30303]\n\n      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;\n          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4\n\n      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;\n          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6\n\n      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;\n          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set\n\n          [default: 9200]\n\n      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;\n          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set\n\n          [default: 9200]\n\n      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program\n\n          [default: 20]\n\n      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap\n\n          [default: 5]\n\n      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;\n          The number of times to carry out boost lookup queries at bootstrap\n\n          [default: 200]\n\n      --trusted-peers &lt;TRUSTED_PEERS&gt;\n          Comma separated enode URLs of trusted peers for P2P connections.\n\n          --trusted-peers enode://abcd@192.168.0.1:30303\n\n      --trusted-only\n          Connect to or accept from trusted peers only\n\n      --bootnodes &lt;BOOTNODES&gt;\n          Comma separated enode URLs for P2P discovery bootstrap.\n\n          Will fall back to a network-specific default if not specified.\n\n      --dns-retries &lt;DNS_RETRIES&gt;\n          Amount of DNS resolution requests retries to perform when peering\n\n          [default: 0]\n\n      --peers-file &lt;FILE&gt;\n          The path to the known peers file. Connected peers are dumped to this file on nodes\n          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.\n\n      --identity &lt;IDENTITY&gt;\n          Custom node identity\n\n          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]\n\n      --p2p-secret-key &lt;PATH&gt;\n          Secret key to use for this node.\n\n          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.\n\n      --no-persist-peers\n          Do not persist peers.\n\n      --nat &lt;NAT&gt;\n          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)\n\n          [default: any]\n\n      --addr &lt;ADDR&gt;\n          Network listening address\n\n          [default: 0.0.0.0]\n\n      --port &lt;PORT&gt;\n          Network listening port\n\n          [default: 30303]\n\n      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;\n          Maximum number of outbound requests. default: 100\n\n      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;\n          Maximum number of inbound requests. default: 30\n\n      --max-tx-reqs &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests.\n\n          [default: 130]\n\n      --max-tx-reqs-peer &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests per peer.\n\n          [default: 1]\n\n      --max-seen-tx-history &lt;COUNT&gt;\n          Max number of seen transactions to remember per peer.\n\n          Default is 320 transaction hashes.\n\n          [default: 320]\n\n      --max-pending-imports &lt;COUNT&gt;\n          Max number of transactions to import concurrently.\n\n          [default: 4096]\n\n      --pooled-tx-response-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions\n          to pack in one response.\n          Spec&#x27;d at 2MiB.\n\n          [default: 2097152]\n\n      --pooled-tx-pack-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions to\n          request in one request.\n\n          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a\n          transaction announcement (see `RLPx` specs). This allows a node to request a specific size\n          response.\n\n          By default, nodes request only 128 KiB worth of transactions, but should a peer request\n          more, up to 2 MiB, a node will answer with more than 128 KiB.\n\n          Default is 128 KiB.\n\n          [default: 131072]\n\n      --max-tx-pending-fetch &lt;COUNT&gt;\n          Max capacity of cache of hashes for transactions pending fetch.\n\n          [default: 25600]\n\n      --net-if.experimental &lt;IF_NAME&gt;\n          Name of network interface used to communicate with peers.\n\n          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.\n\n      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;\n          Transaction Propagation Policy\n\n          The policy determines which peers transactions are gossiped to.\n\n          [default: All]\n\n      --retries &lt;RETRIES&gt;\n          The number of retries per request\n\n          [default: 5]\n\n      --skip-node-depth &lt;SKIP_NODE_DEPTH&gt;\n          The depth after which we should start comparing branch nodes\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth debug in-memory-merkle","titles":[]},"293":{"href":"/cli/reth/debug/merkle#reth-debug-merkle","html":"</header>\n<p>Debug the clean &amp; incremental state root calculations</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> debug</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> merkle</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth debug merkle [OPTIONS] --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Networking:</span></span>\n<span class=\"line\"><span>  -d, --disable-discovery</span></span>\n<span class=\"line\"><span>          Disable the discovery service</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-dns-discovery</span></span>\n<span class=\"line\"><span>          Disable the DNS discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-discv4-discovery</span></span>\n<span class=\"line\"><span>          Disable Discv4 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --enable-discv5-discovery</span></span>\n<span class=\"line\"><span>          Enable Discv5 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-nat</span></span>\n<span class=\"line\"><span>          Disable Nat discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.addr &lt;DISCOVERY_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP address to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.port &lt;DISCOVERY_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP port to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;</span></span>\n<span class=\"line\"><span>          The number of times to carry out boost lookup queries at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-peers &lt;TRUSTED_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs of trusted peers for P2P connections.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          --trusted-peers enode://abcd@192.168.0.1:30303</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-only</span></span>\n<span class=\"line\"><span>          Connect to or accept from trusted peers only</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --bootnodes &lt;BOOTNODES&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs for P2P discovery bootstrap.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Will fall back to a network-specific default if not specified.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --dns-retries &lt;DNS_RETRIES&gt;</span></span>\n<span class=\"line\"><span>          Amount of DNS resolution requests retries to perform when peering</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --peers-file &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the known peers file. Connected peers are dumped to this file on nodes</span></span>\n<span class=\"line\"><span>          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --identity &lt;IDENTITY&gt;</span></span>\n<span class=\"line\"><span>          Custom node identity</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --p2p-secret-key &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          Secret key to use for this node.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --no-persist-peers</span></span>\n<span class=\"line\"><span>          Do not persist peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --nat &lt;NAT&gt;</span></span>\n<span class=\"line\"><span>          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: any]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --addr &lt;ADDR&gt;</span></span>\n<span class=\"line\"><span>          Network listening address</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --port &lt;PORT&gt;</span></span>\n<span class=\"line\"><span>          Network listening port</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of outbound requests. default: 100</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of inbound requests. default: 30</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 130]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs-peer &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-seen-tx-history &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of seen transactions to remember per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 320 transaction hashes.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 320]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-pending-imports &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of transactions to import concurrently.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 4096]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-response-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions</span></span>\n<span class=\"line\"><span>          to pack in one response.</span></span>\n<span class=\"line\"><span>          Spec&#x27;d at 2MiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 2097152]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-pack-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions to</span></span>\n<span class=\"line\"><span>          request in one request.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a</span></span>\n<span class=\"line\"><span>          transaction announcement (see `RLPx` specs). This allows a node to request a specific size</span></span>\n<span class=\"line\"><span>          response.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          By default, nodes request only 128 KiB worth of transactions, but should a peer request</span></span>\n<span class=\"line\"><span>          more, up to 2 MiB, a node will answer with more than 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 131072]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-pending-fetch &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max capacity of cache of hashes for transactions pending fetch.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 25600]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --net-if.experimental &lt;IF_NAME&gt;</span></span>\n<span class=\"line\"><span>          Name of network interface used to communicate with peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;</span></span>\n<span class=\"line\"><span>          Transaction Propagation Policy</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          The policy determines which peers transactions are gossiped to.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: All]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --retries &lt;RETRIES&gt;</span></span>\n<span class=\"line\"><span>          The number of retries per request</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span>          The height to finish at</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --skip-node-depth &lt;SKIP_NODE_DEPTH&gt;</span></span>\n<span class=\"line\"><span>          The depth after which we should start comparing branch nodes</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDebug the clean &amp; incremental state root calculations\n$ reth debug merkle --help\nUsage: reth debug merkle [OPTIONS] --to &lt;TO&gt;\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\nNetworking:\n  -d, --disable-discovery\n          Disable the discovery service\n\n      --disable-dns-discovery\n          Disable the DNS discovery\n\n      --disable-discv4-discovery\n          Disable Discv4 discovery\n\n      --enable-discv5-discovery\n          Enable Discv5 discovery\n\n      --disable-nat\n          Disable Nat discovery\n\n      --discovery.addr &lt;DISCOVERY_ADDR&gt;\n          The UDP address to use for devp2p peer discovery version 4\n\n          [default: 0.0.0.0]\n\n      --discovery.port &lt;DISCOVERY_PORT&gt;\n          The UDP port to use for devp2p peer discovery version 4\n\n          [default: 30303]\n\n      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;\n          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4\n\n      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;\n          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6\n\n      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;\n          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set\n\n          [default: 9200]\n\n      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;\n          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set\n\n          [default: 9200]\n\n      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program\n\n          [default: 20]\n\n      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap\n\n          [default: 5]\n\n      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;\n          The number of times to carry out boost lookup queries at bootstrap\n\n          [default: 200]\n\n      --trusted-peers &lt;TRUSTED_PEERS&gt;\n          Comma separated enode URLs of trusted peers for P2P connections.\n\n          --trusted-peers enode://abcd@192.168.0.1:30303\n\n      --trusted-only\n          Connect to or accept from trusted peers only\n\n      --bootnodes &lt;BOOTNODES&gt;\n          Comma separated enode URLs for P2P discovery bootstrap.\n\n          Will fall back to a network-specific default if not specified.\n\n      --dns-retries &lt;DNS_RETRIES&gt;\n          Amount of DNS resolution requests retries to perform when peering\n\n          [default: 0]\n\n      --peers-file &lt;FILE&gt;\n          The path to the known peers file. Connected peers are dumped to this file on nodes\n          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.\n\n      --identity &lt;IDENTITY&gt;\n          Custom node identity\n\n          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]\n\n      --p2p-secret-key &lt;PATH&gt;\n          Secret key to use for this node.\n\n          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.\n\n      --no-persist-peers\n          Do not persist peers.\n\n      --nat &lt;NAT&gt;\n          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)\n\n          [default: any]\n\n      --addr &lt;ADDR&gt;\n          Network listening address\n\n          [default: 0.0.0.0]\n\n      --port &lt;PORT&gt;\n          Network listening port\n\n          [default: 30303]\n\n      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;\n          Maximum number of outbound requests. default: 100\n\n      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;\n          Maximum number of inbound requests. default: 30\n\n      --max-tx-reqs &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests.\n\n          [default: 130]\n\n      --max-tx-reqs-peer &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests per peer.\n\n          [default: 1]\n\n      --max-seen-tx-history &lt;COUNT&gt;\n          Max number of seen transactions to remember per peer.\n\n          Default is 320 transaction hashes.\n\n          [default: 320]\n\n      --max-pending-imports &lt;COUNT&gt;\n          Max number of transactions to import concurrently.\n\n          [default: 4096]\n\n      --pooled-tx-response-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions\n          to pack in one response.\n          Spec&#x27;d at 2MiB.\n\n          [default: 2097152]\n\n      --pooled-tx-pack-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions to\n          request in one request.\n\n          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a\n          transaction announcement (see `RLPx` specs). This allows a node to request a specific size\n          response.\n\n          By default, nodes request only 128 KiB worth of transactions, but should a peer request\n          more, up to 2 MiB, a node will answer with more than 128 KiB.\n\n          Default is 128 KiB.\n\n          [default: 131072]\n\n      --max-tx-pending-fetch &lt;COUNT&gt;\n          Max capacity of cache of hashes for transactions pending fetch.\n\n          [default: 25600]\n\n      --net-if.experimental &lt;IF_NAME&gt;\n          Name of network interface used to communicate with peers.\n\n          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.\n\n      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;\n          Transaction Propagation Policy\n\n          The policy determines which peers transactions are gossiped to.\n\n          [default: All]\n\n      --retries &lt;RETRIES&gt;\n          The number of retries per request\n\n          [default: 5]\n\n      --to &lt;TO&gt;\n          The height to finish at\n\n      --skip-node-depth &lt;SKIP_NODE_DEPTH&gt;\n          The depth after which we should start comparing branch nodes\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth debug merkle","titles":[]},"294":{"href":"/cli/reth/p2p/body#reth-p2p-body","html":"</header>\n<p>Download block body</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> p2p</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> body</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth p2p body [OPTIONS] &lt;ID&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Arguments:</span></span>\n<span class=\"line\"><span>  &lt;ID&gt;</span></span>\n<span class=\"line\"><span>          The block number or hash</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDownload block body\n$ reth p2p body --help\nUsage: reth p2p body [OPTIONS] &lt;ID&gt;\n\nArguments:\n  &lt;ID&gt;\n          The block number or hash\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth p2p body","titles":[]},"295":{"href":"/cli/reth/p2p/header#reth-p2p-header","html":"</header>\n<p>Download block header</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> p2p</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> header</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth p2p header [OPTIONS] &lt;ID&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Arguments:</span></span>\n<span class=\"line\"><span>  &lt;ID&gt;</span></span>\n<span class=\"line\"><span>          The header number or hash</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDownload block header\n$ reth p2p header --help\nUsage: reth p2p header [OPTIONS] &lt;ID&gt;\n\nArguments:\n  &lt;ID&gt;\n          The header number or hash\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth p2p header","titles":[]},"296":{"href":"/cli/reth/p2p/rlpx#reth-p2p-rlpx","html":"</header>\n<p>RLPx commands</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> p2p</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> rlpx</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth p2p rlpx [OPTIONS] &lt;COMMAND&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Commands:</span></span>\n<span class=\"line\"><span>  ping  ping node</span></span>\n<span class=\"line\"><span>  help  Print this message or the help of the given subcommand(s)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nRLPx commands\n$ reth p2p rlpx --help\nUsage: reth p2p rlpx [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  ping  ping node\n  help  Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth p2p rlpx","titles":[]},"297":{"href":"/cli/reth/recover/storage-tries#reth-recover-storage-tries","html":"</header>\n<p>Recover the node by deleting dangling storage tries</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> recover</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> storage-tries</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth recover storage-tries [OPTIONS]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nRecover the node by deleting dangling storage tries\n$ reth recover storage-tries --help\nUsage: reth recover storage-tries [OPTIONS]\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth recover storage-tries","titles":[]},"298":{"href":"/cli/reth/stage/drop#reth-stage-drop","html":"</header>\n<p>Drop a stage&#x27;s tables from the database</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stage</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> drop</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth stage drop [OPTIONS] &lt;STAGE&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  &lt;STAGE&gt;</span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - headers:         The headers stage within the pipeline</span></span>\n<span class=\"line\"><span>          - bodies:          The bodies stage within the pipeline</span></span>\n<span class=\"line\"><span>          - senders:         The senders stage within the pipeline</span></span>\n<span class=\"line\"><span>          - execution:       The execution stage within the pipeline</span></span>\n<span class=\"line\"><span>          - account-hashing: The account hashing stage within the pipeline</span></span>\n<span class=\"line\"><span>          - storage-hashing: The storage hashing stage within the pipeline</span></span>\n<span class=\"line\"><span>          - hashing:         The account and storage hashing stages within the pipeline</span></span>\n<span class=\"line\"><span>          - merkle:          The merkle stage within the pipeline</span></span>\n<span class=\"line\"><span>          - tx-lookup:       The transaction lookup stage within the pipeline</span></span>\n<span class=\"line\"><span>          - account-history: The account history stage within the pipeline</span></span>\n<span class=\"line\"><span>          - storage-history: The storage history stage within the pipeline</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDrop a stage&#x27;s tables from the database\n$ reth stage drop --help\nUsage: reth stage drop [OPTIONS] &lt;STAGE&gt;\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\n  &lt;STAGE&gt;\n          Possible values:\n          - headers:         The headers stage within the pipeline\n          - bodies:          The bodies stage within the pipeline\n          - senders:         The senders stage within the pipeline\n          - execution:       The execution stage within the pipeline\n          - account-hashing: The account hashing stage within the pipeline\n          - storage-hashing: The storage hashing stage within the pipeline\n          - hashing:         The account and storage hashing stages within the pipeline\n          - merkle:          The merkle stage within the pipeline\n          - tx-lookup:       The transaction lookup stage within the pipeline\n          - account-history: The account history stage within the pipeline\n          - storage-history: The storage history stage within the pipeline\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth stage drop","titles":[]},"299":{"href":"/cli/reth/stage/dump#reth-stage-dump","html":"</header>\n<p>Dumps a stage from a range into a new database</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stage</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> dump</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth stage dump [OPTIONS] &lt;COMMAND&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Commands:</span></span>\n<span class=\"line\"><span>  execution        Execution stage</span></span>\n<span class=\"line\"><span>  storage-hashing  `StorageHashing` stage</span></span>\n<span class=\"line\"><span>  account-hashing  `AccountHashing` stage</span></span>\n<span class=\"line\"><span>  merkle           Merkle stage</span></span>\n<span class=\"line\"><span>  help             Print this message or the help of the given subcommand(s)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDumps a stage from a range into a new database\n$ reth stage dump --help\nUsage: reth stage dump [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  execution        Execution stage\n  storage-hashing  `StorageHashing` stage\n  account-hashing  `AccountHashing` stage\n  merkle           Merkle stage\n  help             Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth stage dump","titles":[]},"300":{"href":"/cli/reth/stage/run#reth-stage-run","html":"</header>\n<p>Run a single stage.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stage</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth stage run [OPTIONS] --from &lt;FROM&gt; --to &lt;TO&gt; &lt;STAGE&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --metrics &lt;SOCKET&gt;</span></span>\n<span class=\"line\"><span>          Enable Prometheus metrics.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          The metrics will be served at the given interface and port.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --from &lt;FROM&gt;</span></span>\n<span class=\"line\"><span>          The height to start at</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -t, --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span>          The end of the stage</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --batch-size &lt;BATCH_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Batch size for stage execution and unwind</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -s, --skip-unwind</span></span>\n<span class=\"line\"><span>          Normally, running the stage requires unwinding for stages that already have been run, in order to not rewrite to the same database slots.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          You can optionally skip the unwinding phase if you&#x27;re syncing a block range that has not been synced before.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -c, --commit</span></span>\n<span class=\"line\"><span>          Commits the changes in the database. WARNING: potentially destructive.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Useful when you want to run diagnostics on the database.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --checkpoints</span></span>\n<span class=\"line\"><span>          Save stage checkpoints</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  &lt;STAGE&gt;</span></span>\n<span class=\"line\"><span>          The name of the stage to run</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - headers:         The headers stage within the pipeline</span></span>\n<span class=\"line\"><span>          - bodies:          The bodies stage within the pipeline</span></span>\n<span class=\"line\"><span>          - senders:         The senders stage within the pipeline</span></span>\n<span class=\"line\"><span>          - execution:       The execution stage within the pipeline</span></span>\n<span class=\"line\"><span>          - account-hashing: The account hashing stage within the pipeline</span></span>\n<span class=\"line\"><span>          - storage-hashing: The storage hashing stage within the pipeline</span></span>\n<span class=\"line\"><span>          - hashing:         The account and storage hashing stages within the pipeline</span></span>\n<span class=\"line\"><span>          - merkle:          The merkle stage within the pipeline</span></span>\n<span class=\"line\"><span>          - tx-lookup:       The transaction lookup stage within the pipeline</span></span>\n<span class=\"line\"><span>          - account-history: The account history stage within the pipeline</span></span>\n<span class=\"line\"><span>          - storage-history: The storage history stage within the pipeline</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Networking:</span></span>\n<span class=\"line\"><span>  -d, --disable-discovery</span></span>\n<span class=\"line\"><span>          Disable the discovery service</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-dns-discovery</span></span>\n<span class=\"line\"><span>          Disable the DNS discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-discv4-discovery</span></span>\n<span class=\"line\"><span>          Disable Discv4 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --enable-discv5-discovery</span></span>\n<span class=\"line\"><span>          Enable Discv5 discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --disable-nat</span></span>\n<span class=\"line\"><span>          Disable Nat discovery</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.addr &lt;DISCOVERY_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP address to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.port &lt;DISCOVERY_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP port to use for devp2p peer discovery version 4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;</span></span>\n<span class=\"line\"><span>          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 9200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 20]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;</span></span>\n<span class=\"line\"><span>          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;</span></span>\n<span class=\"line\"><span>          The number of times to carry out boost lookup queries at bootstrap</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-peers &lt;TRUSTED_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs of trusted peers for P2P connections.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          --trusted-peers enode://abcd@192.168.0.1:30303</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --trusted-only</span></span>\n<span class=\"line\"><span>          Connect to or accept from trusted peers only</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --bootnodes &lt;BOOTNODES&gt;</span></span>\n<span class=\"line\"><span>          Comma separated enode URLs for P2P discovery bootstrap.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Will fall back to a network-specific default if not specified.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --dns-retries &lt;DNS_RETRIES&gt;</span></span>\n<span class=\"line\"><span>          Amount of DNS resolution requests retries to perform when peering</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --peers-file &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the known peers file. Connected peers are dumped to this file on nodes</span></span>\n<span class=\"line\"><span>          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --identity &lt;IDENTITY&gt;</span></span>\n<span class=\"line\"><span>          Custom node identity</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --p2p-secret-key &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          Secret key to use for this node.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --no-persist-peers</span></span>\n<span class=\"line\"><span>          Do not persist peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --nat &lt;NAT&gt;</span></span>\n<span class=\"line\"><span>          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: any]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --addr &lt;ADDR&gt;</span></span>\n<span class=\"line\"><span>          Network listening address</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 0.0.0.0]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --port &lt;PORT&gt;</span></span>\n<span class=\"line\"><span>          Network listening port</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 30303]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of outbound requests. default: 100</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;</span></span>\n<span class=\"line\"><span>          Maximum number of inbound requests. default: 30</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 130]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-reqs-peer &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max concurrent `GetPooledTransactions` requests per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 1]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-seen-tx-history &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of seen transactions to remember per peer.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 320 transaction hashes.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 320]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-pending-imports &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max number of transactions to import concurrently.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 4096]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-response-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions</span></span>\n<span class=\"line\"><span>          to pack in one response.</span></span>\n<span class=\"line\"><span>          Spec&#x27;d at 2MiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 2097152]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --pooled-tx-pack-soft-limit &lt;BYTES&gt;</span></span>\n<span class=\"line\"><span>          Experimental, for usage in research. Sets the max accumulated byte size of transactions to</span></span>\n<span class=\"line\"><span>          request in one request.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a</span></span>\n<span class=\"line\"><span>          transaction announcement (see `RLPx` specs). This allows a node to request a specific size</span></span>\n<span class=\"line\"><span>          response.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          By default, nodes request only 128 KiB worth of transactions, but should a peer request</span></span>\n<span class=\"line\"><span>          more, up to 2 MiB, a node will answer with more than 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Default is 128 KiB.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 131072]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --max-tx-pending-fetch &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          Max capacity of cache of hashes for transactions pending fetch.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 25600]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --net-if.experimental &lt;IF_NAME&gt;</span></span>\n<span class=\"line\"><span>          Name of network interface used to communicate with peers.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;</span></span>\n<span class=\"line\"><span>          Transaction Propagation Policy</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          The policy determines which peers transactions are gossiped to.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: All]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nRun a single stage.\n$ reth stage run --help\nUsage: reth stage run [OPTIONS] --from &lt;FROM&gt; --to &lt;TO&gt; &lt;STAGE&gt;\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\n      --metrics &lt;SOCKET&gt;\n          Enable Prometheus metrics.\n\n          The metrics will be served at the given interface and port.\n\n      --from &lt;FROM&gt;\n          The height to start at\n\n  -t, --to &lt;TO&gt;\n          The end of the stage\n\n      --batch-size &lt;BATCH_SIZE&gt;\n          Batch size for stage execution and unwind\n\n  -s, --skip-unwind\n          Normally, running the stage requires unwinding for stages that already have been run, in order to not rewrite to the same database slots.\n\n          You can optionally skip the unwinding phase if you&#x27;re syncing a block range that has not been synced before.\n\n  -c, --commit\n          Commits the changes in the database. WARNING: potentially destructive.\n\n          Useful when you want to run diagnostics on the database.\n\n      --checkpoints\n          Save stage checkpoints\n\n  &lt;STAGE&gt;\n          The name of the stage to run\n\n          Possible values:\n          - headers:         The headers stage within the pipeline\n          - bodies:          The bodies stage within the pipeline\n          - senders:         The senders stage within the pipeline\n          - execution:       The execution stage within the pipeline\n          - account-hashing: The account hashing stage within the pipeline\n          - storage-hashing: The storage hashing stage within the pipeline\n          - hashing:         The account and storage hashing stages within the pipeline\n          - merkle:          The merkle stage within the pipeline\n          - tx-lookup:       The transaction lookup stage within the pipeline\n          - account-history: The account history stage within the pipeline\n          - storage-history: The storage history stage within the pipeline\n\nNetworking:\n  -d, --disable-discovery\n          Disable the discovery service\n\n      --disable-dns-discovery\n          Disable the DNS discovery\n\n      --disable-discv4-discovery\n          Disable Discv4 discovery\n\n      --enable-discv5-discovery\n          Enable Discv5 discovery\n\n      --disable-nat\n          Disable Nat discovery\n\n      --discovery.addr &lt;DISCOVERY_ADDR&gt;\n          The UDP address to use for devp2p peer discovery version 4\n\n          [default: 0.0.0.0]\n\n      --discovery.port &lt;DISCOVERY_PORT&gt;\n          The UDP port to use for devp2p peer discovery version 4\n\n          [default: 30303]\n\n      --discovery.v5.addr &lt;DISCOVERY_V5_ADDR&gt;\n          The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv4\n\n      --discovery.v5.addr.ipv6 &lt;DISCOVERY_V5_ADDR_IPV6&gt;\n          The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it&#x27;s also IPv6\n\n      --discovery.v5.port &lt;DISCOVERY_V5_PORT&gt;\n          The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set\n\n          [default: 9200]\n\n      --discovery.v5.port.ipv6 &lt;DISCOVERY_V5_PORT_IPV6&gt;\n          The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set\n\n          [default: 9200]\n\n      --discovery.v5.lookup-interval &lt;DISCOVERY_V5_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program\n\n          [default: 20]\n\n      --discovery.v5.bootstrap.lookup-interval &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL&gt;\n          The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap\n\n          [default: 5]\n\n      --discovery.v5.bootstrap.lookup-countdown &lt;DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN&gt;\n          The number of times to carry out boost lookup queries at bootstrap\n\n          [default: 200]\n\n      --trusted-peers &lt;TRUSTED_PEERS&gt;\n          Comma separated enode URLs of trusted peers for P2P connections.\n\n          --trusted-peers enode://abcd@192.168.0.1:30303\n\n      --trusted-only\n          Connect to or accept from trusted peers only\n\n      --bootnodes &lt;BOOTNODES&gt;\n          Comma separated enode URLs for P2P discovery bootstrap.\n\n          Will fall back to a network-specific default if not specified.\n\n      --dns-retries &lt;DNS_RETRIES&gt;\n          Amount of DNS resolution requests retries to perform when peering\n\n          [default: 0]\n\n      --peers-file &lt;FILE&gt;\n          The path to the known peers file. Connected peers are dumped to this file on nodes\n          shutdown, and read on startup. Cannot be used with `--no-persist-peers`.\n\n      --identity &lt;IDENTITY&gt;\n          Custom node identity\n\n          [default: reth/&lt;VERSION&gt;-&lt;SHA&gt;/&lt;ARCH&gt;]\n\n      --p2p-secret-key &lt;PATH&gt;\n          Secret key to use for this node.\n\n          This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.\n\n      --no-persist-peers\n          Do not persist peers.\n\n      --nat &lt;NAT&gt;\n          NAT resolution method (any|none|upnp|publicip|extip:\\&lt;IP\\&gt;)\n\n          [default: any]\n\n      --addr &lt;ADDR&gt;\n          Network listening address\n\n          [default: 0.0.0.0]\n\n      --port &lt;PORT&gt;\n          Network listening port\n\n          [default: 30303]\n\n      --max-outbound-peers &lt;MAX_OUTBOUND_PEERS&gt;\n          Maximum number of outbound requests. default: 100\n\n      --max-inbound-peers &lt;MAX_INBOUND_PEERS&gt;\n          Maximum number of inbound requests. default: 30\n\n      --max-tx-reqs &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests.\n\n          [default: 130]\n\n      --max-tx-reqs-peer &lt;COUNT&gt;\n          Max concurrent `GetPooledTransactions` requests per peer.\n\n          [default: 1]\n\n      --max-seen-tx-history &lt;COUNT&gt;\n          Max number of seen transactions to remember per peer.\n\n          Default is 320 transaction hashes.\n\n          [default: 320]\n\n      --max-pending-imports &lt;COUNT&gt;\n          Max number of transactions to import concurrently.\n\n          [default: 4096]\n\n      --pooled-tx-response-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions\n          to pack in one response.\n          Spec&#x27;d at 2MiB.\n\n          [default: 2097152]\n\n      --pooled-tx-pack-soft-limit &lt;BYTES&gt;\n          Experimental, for usage in research. Sets the max accumulated byte size of transactions to\n          request in one request.\n\n          Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a\n          transaction announcement (see `RLPx` specs). This allows a node to request a specific size\n          response.\n\n          By default, nodes request only 128 KiB worth of transactions, but should a peer request\n          more, up to 2 MiB, a node will answer with more than 128 KiB.\n\n          Default is 128 KiB.\n\n          [default: 131072]\n\n      --max-tx-pending-fetch &lt;COUNT&gt;\n          Max capacity of cache of hashes for transactions pending fetch.\n\n          [default: 25600]\n\n      --net-if.experimental &lt;IF_NAME&gt;\n          Name of network interface used to communicate with peers.\n\n          If flag is set, but no value is passed, the default interface for docker `eth0` is tried.\n\n      --tx-propagation-policy &lt;TX_PROPAGATION_POLICY&gt;\n          Transaction Propagation Policy\n\n          The policy determines which peers transactions are gossiped to.\n\n          [default: All]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth stage run","titles":[]},"301":{"href":"/cli/reth/stage/unwind#reth-stage-unwind","html":"</header>\n<p>Unwinds a certain block range, deleting it from the database</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stage</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> unwind</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth stage unwind [OPTIONS] &lt;COMMAND&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Commands:</span></span>\n<span class=\"line\"><span>  to-block    Unwinds the database from the latest block, until the given block number or hash has been reached, that block is not included</span></span>\n<span class=\"line\"><span>  num-blocks  Unwinds the database from the latest block, until the given number of blocks have been reached</span></span>\n<span class=\"line\"><span>  help        Print this message or the help of the given subcommand(s)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --datadir &lt;DATA_DIR&gt;</span></span>\n<span class=\"line\"><span>          The path to the data dir for all reth files and subdirectories.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Defaults to the OS-specific data directory:</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`</span></span>\n<span class=\"line\"><span>          - Windows: `{FOLDERID_RoamingAppData}/reth/`</span></span>\n<span class=\"line\"><span>          - macOS: `$HOME/Library/Application Support/reth/`</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: default]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --datadir.static-files &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The absolute path to store static files in.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --config &lt;FILE&gt;</span></span>\n<span class=\"line\"><span>          The path to the configuration file to use</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Database:</span></span>\n<span class=\"line\"><span>      --db.log-level &lt;LOG_LEVEL&gt;</span></span>\n<span class=\"line\"><span>          Database logging level. Levels higher than &quot;notice&quot; require a debug build</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - fatal:   Enables logging for critical conditions, i.e. assertion failures</span></span>\n<span class=\"line\"><span>          - error:   Enables logging for error conditions</span></span>\n<span class=\"line\"><span>          - warn:    Enables logging for warning conditions</span></span>\n<span class=\"line\"><span>          - notice:  Enables logging for normal but significant condition</span></span>\n<span class=\"line\"><span>          - verbose: Enables logging for verbose informational</span></span>\n<span class=\"line\"><span>          - debug:   Enables logging for debug-level messages</span></span>\n<span class=\"line\"><span>          - trace:   Enables logging for trace debug-level messages</span></span>\n<span class=\"line\"><span>          - extra:   Enables logging for extra debug-level messages</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.exclusive &lt;EXCLUSIVE&gt;</span></span>\n<span class=\"line\"><span>          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [possible values: true, false]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.max-size &lt;MAX_SIZE&gt;</span></span>\n<span class=\"line\"><span>          Maximum database size (e.g., 4TB, 8MB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.growth-step &lt;GROWTH_STEP&gt;</span></span>\n<span class=\"line\"><span>          Database growth step (e.g., 4GB, 4KB)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;</span></span>\n<span class=\"line\"><span>          Read transaction timeout in seconds, 0 means no timeout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --offline</span></span>\n<span class=\"line\"><span>          If this is enabled, then all stages except headers, bodies, and sender recovery will be unwound</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nUnwinds a certain block range, deleting it from the database\n$ reth stage unwind --help\nUsage: reth stage unwind [OPTIONS] &lt;COMMAND&gt;\n\nCommands:\n  to-block    Unwinds the database from the latest block, until the given block number or hash has been reached, that block is not included\n  num-blocks  Unwinds the database from the latest block, until the given number of blocks have been reached\n  help        Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --datadir &lt;DATA_DIR&gt;\n          The path to the data dir for all reth files and subdirectories.\n\n          Defaults to the OS-specific data directory:\n\n          - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n          - Windows: `{FOLDERID_RoamingAppData}/reth/`\n          - macOS: `$HOME/Library/Application Support/reth/`\n\n          [default: default]\n\n      --datadir.static-files &lt;PATH&gt;\n          The absolute path to store static files in.\n\n      --config &lt;FILE&gt;\n          The path to the configuration file to use\n\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nDatabase:\n      --db.log-level &lt;LOG_LEVEL&gt;\n          Database logging level. Levels higher than &quot;notice&quot; require a debug build\n\n          Possible values:\n          - fatal:   Enables logging for critical conditions, i.e. assertion failures\n          - error:   Enables logging for error conditions\n          - warn:    Enables logging for warning conditions\n          - notice:  Enables logging for normal but significant condition\n          - verbose: Enables logging for verbose informational\n          - debug:   Enables logging for debug-level messages\n          - trace:   Enables logging for trace debug-level messages\n          - extra:   Enables logging for extra debug-level messages\n\n      --db.exclusive &lt;EXCLUSIVE&gt;\n          Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume\n\n          [possible values: true, false]\n\n      --db.max-size &lt;MAX_SIZE&gt;\n          Maximum database size (e.g., 4TB, 8MB)\n\n      --db.growth-step &lt;GROWTH_STEP&gt;\n          Database growth step (e.g., 4GB, 4KB)\n\n      --db.read-transaction-timeout &lt;READ_TRANSACTION_TIMEOUT&gt;\n          Read transaction timeout in seconds, 0 means no timeout\n\n      --offline\n          If this is enabled, then all stages except headers, bodies, and sender recovery will be unwound\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth stage unwind","titles":[]},"302":{"href":"/cli/reth/test-vectors/tables#reth-test-vectors-tables","html":"</header>\n<p>Generates test vectors for specified tables. If no table is specified, generate for all</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> test-vectors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> tables</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Usage:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> test-vectors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> tables</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [OPTIONS] [NAMES]...</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Arguments:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  [NAMES]</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">...</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          List</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> of</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> table</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> names.</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> Case-sensitive</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Options:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --chain</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">CHAIN_OR_PAT</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">H</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          The</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> chain</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> this</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> is</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> running.</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Possible</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> values</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> are</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> either</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> a</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> built-in</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> chain</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> or</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> the</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> path</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> a</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> chain</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> specification</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> file.</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Built-in</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> chains:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">              mainnet,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> sepolia,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> holesky,</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> dev</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          [default: mainnet]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">      --instance</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">INSTANC</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">E</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> a</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> new</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> instance</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> of</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> a</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node.</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Configures</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> the</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ports</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> of</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> the</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> node</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> avoid</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> conflicts</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> with</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> the</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> defaults.</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> This</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> is</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> useful</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> for</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> running</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> multiple</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> nodes</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> on</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> the</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> same</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> machine.</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">          Max</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> number</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> of</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> instances</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> is</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 200.</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> It</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> is</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> chosen</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> in</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> a</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> way</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> so</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> that</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> it&#x27;s not possible to have port numbers that conflict with each other.</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          [default: 1]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  -h, --help</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Logging:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          The format to use for logs written to stdout</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          [default: terminal]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          Possible values:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          The filter to use for logs written to stdout</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          [default: ]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          The format to use for logs written to the log file</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          [default: terminal]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          Possible values:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          The filter to use for logs written to the log file</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          [default: debug]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          The path to put log files in</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          [default: 200]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          [default: 5]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      --log.journald</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          Write logs to journald</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          The filter to use for logs written to journald</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          [default: error]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          [default: always]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          Possible values:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          - always: Colors on</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          - auto:   Colors on</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          - never:  Colors off</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Display:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  -v, --verbosity...</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          Set the minimum log level.</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          -v      Errors</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          -vv     Warnings</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          -vvv    Info</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          -vvvv   Debug</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  -q, --quiet</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nGenerates test vectors for specified tables. If no table is specified, generate for all\n$ reth test-vectors tables --help\nUsage: reth test-vectors tables [OPTIONS] [NAMES]...\n \nArguments:\n  [NAMES]...\n          List of table names. Case-sensitive\n \nOptions:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n \n          Built-in chains:\n              mainnet, sepolia, holesky, dev\n \n          [default: mainnet]\n \n      --instance &lt;INSTANCE&gt;\n          Add a new instance of a node.\n \n          Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.\n \n          Max number of instances is 200. It is chosen in a way so that it&#x27;s not possible to have port numbers that conflict with each other.\n \n          Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2\n \n          [default: 1]\n \n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n \nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n \n          [default: terminal]\n \n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n \n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n \n          [default: ]\n \n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n \n          [default: terminal]\n \n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n \n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n \n          [default: debug]\n \n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n \n          [default: &lt;CACHE_DIR&gt;/logs]\n \n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n \n          [default: 200]\n \n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n \n          [default: 5]\n \n      --log.journald\n          Write logs to journald\n \n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n \n          [default: error]\n \n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n \n          [default: always]\n \n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n \nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n \n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n \n  -q, --quiet\n          Silence all log output","title":"reth test-vectors tables","titles":[]},"303":{"href":"/cli/reth/db/clear/mdbx#reth-db-clear-mdbx","html":"</header>\n<p>Deletes all database table entries</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> clear</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> mdbx</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db clear mdbx [OPTIONS] &lt;TABLE&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Arguments:</span></span>\n<span class=\"line\"><span>  &lt;TABLE&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDeletes all database table entries\n$ reth db clear mdbx --help\nUsage: reth db clear mdbx [OPTIONS] &lt;TABLE&gt;\n\nArguments:\n  &lt;TABLE&gt;\n\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db clear mdbx","titles":[]},"304":{"href":"/cli/reth/db/clear/static-file#reth-db-clear-static-file","html":"</header>\n<p>Deletes all static file segment entries</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> clear</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> static-file</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db clear static-file [OPTIONS] &lt;SEGMENT&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Arguments:</span></span>\n<span class=\"line\"><span>  &lt;SEGMENT&gt;</span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - headers:      Static File segment responsible for the `CanonicalHeaders`, `Headers`, `HeaderTerminalDifficulties` tables</span></span>\n<span class=\"line\"><span>          - transactions: Static File segment responsible for the `Transactions` table</span></span>\n<span class=\"line\"><span>          - receipts:     Static File segment responsible for the `Receipts` table</span></span>\n<span class=\"line\"><span>          - block-meta:   Static File segment responsible for the `BlockBodyIndices`, `BlockOmmers`, `BlockWithdrawals` tables</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nDeletes all static file segment entries\n$ reth db clear static-file --help\nUsage: reth db clear static-file [OPTIONS] &lt;SEGMENT&gt;\n\nArguments:\n  &lt;SEGMENT&gt;\n          Possible values:\n          - headers:      Static File segment responsible for the `CanonicalHeaders`, `Headers`, `HeaderTerminalDifficulties` tables\n          - transactions: Static File segment responsible for the `Transactions` table\n          - receipts:     Static File segment responsible for the `Receipts` table\n          - block-meta:   Static File segment responsible for the `BlockBodyIndices`, `BlockOmmers`, `BlockWithdrawals` tables\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db clear static-file","titles":[]},"305":{"href":"/cli/reth/db/get/mdbx#reth-db-get-mdbx","html":"</header>\n<p>Gets the content of a database table for the given key</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> get</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> mdbx</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db get mdbx [OPTIONS] &lt;TABLE&gt; &lt;KEY&gt; [SUBKEY]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Arguments:</span></span>\n<span class=\"line\"><span>  &lt;TABLE&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  &lt;KEY&gt;</span></span>\n<span class=\"line\"><span>          The key to get content for</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  [SUBKEY]</span></span>\n<span class=\"line\"><span>          The subkey to get content for</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --raw</span></span>\n<span class=\"line\"><span>          Output bytes instead of human-readable decoded value</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nGets the content of a database table for the given key\n$ reth db get mdbx --help\nUsage: reth db get mdbx [OPTIONS] &lt;TABLE&gt; &lt;KEY&gt; [SUBKEY]\n\nArguments:\n  &lt;TABLE&gt;\n\n\n  &lt;KEY&gt;\n          The key to get content for\n\n  [SUBKEY]\n          The subkey to get content for\n\nOptions:\n      --raw\n          Output bytes instead of human-readable decoded value\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db get mdbx","titles":[]},"306":{"href":"/cli/reth/db/get/static-file#reth-db-get-static-file","html":"</header>\n<p>Gets the content of a static file segment for the given key</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> db</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> get</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> static-file</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth db get static-file [OPTIONS] &lt;SEGMENT&gt; &lt;KEY&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Arguments:</span></span>\n<span class=\"line\"><span>  &lt;SEGMENT&gt;</span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - headers:      Static File segment responsible for the `CanonicalHeaders`, `Headers`, `HeaderTerminalDifficulties` tables</span></span>\n<span class=\"line\"><span>          - transactions: Static File segment responsible for the `Transactions` table</span></span>\n<span class=\"line\"><span>          - receipts:     Static File segment responsible for the `Receipts` table</span></span>\n<span class=\"line\"><span>          - block-meta:   Static File segment responsible for the `BlockBodyIndices`, `BlockOmmers`, `BlockWithdrawals` tables</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  &lt;KEY&gt;</span></span>\n<span class=\"line\"><span>          The key to get content for</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --raw</span></span>\n<span class=\"line\"><span>          Output bytes instead of human-readable decoded value</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nGets the content of a static file segment for the given key\n$ reth db get static-file --help\nUsage: reth db get static-file [OPTIONS] &lt;SEGMENT&gt; &lt;KEY&gt;\n\nArguments:\n  &lt;SEGMENT&gt;\n          Possible values:\n          - headers:      Static File segment responsible for the `CanonicalHeaders`, `Headers`, `HeaderTerminalDifficulties` tables\n          - transactions: Static File segment responsible for the `Transactions` table\n          - receipts:     Static File segment responsible for the `Receipts` table\n          - block-meta:   Static File segment responsible for the `BlockBodyIndices`, `BlockOmmers`, `BlockWithdrawals` tables\n\n  &lt;KEY&gt;\n          The key to get content for\n\nOptions:\n      --raw\n          Output bytes instead of human-readable decoded value\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth db get static-file","titles":[]},"307":{"href":"/cli/reth/p2p/rlpx/ping#reth-p2p-rlpx-ping","html":"</header>\n<p>ping node</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> p2p</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> rlpx</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ping</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth p2p rlpx ping [OPTIONS] &lt;NODE&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Arguments:</span></span>\n<span class=\"line\"><span>  &lt;NODE&gt;</span></span>\n<span class=\"line\"><span>          The node to ping</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nping node\n$ reth p2p rlpx ping --help\nUsage: reth p2p rlpx ping [OPTIONS] &lt;NODE&gt;\n\nArguments:\n  &lt;NODE&gt;\n          The node to ping\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth p2p rlpx ping","titles":[]},"308":{"href":"/cli/reth/stage/dump/account-hashing#reth-stage-dump-account-hashing","html":"</header>\n<p><code>AccountHashing</code> stage</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stage</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> dump</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> account-hashing</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth stage dump account-hashing [OPTIONS] --output-datadir &lt;OUTPUT_PATH&gt; --from &lt;FROM&gt; --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --output-datadir &lt;OUTPUT_PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to the new datadir folder.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -f, --from &lt;FROM&gt;</span></span>\n<span class=\"line\"><span>          From which block</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -t, --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span>          To which block</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -d, --dry-run</span></span>\n<span class=\"line\"><span>          If passed, it will dry-run a stage execution from the newly created database right after dumping</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nAccountHashing stage\n$ reth stage dump account-hashing --help\nUsage: reth stage dump account-hashing [OPTIONS] --output-datadir &lt;OUTPUT_PATH&gt; --from &lt;FROM&gt; --to &lt;TO&gt;\n\nOptions:\n      --output-datadir &lt;OUTPUT_PATH&gt;\n          The path to the new datadir folder.\n\n  -f, --from &lt;FROM&gt;\n          From which block\n\n  -t, --to &lt;TO&gt;\n          To which block\n\n  -d, --dry-run\n          If passed, it will dry-run a stage execution from the newly created database right after dumping\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth stage dump account-hashing","titles":[]},"309":{"href":"/cli/reth/stage/dump/execution#reth-stage-dump-execution","html":"</header>\n<p>Execution stage</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stage</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> dump</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> execution</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth stage dump execution [OPTIONS] --output-datadir &lt;OUTPUT_PATH&gt; --from &lt;FROM&gt; --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --output-datadir &lt;OUTPUT_PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to the new datadir folder.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -f, --from &lt;FROM&gt;</span></span>\n<span class=\"line\"><span>          From which block</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -t, --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span>          To which block</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -d, --dry-run</span></span>\n<span class=\"line\"><span>          If passed, it will dry-run a stage execution from the newly created database right after dumping</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nExecution stage\n$ reth stage dump execution --help\nUsage: reth stage dump execution [OPTIONS] --output-datadir &lt;OUTPUT_PATH&gt; --from &lt;FROM&gt; --to &lt;TO&gt;\n\nOptions:\n      --output-datadir &lt;OUTPUT_PATH&gt;\n          The path to the new datadir folder.\n\n  -f, --from &lt;FROM&gt;\n          From which block\n\n  -t, --to &lt;TO&gt;\n          To which block\n\n  -d, --dry-run\n          If passed, it will dry-run a stage execution from the newly created database right after dumping\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth stage dump execution","titles":[]},"310":{"href":"/cli/reth/stage/dump/merkle#reth-stage-dump-merkle","html":"</header>\n<p>Merkle stage</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stage</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> dump</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> merkle</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth stage dump merkle [OPTIONS] --output-datadir &lt;OUTPUT_PATH&gt; --from &lt;FROM&gt; --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --output-datadir &lt;OUTPUT_PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to the new datadir folder.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -f, --from &lt;FROM&gt;</span></span>\n<span class=\"line\"><span>          From which block</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -t, --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span>          To which block</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -d, --dry-run</span></span>\n<span class=\"line\"><span>          If passed, it will dry-run a stage execution from the newly created database right after dumping</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nMerkle stage\n$ reth stage dump merkle --help\nUsage: reth stage dump merkle [OPTIONS] --output-datadir &lt;OUTPUT_PATH&gt; --from &lt;FROM&gt; --to &lt;TO&gt;\n\nOptions:\n      --output-datadir &lt;OUTPUT_PATH&gt;\n          The path to the new datadir folder.\n\n  -f, --from &lt;FROM&gt;\n          From which block\n\n  -t, --to &lt;TO&gt;\n          To which block\n\n  -d, --dry-run\n          If passed, it will dry-run a stage execution from the newly created database right after dumping\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth stage dump merkle","titles":[]},"311":{"href":"/cli/reth/stage/dump/storage-hashing#reth-stage-dump-storage-hashing","html":"</header>\n<p><code>StorageHashing</code> stage</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stage</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> dump</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> storage-hashing</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth stage dump storage-hashing [OPTIONS] --output-datadir &lt;OUTPUT_PATH&gt; --from &lt;FROM&gt; --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>      --output-datadir &lt;OUTPUT_PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to the new datadir folder.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -f, --from &lt;FROM&gt;</span></span>\n<span class=\"line\"><span>          From which block</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -t, --to &lt;TO&gt;</span></span>\n<span class=\"line\"><span>          To which block</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -d, --dry-run</span></span>\n<span class=\"line\"><span>          If passed, it will dry-run a stage execution from the newly created database right after dumping</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nStorageHashing stage\n$ reth stage dump storage-hashing --help\nUsage: reth stage dump storage-hashing [OPTIONS] --output-datadir &lt;OUTPUT_PATH&gt; --from &lt;FROM&gt; --to &lt;TO&gt;\n\nOptions:\n      --output-datadir &lt;OUTPUT_PATH&gt;\n          The path to the new datadir folder.\n\n  -f, --from &lt;FROM&gt;\n          From which block\n\n  -t, --to &lt;TO&gt;\n          To which block\n\n  -d, --dry-run\n          If passed, it will dry-run a stage execution from the newly created database right after dumping\n\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth stage dump storage-hashing","titles":[]},"312":{"href":"/cli/reth/stage/unwind/num-blocks#reth-stage-unwind-num-blocks","html":"</header>\n<p>Unwinds the database from the latest block, until the given number of blocks have been reached</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stage</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> unwind</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> num-blocks</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth stage unwind num-blocks [OPTIONS] &lt;AMOUNT&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Arguments:</span></span>\n<span class=\"line\"><span>  &lt;AMOUNT&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nUnwinds the database from the latest block, until the given number of blocks have been reached\n$ reth stage unwind num-blocks --help\nUsage: reth stage unwind num-blocks [OPTIONS] &lt;AMOUNT&gt;\n\nArguments:\n  &lt;AMOUNT&gt;\n\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth stage unwind num-blocks","titles":[]},"313":{"href":"/cli/reth/stage/unwind/to-block#reth-stage-unwind-to-block","html":"</header>\n<p>Unwinds the database from the latest block, until the given block number or hash has been reached, that block is not included</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">$</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> reth</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> stage</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> unwind</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to-block</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Usage: reth stage unwind to-block [OPTIONS] &lt;TARGET&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Arguments:</span></span>\n<span class=\"line\"><span>  &lt;TARGET&gt;</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Options:</span></span>\n<span class=\"line\"><span>  -h, --help</span></span>\n<span class=\"line\"><span>          Print help (see a summary with &#x27;-h&#x27;)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Datadir:</span></span>\n<span class=\"line\"><span>      --chain &lt;CHAIN_OR_PATH&gt;</span></span>\n<span class=\"line\"><span>          The chain this node is running.</span></span>\n<span class=\"line\"><span>          Possible values are either a built-in chain or the path to a chain specification file.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Built-in chains:</span></span>\n<span class=\"line\"><span>              mainnet, sepolia, holesky, hoodi, dev</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: mainnet]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Logging:</span></span>\n<span class=\"line\"><span>      --log.stdout.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.stdout.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to stdout</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: ]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.format &lt;FORMAT&gt;</span></span>\n<span class=\"line\"><span>          The format to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: terminal]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging</span></span>\n<span class=\"line\"><span>          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications</span></span>\n<span class=\"line\"><span>          - terminal: Represents terminal-friendly formatting for logs</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to the log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: debug]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.directory &lt;PATH&gt;</span></span>\n<span class=\"line\"><span>          The path to put log files in</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: &lt;CACHE_DIR&gt;/logs]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-size &lt;SIZE&gt;</span></span>\n<span class=\"line\"><span>          The maximum size (in MB) of one log file</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 200]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.file.max-files &lt;COUNT&gt;</span></span>\n<span class=\"line\"><span>          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: 5]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald</span></span>\n<span class=\"line\"><span>          Write logs to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --log.journald.filter &lt;FILTER&gt;</span></span>\n<span class=\"line\"><span>          The filter to use for logs written to journald</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: error]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>      --color &lt;COLOR&gt;</span></span>\n<span class=\"line\"><span>          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          [default: always]</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          Possible values:</span></span>\n<span class=\"line\"><span>          - always: Colors on</span></span>\n<span class=\"line\"><span>          - auto:   Colors on</span></span>\n<span class=\"line\"><span>          - never:  Colors off</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>Display:</span></span>\n<span class=\"line\"><span>  -v, --verbosity...</span></span>\n<span class=\"line\"><span>          Set the minimum log level.</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>          -v      Errors</span></span>\n<span class=\"line\"><span>          -vv     Warnings</span></span>\n<span class=\"line\"><span>          -vvv    Info</span></span>\n<span class=\"line\"><span>          -vvvv   Debug</span></span>\n<span class=\"line\"><span>          -vvvvv  Traces (warning: very verbose!)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>  -q, --quiet</span></span>\n<span class=\"line\"><span>          Silence all log output</span></span></code></pre>","isPage":true,"text":"\nUnwinds the database from the latest block, until the given block number or hash has been reached, that block is not included\n$ reth stage unwind to-block --help\nUsage: reth stage unwind to-block [OPTIONS] &lt;TARGET&gt;\n\nArguments:\n  &lt;TARGET&gt;\n\n\nOptions:\n  -h, --help\n          Print help (see a summary with &#x27;-h&#x27;)\n\nDatadir:\n      --chain &lt;CHAIN_OR_PATH&gt;\n          The chain this node is running.\n          Possible values are either a built-in chain or the path to a chain specification file.\n\n          Built-in chains:\n              mainnet, sepolia, holesky, hoodi, dev\n\n          [default: mainnet]\n\nLogging:\n      --log.stdout.format &lt;FORMAT&gt;\n          The format to use for logs written to stdout\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.stdout.filter &lt;FILTER&gt;\n          The filter to use for logs written to stdout\n\n          [default: ]\n\n      --log.file.format &lt;FORMAT&gt;\n          The format to use for logs written to the log file\n\n          [default: terminal]\n\n          Possible values:\n          - json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n          - log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n          - terminal: Represents terminal-friendly formatting for logs\n\n      --log.file.filter &lt;FILTER&gt;\n          The filter to use for logs written to the log file\n\n          [default: debug]\n\n      --log.file.directory &lt;PATH&gt;\n          The path to put log files in\n\n          [default: &lt;CACHE_DIR&gt;/logs]\n\n      --log.file.max-size &lt;SIZE&gt;\n          The maximum size (in MB) of one log file\n\n          [default: 200]\n\n      --log.file.max-files &lt;COUNT&gt;\n          The maximum amount of log files that will be stored. If set to 0, background file logging is disabled\n\n          [default: 5]\n\n      --log.journald\n          Write logs to journald\n\n      --log.journald.filter &lt;FILTER&gt;\n          The filter to use for logs written to journald\n\n          [default: error]\n\n      --color &lt;COLOR&gt;\n          Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\n          [default: always]\n\n          Possible values:\n          - always: Colors on\n          - auto:   Colors on\n          - never:  Colors off\n\nDisplay:\n  -v, --verbosity...\n          Set the minimum log level.\n\n          -v      Errors\n          -vv     Warnings\n          -vvv    Info\n          -vvvv   Debug\n          -vvvvv  Traces (warning: very verbose!)\n\n  -q, --quiet\n          Silence all log output","title":"reth stage unwind to-block","titles":[]}},"dirtCount":0,"index":[["7",{"2":{"251":1}}],["793759034s",{"2":{"234":1}}],["789731z",{"2":{"234":1}}],["7275737420697320617765736f6d65",{"2":{"134":1}}],["❌",{"2":{"208":1}}],["✅",{"2":{"208":1}}],["+=",{"2":{"280":1}}],["+",{"2":{"189":1,"251":10,"302":4}}],["zero",{"2":{"235":1,"280":1}}],["zip",{"2":{"170":1}}],["zwea",{"2":{"21":1}}],["^",{"2":{"162":1}}],["🦀",{"2":{"156":1}}],["`canonicalheaders`",{"2":{"304":1,"306":1}}],["`storagehashing`",{"2":{"299":1}}],["`1000`",{"2":{"291":1}}],["`1`",{"2":{"251":1}}],["`blockwithdrawals`",{"2":{"304":1,"306":1}}],["`blockommers`",{"2":{"304":1,"306":1}}],["`blockbodyindices`",{"2":{"304":1,"306":1}}],["`block",{"2":{"251":1}}],["`blocks`",{"2":{"251":1}}],["`prune",{"2":{"251":3}}],["`accounthashing`",{"2":{"299":1}}],["`address`",{"2":{"251":2}}],["`auth",{"2":{"251":1,"302":1}}],["`minimum",{"2":{"251":1}}],["`ms`",{"2":{"251":1}}],["`n`",{"2":{"251":2}}],["`50ms`",{"2":{"251":1}}],["`transactions`",{"2":{"286":1,"304":1,"306":1}}],["`trace",{"2":{"251":1}}],["`tip",{"2":{"251":1}}],["`~",{"2":{"251":1}}],["`witness",{"2":{"251":1}}],["`websocket`",{"2":{"251":2}}],["`ws",{"2":{"251":1,"302":1}}],["`getpooledtransactions`",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["`reth",{"2":{"288":1}}],["`ress`",{"2":{"251":2}}],["`receipts`",{"2":{"155":1,"286":1,"304":1,"306":1}}],["`receipts",{"2":{"155":1}}],["`rlpx`",{"2":{"251":4,"252":4,"291":4,"292":4,"293":4,"300":4}}],["`ipc",{"2":{"251":1}}],["`instance`",{"2":{"251":4,"302":4}}],["`humantime",{"2":{"251":1}}],["`http",{"2":{"251":1,"302":1}}],["`headerterminaldifficulties`",{"2":{"304":1,"306":1}}],["`headers`",{"2":{"304":1,"306":1}}],["`head",{"2":{"155":3,"251":5}}],["`discovery",{"2":{"251":1,"302":1}}],["`$home",{"2":{"243":2,"245":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"290":2,"291":2,"292":2,"293":2,"297":2,"298":2,"299":2,"300":2,"301":2}}],["`$xdg",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["`",{"2":{"243":5,"245":5,"247":5,"248":5,"249":5,"250":5,"251":16,"252":10,"253":5,"290":5,"291":10,"292":10,"293":10,"297":5,"298":5,"299":5,"300":10,"301":5}}],["`engine",{"2":{"251":1}}],["`etherscan",{"2":{"251":1}}],["`eth",{"2":{"251":2}}],["`eth0`",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["`e",{"2":{"238":1}}],["`osal",{"2":{"238":1}}],["`0x`",{"2":{"286":1}}],["`0x00000000219ab540356cbb839cbe05303d7705fa`",{"2":{"200":1}}],["`0xdac17f958d2ee523a2206206994597c13d831ec7`",{"2":{"155":1}}],["`0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48`",{"2":{"155":1}}],["|b|",{"2":{"280":2}}],["|builder",{"2":{"258":1,"259":1,"260":1,"273":3,"274":2,"275":1,"279":1,"280":1}}],["|ctx|",{"2":{"259":1,"260":1,"274":1,"275":1,"279":1,"280":1}}],["||",{"2":{"187":2,"238":1}}],["|$",{"2":{"162":1}}],["|",{"2":{"51":1,"134":1,"162":2,"166":5,"167":3,"237":1,"258":1,"259":1,"260":1,"273":3,"274":2,"275":1,"279":1,"280":1}}],["==========================================",{"2":{"187":2}}],["================================================================",{"2":{"241":1}}],["========================================================",{"2":{"187":2}}],["=========================================",{"2":{"187":2}}],["=",{"2":{"137":5,"138":5,"139":1,"140":4,"141":2,"142":2,"143":1,"144":1,"145":1,"146":1,"147":1,"148":4,"149":2,"150":8,"151":4,"152":6,"155":15,"200":10,"238":1,"240":16,"251":3,"257":13,"258":1,"259":1,"260":12,"270":36,"271":2,"273":17,"274":24,"275":12,"276":12,"279":13,"280":10}}],["=https",{"2":{"51":1}}],["=zczg",{"2":{"21":1}}],["yaml",{"2":{"186":2,"187":1}}],["yet",{"2":{"170":1,"273":1}}],["yesrpcthe",{"2":{"87":1}}],["y",{"2":{"166":1,"167":1}}],["yml",{"2":{"38":6,"40":1,"170":4}}],["yourself",{"2":{"52":1}}],["your",{"0":{"186":1,"187":1},"2":{"5":3,"30":1,"31":1,"32":5,"37":1,"47":3,"48":1,"51":3,"52":3,"54":2,"56":1,"57":2,"58":2,"59":2,"87":2,"89":1,"136":1,"156":1,"158":2,"159":1,"160":1,"170":7,"171":1,"177":3,"185":2,"186":1,"187":6,"189":1,"190":1,"191":2,"234":1,"237":2,"239":4,"258":1,"261":1,"271":2,"277":2,"279":1}}],["you",{"2":{"2":1,"3":2,"5":1,"8":1,"9":2,"18":2,"19":4,"20":3,"23":1,"24":2,"31":2,"32":5,"33":1,"34":4,"37":1,"38":1,"39":1,"41":2,"46":1,"47":5,"48":2,"50":1,"51":2,"52":4,"53":3,"54":4,"56":1,"57":5,"58":2,"59":1,"84":1,"86":1,"87":5,"89":5,"91":1,"92":3,"103":1,"105":1,"106":1,"125":1,"148":1,"152":2,"153":1,"156":2,"157":7,"158":4,"159":1,"160":2,"161":1,"162":4,"170":10,"171":4,"174":2,"176":1,"185":3,"186":2,"187":2,"189":1,"190":1,"198":1,"199":1,"214":3,"233":1,"234":2,"237":2,"238":4,"239":2,"241":1,"251":1,"258":2,"259":1,"261":1,"265":1,"266":1,"270":1,"279":1,"280":1,"300":3}}],["60",{"2":{"251":1}}],["65",{"2":{"240":1}}],["67",{"2":{"240":1}}],["69",{"2":{"240":2}}],["62",{"2":{"240":1}}],["6",{"2":{"235":2,"257":1,"270":1}}],["6m",{"2":{"197":1}}],["63",{"2":{"187":1}}],["6833161",{"2":{"240":1}}],["68",{"2":{"51":1,"240":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["6frn7ss",{"2":{"21":1}}],["64gib",{"2":{"241":2}}],["64kb",{"2":{"28":1}}],["64",{"2":{"20":2,"23":1,"28":1,"32":1,"34":1,"69":1,"132":1,"167":1,"187":1}}],["xvfz",{"2":{"166":1,"167":1}}],["xxd",{"2":{"134":1}}],["x",{"2":{"53":2}}],["x86",{"2":{"20":2,"28":1,"34":1,"48":2,"69":1,"132":1,"167":1,"240":2}}],["x27",{"0":{"261":1},"2":{"2":4,"3":1,"5":1,"6":2,"7":2,"12":2,"13":1,"14":1,"15":4,"16":1,"19":1,"28":1,"31":1,"34":1,"35":1,"46":1,"47":4,"48":1,"51":4,"52":1,"54":1,"57":2,"103":2,"140":2,"148":4,"151":8,"156":2,"158":1,"159":1,"160":1,"162":5,"163":2,"166":2,"167":2,"170":4,"171":4,"174":1,"176":2,"180":1,"185":1,"189":1,"199":1,"200":1,"208":1,"214":3,"218":1,"223":1,"224":1,"226":1,"228":2,"229":2,"233":3,"234":2,"237":2,"238":2,"239":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":4,"250":2,"251":13,"252":5,"253":2,"254":2,"255":3,"256":1,"257":1,"258":1,"259":3,"260":12,"261":1,"265":1,"267":1,"270":2,"273":6,"274":3,"278":2,"279":10,"280":4,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":5,"292":5,"293":5,"294":2,"295":2,"296":2,"297":2,"298":3,"299":2,"300":6,"301":2,"302":3,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["9200",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["92dd5a0599dc",{"2":{"187":1}}],["96",{"2":{"240":1}}],["983476",{"2":{"240":1}}],["984428",{"2":{"240":1}}],["9551",{"2":{"177":2}}],["907239",{"2":{"240":1}}],["907733",{"2":{"240":1}}],["9000",{"2":{"187":4}}],["9001",{"2":{"37":4,"162":3,"170":2,"180":1,"187":2}}],["9090",{"2":{"40":2,"170":2}}],["9",{"2":{"20":2,"57":1}}],["~",{"2":{"17":1,"18":1,"51":1,"175":1,"187":1}}],["8mb",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["81",{"2":{"240":1}}],["8191",{"2":{"17":1}}],["8546",{"2":{"90":1,"182":2,"187":2,"251":1}}],["8545",{"2":{"89":1,"181":2,"187":2,"251":1}}],["8551",{"2":{"38":1,"157":2,"158":1,"183":2,"187":2,"196":1,"251":1}}],["8080",{"2":{"187":1}}],["8008",{"2":{"187":1}}],["80",{"2":{"51":1}}],["8032",{"2":{"17":1}}],["8tb",{"2":{"42":2,"44":2}}],["8g",{"2":{"17":1}}],["8gb",{"2":{"16":1,"46":1}}],["8",{"2":{"17":1}}],["kubernetes",{"0":{"188":1},"2":{"185":1,"188":2}}],["kurtosis",{"0":{"184":1,"188":1},"1":{"185":1,"186":1,"187":1,"188":1,"189":1,"190":1},"2":{"185":3,"187":4,"188":2,"190":1}}],["kib",{"2":{"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["kick",{"2":{"170":1}}],["kill",{"2":{"57":1}}],["killed",{"2":{"15":1}}],["killer",{"2":{"12":1,"15":1}}],["killing",{"2":{"12":1}}],["kb",{"2":{"32":1,"240":16}}],["k0",{"2":{"21":1}}],["known",{"2":{"13":1,"68":1,"156":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["know",{"2":{"12":1,"87":1,"270":1}}],["keeps",{"2":{"140":1}}],["keep",{"2":{"140":1,"155":4,"160":1,"171":1,"251":7,"261":1,"278":1,"280":2}}],["keeping",{"2":{"47":1}}],["keccak256",{"2":{"54":1}}],["keccak",{"2":{"54":3,"57":2,"133":1}}],["key`",{"2":{"251":1}}],["keymanager",{"2":{"187":1}}],["key=",{"2":{"277":1}}],["key=your",{"2":{"161":1}}],["key=value",{"2":{"6":2,"7":2,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["keystore",{"2":{"187":1}}],["keys",{"2":{"20":1,"226":1,"227":1,"286":1}}],["keyserver",{"2":{"20":3}}],["key",{"0":{"21":1},"2":{"20":3,"21":3,"57":1,"141":1,"142":1,"161":3,"166":2,"172":1,"187":1,"243":1,"249":1,"251":2,"252":2,"277":2,"281":4,"285":3,"286":3,"291":2,"292":2,"293":2,"300":2,"305":4,"306":4}}],["kernel",{"2":{"12":1,"17":1,"24":1,"28":2,"31":1,"32":6}}],["qlc",{"0":{"43":1},"2":{"43":5,"44":1,"48":1}}],["q",{"2":{"6":1,"7":1,"166":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["questions",{"0":{"190":1},"2":{"190":1}}],["queued",{"2":{"127":1,"251":7}}],["queried",{"2":{"281":1}}],["queries",{"2":{"2":1,"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["query",{"2":{"5":1}}],["querying",{"2":{"1":1,"191":1,"192":1}}],["quad",{"2":{"43":1}}],["quality",{"2":{"1":1}}],["quite",{"2":{"162":1}}],["quickly",{"2":{"12":1}}],["quiet",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["quot",{"2":{"2":4,"14":2,"17":2,"26":2,"28":2,"32":2,"44":2,"49":4,"54":6,"56":2,"60":6,"61":22,"62":6,"63":22,"64":6,"65":22,"66":6,"67":22,"68":4,"69":62,"70":12,"71":46,"72":78,"74":6,"75":6,"76":6,"77":6,"78":6,"79":6,"80":6,"81":6,"82":6,"83":6,"84":6,"89":2,"92":2,"94":6,"95":20,"96":6,"97":20,"98":6,"99":20,"101":6,"102":32,"107":6,"108":52,"109":6,"110":158,"111":6,"112":54,"113":6,"114":58,"115":6,"116":54,"117":6,"118":78,"119":6,"120":92,"121":6,"122":80,"123":6,"124":78,"126":6,"127":6,"128":6,"129":6,"131":4,"132":22,"133":6,"134":26,"155":6,"156":2,"158":2,"166":3,"167":1,"170":22,"172":2,"177":2,"183":4,"200":4,"241":2,"243":2,"245":2,"247":2,"248":2,"249":24,"250":2,"251":4,"252":2,"253":2,"256":2,"257":18,"258":4,"259":2,"260":8,"270":60,"271":4,"273":24,"274":30,"275":16,"276":8,"279":8,"280":4,"283":2,"290":2,"291":2,"292":2,"293":2,"297":2,"298":2,"299":2,"300":2,"301":2}}],["$xdg",{"2":{"135":1}}],["$home",{"2":{"51":2,"56":1,"135":2,"157":1}}],["$250",{"2":{"48":1}}],["$user",{"2":{"17":4}}],["$",{"2":{"6":1,"7":1,"53":2,"56":1,"166":1,"167":1,"216":2,"221":1,"222":1,"223":1,"235":3,"237":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"258":1,"270":2,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["📖",{"2":{"5":1}}],["j",{"2":{"286":1}}],["job",{"2":{"251":2}}],["journald",{"2":{"6":4,"7":4,"242":4,"243":4,"244":4,"245":4,"246":4,"247":4,"248":4,"249":4,"250":4,"251":4,"252":4,"253":4,"254":4,"255":4,"281":4,"282":4,"283":4,"284":4,"285":4,"286":4,"287":4,"288":4,"289":4,"290":4,"291":4,"292":4,"293":4,"294":4,"295":4,"296":4,"297":4,"298":4,"299":4,"300":4,"301":4,"302":4,"303":4,"304":4,"305":4,"306":4,"307":4,"308":4,"309":4,"310":4,"311":4,"312":4,"313":4}}],["junk",{"2":{"251":1}}],["jul",{"2":{"187":1}}],["just",{"2":{"41":1,"84":1,"92":1,"141":1,"142":1,"162":2,"170":1,"259":1,"262":1,"276":1,"279":1,"280":1}}],["jump",{"2":{"5":1,"258":1}}],["jwtsecret`",{"2":{"251":1}}],["jwtsecret",{"2":{"157":2,"177":1,"196":1,"251":2}}],["jwttoken",{"2":{"38":1}}],["jwt",{"2":{"38":4,"157":5,"158":1,"177":3,"187":1,"251":5}}],["jeprof",{"0":{"18":1},"2":{"11":1,"12":1,"13":1,"18":3}}],["jemalloc",{"0":{"13":1,"14":1},"1":{"14":1},"2":{"11":1,"12":1,"13":3,"14":11,"15":1,"18":11,"54":3}}],["jsonl",{"2":{"216":2,"223":1,"249":1}}],["jsonrpc",{"2":{"61":2,"63":2,"65":2,"67":2,"69":2,"71":1,"72":5,"87":1,"95":2,"97":2,"99":2,"102":2,"108":2,"110":2,"112":2,"114":2,"116":2,"118":2,"120":2,"122":2,"124":2,"132":2,"134":2}}],["json",{"0":{"86":1},"1":{"87":1,"88":1,"89":1,"90":1,"91":1,"92":1},"2":{"5":1,"6":6,"7":7,"79":1,"86":4,"89":2,"157":1,"159":1,"170":2,"242":6,"243":6,"244":6,"245":6,"246":7,"247":6,"248":6,"249":6,"250":6,"251":7,"252":6,"253":6,"254":6,"255":6,"281":6,"282":6,"283":6,"284":6,"285":6,"286":8,"287":6,"288":6,"289":6,"290":6,"291":6,"292":6,"293":6,"294":6,"295":6,"296":6,"297":6,"298":6,"299":6,"300":6,"301":6,"302":6,"303":6,"304":6,"305":6,"306":6,"307":6,"308":6,"309":6,"310":6,"311":6,"312":6,"313":6}}],["08t15",{"2":{"234":1}}],["0853f809c300",{"2":{"187":1}}],["06",{"2":{"240":1,"258":8}}],["063",{"2":{"223":1}}],["064",{"2":{"200":2}}],["04948fd8b1e3",{"2":{"187":1}}],["03",{"2":{"187":1}}],["09",{"2":{"187":1}}],["09t12",{"2":{"187":3}}],["00",{"2":{"187":4,"240":1}}],["000",{"2":{"140":4,"147":1,"155":5,"251":1}}],["01",{"2":{"187":3}}],["07",{"2":{"187":3}}],["0xe75fb554e433e03763a1560646ee22dcb74e5274b34c5ad644e7c0f619a7e1d0",{"2":{"200":1}}],["0xe421b3428564a5c509ac118bad93a3b84485ec3f927e214b0c4c23076d4bc4e0",{"2":{"134":1}}],["0xdac17f958d2ee523a2206206994597c13d831ec7",{"2":{"155":1}}],["0xd40aba8166a212d6892125f079c33e6f5ca19814",{"2":{"118":1}}],["0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675",{"2":{"112":1}}],["0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",{"2":{"69":1}}],["0x7e",{"2":{"172":1}}],["0x7eb25504e4c202cf3d62fd585d3e238f592c780cca82dacb2ed3cb5b38883add",{"2":{"118":1,"122":1,"124":1}}],["0x7275737420697320617765736f6d65",{"2":{"134":1}}],["0x2",{"2":{"228":1}}],["0x2bd2326c993dfaef84f696526064ff22eba5b362",{"2":{"122":1,"124":1}}],["0x2ed128",{"2":{"120":1}}],["0x2ed119",{"2":{"114":1,"118":1}}],["0x2ed0c4",{"2":{"120":1}}],["0x86df301bcdd8248d982dbf039f09faf792684e1aeee99d5b58b77d620008b80f",{"2":{"120":1}}],["0x8bbb73bcb5d553b5a556358d27625323fd781d37",{"2":{"120":2}}],["0x3",{"2":{"229":1}}],["0x3321a7708b1083130bd78da0d62ead9f6683033231617c9d268e2c7e3fa6c104",{"2":{"120":1}}],["0x3f0650ec47fd240000",{"2":{"120":1}}],["0x32be343b94f860124dc4fee278fdcbd38c102d88",{"2":{"120":1}}],["0x4c40d",{"2":{"120":1}}],["0x4768d7effc3fbe",{"2":{"118":1}}],["0x407d73d8a49eeb85d32cf465507dd71d507100c1",{"2":{"110":4}}],["0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",{"2":{"155":1}}],["0xaa7b131dc60b80d3cf5e59b5a21a666aa039c951",{"2":{"118":1}}],["0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",{"2":{"110":4}}],["0x1",{"2":{"227":1}}],["0x183",{"2":{"122":1,"124":1}}],["0x186a0",{"2":{"110":4}}],["0x16c72721",{"2":{"122":1,"124":1}}],["0x13e99",{"2":{"122":1,"124":1}}],["0x1c39ba39e4735cb65978d4db400ddd70a72dc750",{"2":{"122":1,"124":1}}],["0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3",{"2":{"122":2,"124":2}}],["0x1dcd12f8",{"2":{"110":2}}],["0x098f87b75c8b861c775984f9d5dbe7b70cbbbc30fc15adb03a5044de0144f2d0",{"2":{"216":1}}],["0x00000000219ab540356cbb839cbe05303d7705fa",{"2":{"200":1}}],["0x0000000000000000000000000000000000000000000000000000000000000001",{"2":{"122":1,"124":1}}],["0x07da28d752aba3b9dd7060005e554719c6205c8a3aea358599fc9b245c52f1f6",{"2":{"118":1}}],["0x02d4a872e096445e80d05276ee756cefef7f3b376bcec14246469c0cd97dad8f",{"2":{"116":1}}],["0x0",{"2":{"108":1,"110":2,"112":1,"114":1,"116":1,"118":2,"120":1,"122":2,"124":1,"226":1}}],["0x",{"2":{"108":2,"110":6,"112":2,"114":3,"116":2,"118":2,"120":2}}],["0xcd0c3e8af590364c09d0fa6a1210faf5",{"2":{"71":1,"72":3}}],["0xb83f73fbe6220c111136aefd27b160bf4a34085c65ba89f24246b3162257c36a",{"2":{"69":1}}],["0",{"2":{"4":2,"6":1,"7":1,"20":2,"34":2,"37":4,"40":1,"51":1,"61":2,"63":2,"65":2,"67":2,"69":3,"71":1,"72":5,"89":2,"95":2,"97":2,"99":2,"102":5,"108":3,"110":4,"112":3,"114":3,"116":3,"118":4,"120":3,"122":4,"124":4,"132":3,"134":2,"150":2,"152":2,"157":2,"162":4,"173":1,"177":3,"187":45,"196":2,"229":1,"237":2,"238":1,"241":5,"242":1,"243":2,"244":1,"245":2,"246":1,"247":2,"248":2,"249":2,"250":2,"251":23,"252":12,"253":2,"254":1,"255":1,"257":4,"263":2,"270":8,"273":2,"274":2,"275":1,"280":1,"281":1,"282":1,"283":2,"284":1,"285":1,"286":5,"287":1,"288":1,"289":1,"290":2,"291":12,"292":12,"293":12,"294":1,"295":1,"296":1,"297":2,"298":2,"299":2,"300":12,"301":2,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["577673z",{"2":{"258":1}}],["512",{"2":{"251":1}}],["512gb",{"2":{"24":1,"28":1,"32":1}}],["53",{"2":{"240":1}}],["538211b6b7d7",{"2":{"187":1}}],["5597659",{"2":{"240":1}}],["55c46a6555ad",{"2":{"187":1}}],["56365",{"2":{"240":1}}],["56471",{"2":{"240":1}}],["58",{"2":{"240":1}}],["524",{"2":{"147":1}}],["52",{"2":{"61":1,"63":1,"65":1,"67":1}}],["5054",{"2":{"187":1}}],["500",{"2":{"147":1,"251":1}}],["5000",{"2":{"143":1,"251":1}}],["500000000000",{"2":{"251":1}}],["50000000",{"2":{"251":1}}],["5000000",{"2":{"140":1,"144":1}}],["500000",{"2":{"140":1,"141":1,"142":1}}],["50",{"2":{"44":1,"140":1,"150":1,"251":1}}],["50fb7cc55b2e8afa59fe03b7aa5ed56a7fbf253e",{"2":{"20":1,"21":1}}],["5",{"2":{"2":1,"6":1,"7":1,"44":1,"137":1,"138":1,"155":2,"200":1,"235":2,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":8,"252":7,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":2,"287":1,"288":1,"289":1,"290":1,"291":6,"292":7,"293":7,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":6,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["4364ed9e95ca4e307729a4661bde4",{"2":{"258":1}}],["432939z",{"2":{"258":1}}],["438",{"2":{"238":1}}],["422380z",{"2":{"258":1}}],["420296z",{"2":{"258":1}}],["4gb",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["45",{"2":{"221":1}}],["4000",{"2":{"187":2}}],["4096",{"2":{"150":2,"251":2,"252":1,"291":1,"292":1,"293":1,"300":1}}],["414a075a37aa",{"2":{"187":1}}],["44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d",{"2":{"69":2,"71":2,"72":2}}],["4844",{"0":{"229":1},"2":{"225":1,"229":3,"290":1}}],["48",{"2":{"28":1,"32":1,"258":4}}],["4tb",{"2":{"28":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["4kb",{"2":{"24":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["4",{"2":{"2":1,"166":1,"167":1,"173":1,"223":1,"251":2,"252":2,"270":2,"291":2,"292":2,"293":2,"300":2}}],["38",{"2":{"240":1}}],["35",{"2":{"240":1}}],["35+02",{"2":{"187":3}}],["375",{"2":{"229":1}}],["34d0b9ff906b",{"2":{"187":1}}],["342gb",{"2":{"28":2}}],["3x",{"2":{"48":1}}],["3m",{"2":{"44":1,"151":1}}],["30797",{"2":{"237":2}}],["30796",{"2":{"237":2}}],["30s",{"2":{"151":1}}],["30",{"2":{"140":1,"149":1,"222":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["3068183",{"2":{"120":1}}],["3068185",{"2":{"118":1,"122":1,"124":1}}],["30000000",{"2":{"251":1}}],["3000",{"2":{"38":1,"170":1}}],["30303",{"2":{"37":5,"61":1,"63":1,"65":1,"67":1,"69":4,"71":2,"72":2,"179":1,"187":4,"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["3tb",{"2":{"28":1}}],["320",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["3200",{"2":{"241":2}}],["32807",{"2":{"187":1}}],["32806",{"2":{"187":1}}],["32809",{"2":{"187":1}}],["32808",{"2":{"187":1}}],["32802",{"2":{"187":1}}],["32805",{"2":{"187":1}}],["32801",{"2":{"187":1}}],["32804",{"2":{"187":1}}],["32803",{"2":{"187":1}}],["32817",{"2":{"187":1}}],["32810",{"2":{"187":1}}],["32816",{"2":{"187":1}}],["32815",{"2":{"187":1}}],["32814",{"2":{"187":1}}],["32813",{"2":{"187":1}}],["32812",{"2":{"187":1}}],["32811",{"2":{"187":1}}],["32775",{"2":{"187":1}}],["32774",{"2":{"187":1}}],["32777",{"2":{"187":1}}],["32776",{"2":{"187":1}}],["32",{"2":{"18":3,"152":1}}],["3",{"0":{"223":1},"2":{"2":1,"24":1,"26":1,"27":1,"47":1,"120":1,"234":1,"241":2,"251":1,"257":1,"270":3}}],["vc",{"2":{"187":1}}],["v5",{"2":{"177":2,"251":15,"252":15,"291":15,"292":15,"293":15,"300":15}}],["v4",{"2":{"177":4}}],["voilà",{"2":{"170":1}}],["volumes",{"2":{"232":1}}],["volume",{"2":{"37":1,"232":4,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["v$",{"2":{"166":1,"167":1}}],["vmtrace",{"2":{"105":1,"107":1,"108":1,"110":2,"112":1,"114":1,"116":1}}],["vm",{"2":{"105":1}}],["vx",{"2":{"53":1}}],["v0",{"2":{"20":2,"34":2,"69":1,"132":1}}],["vvvvv",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["vvvv",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["vvv",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["vv",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["v",{"2":{"6":3,"7":3,"37":1,"226":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["vital",{"2":{"183":1}}],["visit",{"2":{"166":1,"167":2}}],["visualizing",{"2":{"13":1}}],["violation",{"2":{"152":1}}],["violations",{"2":{"150":1}}],["virtual",{"0":{"25":1},"1":{"26":1,"27":1,"28":1,"29":1},"2":{"24":1,"26":2,"27":3,"28":1,"32":1,"58":2}}],["viewing",{"2":{"171":1}}],["view",{"2":{"5":1}}],["via",{"2":{"2":2,"34":1,"38":1,"52":2,"54":2,"160":1,"161":1,"175":1,"251":1}}],["vranken",{"2":{"4":1}}],["v1",{"2":{"4":1}}],["vaults",{"2":{"172":1}}],["var",{"2":{"232":1}}],["varying",{"2":{"44":1}}],["vary",{"2":{"28":1}}],["variables",{"2":{"279":1}}],["variable",{"2":{"18":1,"56":1,"161":1,"251":1}}],["various",{"2":{"4":1,"7":1,"150":2,"157":1,"172":1,"185":1,"187":1,"225":1,"244":1}}],["validity",{"2":{"156":2}}],["validation",{"2":{"251":4}}],["validate",{"2":{"49":1,"156":1,"184":1}}],["validates",{"2":{"3":1}}],["validators",{"2":{"156":1,"158":1,"187":1}}],["validator",{"2":{"47":1,"187":3}}],["valid",{"2":{"30":1,"103":1,"156":2}}],["value",{"2":{"28":1,"110":4,"118":1,"120":1,"122":1,"124":1,"137":1,"138":1,"140":1,"158":1,"226":1,"249":1,"251":5,"252":1,"279":1,"286":5,"291":1,"292":1,"293":1,"300":1,"305":1,"306":1}}],["values",{"2":{"6":3,"7":3,"32":3,"140":1,"162":1,"234":1,"235":2,"242":3,"243":6,"244":3,"245":6,"246":4,"247":6,"248":6,"249":6,"250":6,"251":9,"252":6,"253":6,"254":3,"255":3,"281":4,"282":4,"283":6,"284":4,"285":4,"286":5,"287":4,"288":4,"289":4,"290":6,"291":6,"292":6,"293":6,"294":3,"295":3,"296":3,"297":6,"298":7,"299":6,"300":7,"301":6,"302":4,"303":4,"304":5,"305":4,"306":5,"307":3,"308":4,"309":4,"310":4,"311":4,"312":4,"313":4}}],["valuable",{"2":{"12":1}}],["vectors",{"0":{"302":1},"2":{"302":3}}],["verifying",{"2":{"258":1}}],["verify",{"0":{"159":1},"2":{"20":3,"159":1,"177":1}}],["verification",{"0":{"20":1},"1":{"21":1}}],["verbose",{"2":{"6":1,"7":1,"162":1,"242":1,"243":3,"244":1,"245":3,"246":1,"247":3,"248":3,"249":3,"250":3,"251":3,"252":3,"253":3,"254":1,"255":1,"281":1,"282":1,"283":3,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":3,"291":3,"292":3,"293":3,"294":1,"295":1,"296":1,"297":3,"298":3,"299":3,"300":3,"301":3,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["verbosity",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["very",{"2":{"6":1,"7":1,"54":1,"140":1,"171":1,"229":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"260":1,"276":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["versioned",{"2":{"229":2}}],["version✅✅✅✅✅",{"2":{"211":1}}],["version=$",{"2":{"166":1,"167":1}}],["versions",{"2":{"28":1,"33":1,"101":1,"243":1,"289":1}}],["version",{"0":{"98":1,"289":1},"1":{"99":1},"2":{"6":2,"7":2,"33":1,"34":3,"35":1,"51":8,"53":4,"57":4,"98":1,"99":1,"131":1,"166":3,"167":4,"170":2,"205":1,"243":1,"251":9,"252":8,"257":1,"270":2,"289":2,"291":8,"292":8,"293":8,"300":8}}],["ve",{"2":{"2":1,"13":1,"34":1,"170":1,"260":3}}],["2mib",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["26",{"2":{"240":1}}],["260",{"2":{"152":1}}],["239067",{"2":{"240":1}}],["235",{"2":{"223":1}}],["2930",{"0":{"227":1},"2":{"225":1,"227":1}}],["2s",{"2":{"172":1}}],["288",{"2":{"147":1}}],["28213",{"2":{"17":1}}],["219112",{"2":{"240":1}}],["2147483648",{"2":{"138":1,"150":1}}],["218760",{"2":{"17":1}}],["2718",{"2":{"76":1,"77":1}}],["220248",{"2":{"240":1}}],["22",{"2":{"44":1}}],["2048",{"2":{"251":1}}],["2097152",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["2021",{"2":{"257":1,"270":1}}],["2023",{"2":{"234":1}}],["2024",{"2":{"44":1,"187":4,"197":1,"258":4}}],["2025",{"2":{"44":1}}],["20",{"2":{"33":1,"54":1,"152":1,"251":7,"252":1,"291":1,"292":1,"293":1,"300":1}}],["2000",{"2":{"251":1}}],["20000",{"2":{"251":1}}],["200",{"2":{"6":1,"7":1,"138":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":4,"252":2,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":2,"292":2,"293":2,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":2,"301":1,"302":2,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["25",{"2":{"251":1}}],["25600",{"2":{"150":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["256",{"2":{"133":1,"251":2}}],["256tb",{"2":{"28":1}}],["256gb",{"2":{"26":1,"27":1}}],["257668",{"2":{"17":1}}],["2gb",{"2":{"15":1,"138":1}}],["241650",{"2":{"240":1}}],["24mbps",{"2":{"47":1}}],["24mbps+",{"2":{"42":1}}],["24mbps+stable",{"2":{"42":1}}],["244761",{"2":{"17":1}}],["24",{"2":{"4":1,"234":1,"241":2}}],["2",{"0":{"187":1,"222":1},"2":{"2":1,"4":1,"20":1,"42":1,"44":1,"51":2,"58":1,"61":2,"63":2,"65":2,"67":2,"69":2,"71":1,"72":7,"95":2,"97":2,"99":2,"102":2,"108":2,"110":2,"112":2,"114":2,"116":2,"118":2,"120":2,"122":3,"124":3,"132":2,"134":2,"166":1,"167":1,"185":1,"187":4,"198":1,"214":1,"234":1,"251":7,"252":1,"270":2,"291":1,"292":1,"293":1,"300":1,"302":2}}],["1g",{"2":{"241":1}}],["14",{"2":{"240":1}}],["14tb",{"2":{"198":1}}],["11",{"2":{"234":1,"270":2}}],["11052984",{"2":{"200":3}}],["131072",{"2":{"251":2,"252":1,"291":1,"292":1,"293":1,"300":1}}],["130",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["13",{"0":{"233":1},"2":{"230":1,"232":1,"233":1}}],["13tb",{"2":{"200":1}}],["1h",{"2":{"151":1}}],["1s",{"2":{"148":1}}],["15",{"2":{"251":1}}],["1554846",{"2":{"240":1}}],["1557497",{"2":{"240":1}}],["1559",{"0":{"228":1},"2":{"172":2,"225":1,"226":1,"227":1,"228":3,"229":1}}],["15m",{"2":{"151":1}}],["1500000000000",{"2":{"140":1}}],["159",{"2":{"17":1}}],["185",{"2":{"61":1,"63":1,"65":1,"67":1}}],["188",{"2":{"61":1,"63":1,"65":1,"67":1}}],["160",{"2":{"251":1}}],["16384",{"2":{"150":3}}],["168",{"2":{"71":2,"72":2,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["16",{"2":{"61":1,"63":1,"65":1,"67":1,"251":1}}],["1tb",{"2":{"58":1}}],["1m",{"2":{"44":1}}],["1763433",{"2":{"240":1}}],["1765222",{"2":{"240":1}}],["17000000",{"2":{"155":2}}],["17334254859343145000",{"2":{"69":1}}],["17",{"2":{"40":1,"234":1}}],["172",{"2":{"40":1}}],["10800",{"2":{"251":1}}],["10g",{"2":{"241":1}}],["105",{"2":{"223":1}}],["1024",{"2":{"147":2,"150":1,"251":3}}],["10m",{"2":{"140":1,"234":1}}],["10064",{"2":{"192":1,"200":2,"203":7,"204":10,"206":8}}],["1001",{"2":{"155":1}}],["100",{"2":{"120":1,"137":2,"138":1,"149":1,"155":5,"221":1,"222":1,"251":6,"252":1,"291":1,"292":1,"293":1,"300":1,"302":2}}],["100001",{"2":{"155":1}}],["100000`",{"2":{"155":3}}],["100000",{"2":{"139":1,"141":1,"142":1,"145":1,"146":1,"251":1}}],["10000",{"2":{"137":1,"251":4,"273":4,"274":2,"275":1,"276":1}}],["1000",{"2":{"120":1,"137":1,"138":1,"155":1,"251":1,"291":1}}],["10",{"2":{"33":2,"52":1,"97":1,"162":1,"200":2,"223":1,"251":3}}],["10695",{"2":{"17":1}}],["1920000",{"2":{"155":5}}],["192",{"2":{"71":2,"72":2,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["19",{"2":{"18":3,"44":1,"197":1}}],["12t16",{"2":{"258":4}}],["12s",{"2":{"251":1}}],["125200000",{"2":{"216":2}}],["120",{"2":{"152":1}}],["12h",{"2":{"148":1}}],["12345",{"2":{"89":1}}],["127",{"2":{"89":1,"157":1,"162":2,"187":22,"196":1,"251":3}}],["128",{"2":{"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["128tb",{"2":{"28":1}}],["128gb",{"2":{"16":1}}],["12",{"2":{"17":1,"187":1,"251":1,"270":1}}],["1",{"0":{"186":1,"221":1},"2":{"2":1,"4":1,"20":1,"34":2,"39":1,"40":1,"42":1,"44":1,"47":1,"51":3,"57":1,"61":2,"63":2,"65":2,"67":2,"69":4,"71":4,"72":6,"89":1,"95":2,"97":2,"98":1,"99":3,"102":5,"108":2,"109":1,"110":2,"112":2,"114":2,"116":2,"118":2,"120":2,"122":2,"124":2,"132":3,"134":2,"157":1,"162":2,"167":1,"173":1,"187":25,"196":1,"200":1,"219":1,"222":2,"223":1,"235":1,"237":2,"238":1,"240":16,"241":2,"251":17,"252":2,"257":1,"270":6,"271":1,"273":8,"274":6,"275":3,"276":1,"291":2,"292":2,"293":2,"300":2,"302":3}}],["guaranteed",{"2":{"251":1}}],["gui",{"2":{"162":1}}],["guidelines",{"2":{"8":1}}],["guide",{"2":{"5":1,"156":1,"185":2}}],["guido",{"2":{"4":1}}],["global",{"2":{"156":1}}],["gascap",{"2":{"251":1}}],["gaslimit",{"2":{"226":1,"251":1}}],["gasprice",{"2":{"226":1,"228":2,"251":1}}],["gasprice✅✅✅✅✅eth",{"2":{"210":1}}],["gaspriceeth",{"2":{"204":1}}],["gasused",{"2":{"108":1,"110":2,"112":1,"114":1,"116":1,"118":1,"120":1,"122":1,"124":1}}],["gas",{"2":{"106":1,"110":2,"118":1,"120":1,"122":1,"124":1,"140":2,"227":1,"228":3,"229":3,"251":11}}],["gaming",{"2":{"43":1}}],["gcp",{"2":{"44":1}}],["ghcr",{"2":{"34":3,"37":1,"186":2}}],["gz",{"2":{"20":2,"166":2,"167":2}}],["gnu",{"2":{"20":2,"69":1,"132":1}}],["gpo",{"2":{"251":6}}],["gpg",{"2":{"20":3,"166":1}}],["gpl",{"2":{"2":1}}],["g",{"2":{"17":2,"34":1,"49":4,"98":1,"170":1,"173":1,"174":2,"185":1,"216":1,"240":1,"243":2,"245":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"283":2,"290":2,"291":2,"292":2,"293":2,"297":2,"298":2,"299":2,"300":2,"301":2}}],["goes",{"2":{"271":1}}],["go",{"2":{"185":4,"214":1,"260":1}}],["gossiped",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["gossiping",{"2":{"177":1}}],["gossip",{"2":{"177":1}}],["google",{"2":{"176":1}}],["going",{"2":{"16":1,"163":1,"185":1,"279":1}}],["goals",{"0":{"2":1}}],["grpc",{"0":{"272":1,"273":1},"1":{"273":1,"274":1,"275":1},"2":{"268":3,"270":2,"272":1,"273":12,"274":8,"275":4,"276":1,"277":1}}],["grep",{"2":{"162":1,"166":1,"167":1}}],["greater",{"2":{"234":1,"263":1}}],["great",{"2":{"0":1,"12":1,"162":1,"187":1}}],["group",{"2":{"191":1}}],["grouped",{"2":{"86":1,"87":1,"127":1}}],["grows",{"2":{"42":1}}],["grow",{"2":{"32":1}}],["growth",{"2":{"28":1,"198":1,"243":3,"245":3,"247":3,"248":3,"249":3,"250":3,"251":3,"252":3,"253":3,"283":3,"290":3,"291":3,"292":3,"293":3,"297":3,"298":3,"299":3,"300":3,"301":3}}],["growing",{"0":{"159":1},"2":{"15":1}}],["gradually",{"2":{"200":1}}],["granular",{"2":{"155":1}}],["grafana",{"0":{"40":1,"162":1,"163":1},"1":{"163":1,"164":2,"165":2,"166":2,"167":2,"168":2,"169":2,"170":2,"171":1},"2":{"38":2,"40":3,"41":1,"163":2,"164":1,"166":5,"167":5,"169":1,"170":13,"171":1,"185":1,"189":1,"198":1,"234":2}}],["graph",{"2":{"15":1}}],["grub",{"2":{"17":2}}],["getproof",{"2":{"251":1}}],["gets",{"2":{"243":1,"285":3,"305":1,"306":1}}],["getstorageat✅✅✅✅❌eth",{"2":{"210":1}}],["getstorageatonly",{"2":{"204":1}}],["get✅❌✅❌❌trace",{"2":{"212":1}}],["getlogs✅✅❌✅✅eth",{"2":{"210":1}}],["getlogsonly",{"2":{"204":1}}],["getcode✅✅✅✅✅eth",{"2":{"210":1}}],["getcodeeth",{"2":{"204":1}}],["getonly",{"2":{"206":1}}],["getunclecountbyblocknumber✅✅✅✅✅eth",{"2":{"210":1}}],["getunclecountbyblocknumbereth",{"2":{"204":1}}],["getunclecountbyblockhash✅✅✅✅✅eth",{"2":{"210":1}}],["getunclecountbyblockhasheth",{"2":{"204":1}}],["getunclebyblocknumberandindex✅✅✅✅✅eth",{"2":{"210":1}}],["getunclebyblocknumberandindexeth",{"2":{"204":1}}],["getunclebyblockhashandindex✅✅✅✅✅eth",{"2":{"210":1}}],["getunclebyblockhashandindexeth",{"2":{"204":1}}],["gettransactionreceipt✅❌❌✅✅eth",{"2":{"210":1}}],["gettransactionreceiptonly",{"2":{"204":1}}],["gettransactioncount✅✅✅❌✅eth",{"2":{"210":1}}],["gettransactioncountonly",{"2":{"204":1}}],["gettransactionbyhash✅❌✅✅✅eth",{"2":{"210":1}}],["gettransactionbyhasheth",{"2":{"204":1}}],["gettransactionbyblocknumberandindex✅✅✅✅✅eth",{"2":{"210":1}}],["gettransactionbyblocknumberandindexeth",{"2":{"204":1}}],["gettransactionbyblockhashandindex✅✅✅✅✅eth",{"2":{"210":1}}],["gettransactionbyblockhashandindexeth",{"2":{"204":1}}],["getting",{"2":{"104":1,"162":1}}],["getfilterlogs✅✅❌✅✅eth",{"2":{"210":1}}],["getfilterlogsonly",{"2":{"204":1}}],["getfilterchanges✅✅✅✅✅eth",{"2":{"210":1}}],["getfilterchangeseth",{"2":{"204":1}}],["getblocktransactioncountbynumber✅✅✅✅✅eth",{"2":{"210":1}}],["getblocktransactioncountbynumbereth",{"2":{"204":1}}],["getblocktransactioncountbyhash✅✅✅✅✅eth",{"2":{"210":1}}],["getblocktransactioncountbyhasheth",{"2":{"204":1}}],["getblockbynumber✅✅✅✅✅eth",{"2":{"210":1}}],["getblockbynumbereth",{"2":{"204":1}}],["getblockbyhash✅✅✅✅✅eth",{"2":{"210":1}}],["getblockbyhasheth",{"2":{"204":1}}],["getblockreceipts✅✅❌✅✅eth",{"2":{"210":1}}],["getblockreceiptsonly",{"2":{"204":1}}],["getblockreceipts",{"2":{"103":1}}],["getbalance✅✅✅❌✅eth",{"2":{"210":1}}],["getbalanceonly",{"2":{"204":1}}],["getbadblocks",{"0":{"78":1},"2":{"78":1}}],["getrawreceipts✅✅❌✅✅debug",{"2":{"209":1}}],["getrawreceiptsonly",{"2":{"203":1}}],["getrawreceipts",{"0":{"77":1},"2":{"77":1}}],["getrawtransaction✅❌✅✅✅debug",{"2":{"209":1}}],["getrawtransactiondebug",{"2":{"203":1}}],["getrawtransaction",{"0":{"76":1},"2":{"76":1}}],["getrawblock✅✅✅✅✅debug",{"2":{"209":1}}],["getrawblockdebug",{"2":{"203":1}}],["getrawblock",{"0":{"75":1},"2":{"75":1}}],["getrawheader✅✅✅✅✅debug",{"2":{"209":1}}],["getrawheaderdebug",{"2":{"203":1}}],["getrawheader",{"0":{"74":1},"2":{"74":1}}],["geth",{"2":{"73":1,"87":1,"104":1,"172":1,"174":1,"177":1,"216":1,"219":5,"222":1}}],["get",{"0":{"48":1,"121":1,"285":1,"305":1,"306":1},"1":{"122":1},"2":{"9":1,"32":1,"41":1,"47":1,"51":1,"54":1,"89":1,"100":1,"106":1,"121":1,"122":1,"131":1,"133":1,"162":1,"166":3,"199":1,"243":1,"247":1,"276":1,"279":1,"280":2,"285":2,"305":4,"306":3}}],["generating",{"2":{"251":1}}],["generation",{"2":{"187":1,"251":1}}],["generator",{"2":{"185":1}}],["generated",{"2":{"103":1,"157":1,"185":1,"187":1,"244":1,"251":1,"291":1}}],["generate",{"2":{"38":2,"251":1,"270":1,"271":1,"302":1}}],["generates",{"2":{"13":1,"140":1,"302":1}}],["generally",{"2":{"46":1,"51":1,"59":1,"87":1,"140":1,"162":1,"251":1}}],["general",{"2":{"8":1,"13":1,"45":1,"54":1,"68":1,"185":1}}],["genesis",{"0":{"246":1},"2":{"2":1,"7":3,"47":1,"69":1,"177":2,"185":2,"187":4,"192":1,"218":1,"221":1,"222":1,"246":3,"249":2,"250":1,"258":1}}],["geared",{"2":{"8":1}}],["gives",{"2":{"104":1}}],["given",{"2":{"7":1,"28":1,"54":1,"60":1,"64":1,"83":1,"84":1,"89":1,"107":1,"117":1,"119":3,"121":1,"123":1,"133":1,"243":2,"244":1,"251":1,"252":1,"254":1,"255":1,"282":1,"285":4,"296":1,"299":1,"300":1,"301":3,"305":1,"306":1,"312":1,"313":1}}],["git",{"2":{"19":2,"32":1,"52":1,"53":2,"175":2,"235":1,"237":1,"257":8,"270":10}}],["github",{"0":{"34":1},"2":{"5":1,"18":2,"32":1,"33":1,"34":1,"37":1,"52":1,"166":2,"167":2,"175":1,"187":1,"191":1,"235":1,"237":1,"257":4,"270":5}}],["gigabyte",{"2":{"17":1}}],["gt",{"2":{"6":11,"7":11,"17":1,"18":4,"61":1,"63":1,"65":1,"67":1,"69":1,"72":2,"95":1,"97":1,"99":1,"102":1,"108":1,"110":1,"112":1,"114":1,"116":1,"118":1,"120":1,"122":1,"124":1,"132":1,"134":2,"155":1,"157":2,"160":1,"161":1,"177":3,"187":22,"221":2,"222":2,"223":2,"224":1,"242":11,"243":20,"244":11,"245":20,"246":11,"247":21,"248":22,"249":31,"250":19,"251":168,"252":54,"253":19,"254":11,"255":11,"258":2,"259":6,"260":11,"263":1,"273":28,"274":36,"275":18,"276":5,"279":16,"280":19,"281":16,"282":12,"283":21,"284":11,"285":12,"286":19,"287":11,"288":11,"289":11,"290":28,"291":55,"292":54,"293":56,"294":12,"295":12,"296":11,"297":19,"298":21,"299":20,"300":60,"301":20,"302":12,"303":13,"304":13,"305":15,"306":15,"307":12,"308":17,"309":17,"310":17,"311":17,"312":13,"313":13}}],["hypothetical",{"2":{"104":1,"105":1}}],["hdds",{"2":{"44":1}}],["http",{"0":{"89":1,"181":1},"2":{"40":2,"86":1,"88":1,"89":24,"90":1,"92":4,"157":4,"158":1,"170":2,"177":6,"181":2,"182":1,"187":9,"247":1,"251":20,"276":1}}],["https",{"2":{"18":1,"32":1,"51":1,"52":1,"89":1,"158":1,"166":6,"167":5,"175":1,"177":1,"200":1,"219":1,"224":1,"235":1,"237":1,"245":2,"257":4,"270":5}}],["human",{"2":{"6":2,"7":2,"14":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":3,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":3,"306":3,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["h",{"2":{"6":2,"7":2,"241":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["hook",{"2":{"251":4}}],["hoodi",{"2":{"243":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1,"303":1,"304":1,"305":1,"306":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["holesky",{"2":{"243":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"258":2,"267":1,"277":2,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["hold",{"2":{"152":1}}],["hoc",{"0":{"105":1},"2":{"104":1,"105":2}}],["home",{"2":{"56":1,"135":1,"170":1,"171":1,"186":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["homebrew",{"2":{"19":2,"164":1,"170":1}}],["hosted",{"2":{"247":1}}],["host",{"2":{"40":1,"238":1,"247":2}}],["however",{"2":{"14":1,"43":1,"222":1}}],["how",{"0":{"17":1,"262":1,"267":1},"1":{"263":1},"2":{"12":5,"16":1,"28":1,"58":1,"103":1,"136":1,"140":1,"148":3,"149":1,"162":1,"185":2,"190":1,"191":1,"194":1,"195":1,"196":1,"230":1,"251":3,"261":1,"267":2,"268":1,"278":1,"279":1,"286":1}}],["hours",{"2":{"4":1,"44":1,"47":1,"49":1,"235":2}}],["hobbyists",{"2":{"2":1}}],["hope",{"2":{"2":1}}],["hildr",{"2":{"174":1,"176":1}}],["hit",{"2":{"140":1,"170":1}}],["hive",{"2":{"4":1}}],["historytxpool",{"2":{"213":1}}],["historytrace",{"2":{"212":1}}],["historynet",{"2":{"211":1}}],["historyeth",{"2":{"210":1}}],["historydebug",{"2":{"209":1}}],["historystorage",{"2":{"209":1,"210":1,"211":1,"212":1,"213":1}}],["history590gb",{"2":{"199":1}}],["history235gbstorage",{"2":{"199":1}}],["history",{"0":{"145":1,"146":1},"2":{"3":1,"135":2,"145":2,"146":2,"155":6,"200":4,"201":2,"251":6,"252":1,"291":1,"292":1,"293":1,"298":4,"300":5}}],["historical",{"2":{"2":1,"3":3,"104":1,"105":1,"137":1,"138":1,"140":1,"155":2,"191":2,"192":3,"201":1,"215":1,"228":1,"249":1,"251":2,"262":1}}],["highest",{"2":{"54":1}}],["higher",{"2":{"33":1,"43":3,"45":1,"46":1,"228":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":2,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["high",{"2":{"0":2,"1":1,"17":1,"49":1,"151":1}}],["highly",{"2":{"0":1,"16":1,"44":1}}],["had",{"2":{"279":1}}],["happy",{"2":{"191":1}}],["happens",{"2":{"18":1,"157":1}}],["happening",{"2":{"17":1}}],["happen",{"2":{"15":1}}],["harder",{"2":{"279":1}}],["hard",{"2":{"58":1}}],["hardware",{"0":{"42":1,"48":1,"239":1},"1":{"43":1,"44":1,"45":1,"46":1,"47":1,"240":1,"241":1},"2":{"1":1,"2":1,"12":1,"16":3,"42":1,"48":1,"136":1,"230":1,"237":1,"239":4}}],["handle",{"2":{"258":2,"259":2,"260":2,"273":10,"274":6,"275":3,"279":2,"280":2}}],["handling",{"0":{"103":1},"2":{"257":1}}],["hand",{"2":{"43":1}}],["half",{"2":{"28":1}}],["hash=0xb5f7f912443c940f21fd611f12828d75b53",{"2":{"258":1}}],["hash=0xb7de1d6620efbdd3aa8547c47a0ff09a7fd3e48ba3fd2c53ce94c6683ed66e7c",{"2":{"234":1}}],["hashes",{"2":{"141":1,"142":1,"144":1,"229":2,"251":3,"252":2,"291":2,"292":2,"293":2,"300":2}}],["hashing",{"0":{"141":1,"142":1,"308":1,"311":1},"2":{"135":2,"141":2,"142":2,"143":2,"298":6,"299":2,"300":6,"308":2,"311":2}}],["hash",{"2":{"75":1,"76":1,"81":2,"83":2,"84":1,"107":1,"109":1,"115":1,"119":1,"121":1,"123":1,"133":1,"141":1,"142":1,"160":2,"224":2,"249":3,"251":2,"260":1,"274":2,"275":1,"279":1,"280":1,"288":1,"294":1,"295":1,"301":1,"313":1}}],["has",{"2":{"8":1,"12":1,"14":1,"15":1,"18":1,"48":1,"78":1,"91":1,"103":1,"136":1,"143":1,"157":1,"172":1,"173":1,"177":4,"192":3,"222":1,"225":1,"237":1,"251":1,"260":1,"262":1,"279":1,"300":1,"301":1,"313":1}}],["have",{"2":{"4":1,"15":1,"18":1,"20":1,"23":1,"27":1,"31":1,"33":1,"41":1,"43":6,"48":1,"51":1,"54":1,"57":1,"83":1,"137":1,"138":1,"152":1,"157":1,"158":2,"160":2,"171":1,"172":1,"185":2,"187":1,"190":1,"191":1,"214":1,"225":1,"233":1,"234":1,"251":2,"258":1,"263":1,"268":2,"270":2,"273":1,"277":1,"300":1,"301":1,"302":1,"312":1}}],["having",{"2":{"2":1,"15":1,"279":1}}],["hence",{"2":{"279":1}}],["height",{"2":{"260":1,"291":1,"293":1,"300":1}}],["hello",{"0":{"256":1,"260":1},"1":{"257":1,"258":1,"259":1,"260":1,"261":1},"2":{"256":1,"267":1,"270":1,"278":1}}],["held",{"2":{"147":1}}],["helper",{"2":{"19":1}}],["helpful",{"2":{"18":1}}],["help",{"2":{"1":1,"6":3,"7":5,"12":1,"16":1,"52":1,"224":1,"242":3,"243":5,"244":5,"245":3,"246":3,"247":3,"248":3,"249":3,"250":3,"251":3,"252":5,"253":3,"254":5,"255":5,"281":3,"282":5,"283":3,"284":3,"285":5,"286":3,"287":3,"288":3,"289":3,"290":3,"291":3,"292":3,"293":3,"294":3,"295":3,"296":5,"297":3,"298":3,"299":5,"300":3,"301":5,"302":3,"303":3,"304":3,"305":3,"306":3,"307":3,"308":3,"309":3,"310":3,"311":3,"312":3,"313":3}}],["hex`",{"2":{"251":2}}],["hex",{"2":{"38":1,"157":2,"177":2,"251":2}}],["hear",{"2":{"191":1}}],["healthy",{"2":{"251":2}}],["health",{"0":{"241":1},"2":{"159":1,"237":1,"241":1}}],["header",{"0":{"295":1},"2":{"74":1,"137":1,"162":1,"249":8,"252":2,"295":4}}],["headers",{"0":{"137":1},"2":{"47":1,"135":1,"137":6,"140":1,"159":1,"247":2,"248":1,"251":3,"298":2,"300":2,"301":1,"304":1,"306":1}}],["head",{"2":{"69":1,"155":1}}],["heavy",{"2":{"43":1,"46":1,"276":1}}],["heavily",{"2":{"2":1}}],["heap",{"2":{"12":1,"14":1,"18":2}}],["here",{"2":{"4":1,"5":2,"8":2,"19":1,"32":1,"43":1,"44":1,"58":1,"126":1,"127":1,"128":1,"129":1,"161":1,"170":2,"185":4,"187":1,"188":1,"216":1,"260":1,"263":1,"279":1,"280":1}}],["n`",{"2":{"251":5}}],["nfs",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["ns",{"2":{"241":2}}],["n",{"2":{"109":2,"134":1,"251":5,"286":1}}],["num",{"0":{"312":1},"2":{"251":1,"260":1,"274":2,"275":1,"279":1,"280":1,"301":1,"312":2}}],["num=2150227643",{"2":{"234":1}}],["number`",{"2":{"251":1}}],["number=18528075",{"2":{"234":1}}],["numbers",{"2":{"197":1,"239":1,"240":2,"251":2,"263":1,"302":2}}],["number",{"2":{"44":1,"45":1,"75":1,"82":2,"84":2,"92":1,"96":1,"107":2,"109":1,"119":3,"129":1,"137":4,"138":3,"139":1,"140":3,"141":1,"142":1,"143":1,"144":1,"149":2,"162":1,"197":1,"251":57,"252":7,"263":1,"280":10,"281":1,"286":1,"291":6,"292":7,"293":7,"294":1,"295":1,"300":6,"301":2,"302":1,"312":1,"313":1}}],["null",{"2":{"103":2,"108":2,"110":4,"112":2,"114":2,"116":2}}],["nvmes",{"2":{"48":2}}],["nvme",{"2":{"42":2,"43":5,"44":3,"48":1,"237":1}}],["nat",{"2":{"251":5,"252":5,"291":5,"292":5,"293":5,"300":5}}],["nature",{"2":{"103":1}}],["nanos",{"2":{"152":2}}],["names",{"2":{"86":1,"302":3}}],["namespacedescriptionsensitiveeththe",{"2":{"87":1}}],["namespaces",{"0":{"87":1},"2":{"86":1,"87":1,"89":2,"91":1,"100":1,"101":1,"238":1}}],["namespace",{"0":{"59":1,"73":1,"85":1,"93":1,"100":1,"104":1,"125":1,"130":1,"203":1,"204":1,"205":1,"206":1,"207":1,"209":1,"210":1,"211":1,"212":1,"213":1},"1":{"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"101":1,"102":1,"103":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"126":1,"127":1,"128":1,"129":1,"131":1,"132":1,"133":1,"134":1},"2":{"59":1,"85":1,"86":2,"87":1,"89":1,"106":1}}],["name",{"2":{"37":1,"69":1,"86":1,"157":1,"166":1,"167":1,"186":1,"187":3,"251":2,"252":2,"257":1,"270":7,"281":1,"283":1,"286":1,"291":2,"292":2,"293":2,"300":3}}],["named",{"2":{"17":2,"37":2,"86":1,"91":1,"135":1,"232":3}}],["navigate",{"2":{"35":1}}],["negative",{"2":{"251":1}}],["negatively",{"2":{"140":1}}],["near",{"2":{"235":1}}],["nethermind",{"2":{"174":1}}],["net",{"0":{"93":1,"94":1,"96":1,"98":1,"205":1,"211":1},"1":{"94":1,"95":2,"96":1,"97":2,"98":1,"99":2},"2":{"87":1,"89":2,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"251":3,"252":1,"291":1,"292":1,"293":1,"300":1}}],["network=",{"2":{"177":1}}],["networking",{"2":{"93":1,"148":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["networks",{"2":{"2":1}}],["network",{"0":{"186":1,"187":1,"189":1},"1":{"190":1},"2":{"1":1,"2":1,"5":1,"42":1,"69":1,"70":1,"78":1,"83":1,"87":1,"94":1,"98":1,"148":1,"156":3,"172":1,"179":2,"185":1,"186":2,"187":4,"189":2,"225":2,"226":1,"228":2,"251":6,"252":4,"291":4,"292":4,"293":4,"300":4}}],["next",{"0":{"261":1},"2":{"49":2,"126":1,"128":1,"129":1,"170":1,"176":1,"187":1,"260":2,"274":2,"275":1,"279":1,"280":1}}],["necessary",{"2":{"17":1,"47":1,"103":1,"156":1}}],["never",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"259":3,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["newly",{"2":{"308":1,"309":1,"310":1,"311":1}}],["newpayloadv4`",{"2":{"251":1}}],["newpendingtransactionfilter✅✅✅✅✅eth",{"2":{"210":1}}],["newpendingtransactionfiltereth",{"2":{"204":1}}],["newfilter✅✅✅✅✅eth",{"2":{"210":1}}],["newfiltereth",{"2":{"204":1}}],["newblockfilter✅✅✅✅✅eth",{"2":{"210":1}}],["newblockfiltereth",{"2":{"204":1}}],["newer",{"2":{"28":1}}],["new",{"0":{"270":1},"1":{"271":1},"2":{"2":1,"3":1,"32":1,"42":1,"90":2,"138":1,"148":1,"157":1,"170":1,"172":1,"191":1,"251":11,"255":1,"256":1,"257":2,"259":1,"260":7,"262":2,"265":1,"270":3,"271":1,"273":13,"274":8,"275":4,"276":5,"279":4,"280":2,"299":1,"302":1,"308":1,"309":1,"310":1,"311":1}}],["needs",{"2":{"18":2,"56":1,"190":1,"215":1,"218":1,"288":1}}],["needed",{"2":{"3":1,"51":1,"170":1}}],["need",{"2":{"2":1,"3":1,"31":1,"32":2,"47":2,"92":1,"160":1,"170":1,"174":1,"176":1,"184":1,"259":1,"270":2,"273":1,"276":1,"279":4}}],["nolocals",{"2":{"251":1}}],["normally",{"2":{"300":1}}],["normal",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["nor",{"2":{"226":1}}],["noadminthe",{"2":{"87":1}}],["none",{"2":{"187":1,"280":1}}],["nonetthe",{"2":{"87":1}}],["nonce",{"2":{"107":1,"127":1,"226":1,"249":2}}],["non",{"2":{"49":1,"249":2,"251":2}}],["now",{"2":{"18":1,"32":1,"48":1,"52":1,"156":1,"157":1,"159":1,"162":1,"187":1,"214":1,"215":1,"217":1,"258":1,"260":1,"270":2,"272":1,"274":1,"279":4}}],["no",{"2":{"2":1,"40":1,"64":1,"87":1,"137":1,"138":1,"153":1,"154":1,"160":1,"233":2,"243":1,"245":2,"247":1,"248":2,"249":1,"250":1,"251":9,"252":4,"253":1,"279":1,"283":1,"290":1,"291":4,"292":4,"293":4,"297":1,"298":1,"299":1,"300":4,"301":1,"302":1}}],["nothing",{"2":{"259":1}}],["notracethe",{"2":{"87":1}}],["notxpoolthe",{"2":{"87":1}}],["notification",{"2":{"260":8,"271":1,"273":6,"274":20,"275":10,"276":4,"279":3,"280":6}}],["notifications",{"2":{"70":1,"251":2,"257":1,"259":1,"260":5,"262":2,"263":2,"268":1,"270":1,"271":1,"273":13,"274":22,"275":11,"276":2,"279":2,"280":1}}],["notice",{"2":{"243":2,"245":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"283":2,"290":2,"291":2,"292":2,"293":2,"297":2,"298":2,"299":2,"300":2,"301":2}}],["noticeably",{"2":{"48":1}}],["noting",{"2":{"28":1}}],["notes",{"2":{"49":1}}],["note",{"2":{"44":1,"47":1,"80":1,"87":1,"152":1,"157":1,"249":1,"251":1,"290":1}}],["notably",{"2":{"13":1,"103":1}}],["not",{"0":{"56":1,"217":1,"266":1},"1":{"218":1,"219":1,"220":1,"221":1,"222":1,"223":1},"2":{"2":2,"3":1,"6":1,"7":1,"12":1,"14":1,"16":1,"18":1,"19":1,"23":1,"30":1,"32":2,"38":1,"43":1,"44":2,"45":1,"47":2,"50":1,"54":4,"57":1,"59":1,"60":1,"62":1,"64":1,"66":1,"87":1,"89":1,"94":1,"103":3,"136":1,"151":1,"157":2,"170":1,"180":1,"181":1,"182":1,"183":1,"192":1,"200":1,"215":2,"217":1,"226":1,"227":1,"229":1,"232":1,"233":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":2,"250":1,"251":13,"252":6,"253":1,"254":1,"255":1,"258":1,"266":1,"271":1,"273":1,"279":1,"281":1,"282":1,"283":2,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":6,"292":6,"293":6,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":8,"301":2,"302":2,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":2}}],["nodebuilder",{"2":{"273":1}}],["nodebugthe",{"2":{"87":1}}],["nodetypes",{"2":{"260":2,"274":4,"275":2,"279":2,"280":2}}],["nodeinfo",{"0":{"68":1},"1":{"69":1},"2":{"68":1,"69":1,"92":1}}],["nodediskat",{"2":{"42":1}}],["nodefull",{"2":{"42":1}}],["nodes",{"2":{"4":2,"37":1,"48":2,"90":1,"148":3,"157":1,"177":1,"179":3,"185":1,"187":2,"191":1,"245":1,"251":3,"252":2,"291":2,"292":3,"293":3,"300":2,"302":1}}],["node",{"0":{"157":1,"176":1,"191":1,"194":1,"195":1,"196":1,"198":1,"199":1,"200":1,"202":1,"208":1,"214":1,"251":1,"258":1},"1":{"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":2,"204":2,"205":2,"206":2,"207":2,"208":1,"209":2,"210":2,"211":2,"212":2,"213":2},"2":{"0":2,"1":2,"2":6,"3":5,"4":1,"5":2,"7":4,"17":1,"18":2,"37":1,"42":1,"44":3,"47":1,"48":1,"59":2,"60":1,"66":1,"68":2,"87":4,"89":9,"90":1,"91":1,"92":1,"93":1,"94":1,"96":1,"103":1,"135":1,"154":1,"157":8,"158":3,"159":1,"160":2,"161":1,"162":2,"163":1,"170":1,"171":2,"174":4,"176":5,"177":7,"185":2,"186":1,"191":5,"192":9,"195":2,"196":2,"198":2,"200":3,"202":1,"214":1,"215":1,"216":3,"217":1,"222":1,"224":5,"233":1,"235":1,"237":1,"239":1,"243":1,"245":2,"246":1,"247":1,"248":1,"249":1,"250":1,"251":19,"252":5,"253":1,"254":2,"257":2,"258":5,"259":10,"260":9,"262":4,"266":1,"270":2,"273":12,"274":15,"275":7,"277":1,"279":7,"280":12,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":5,"292":7,"293":7,"296":1,"297":2,"298":1,"299":1,"300":5,"301":1,"302":3,"303":1,"304":1,"305":1,"306":1,"307":4,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["l",{"2":{"286":1}}],["lshw",{"2":{"241":2}}],["lck",{"2":{"233":1}}],["l2=http",{"2":{"177":1}}],["l2",{"2":{"172":3,"177":2,"224":1}}],["l1=",{"2":{"177":1}}],["l1",{"2":{"172":3,"174":1,"177":5,"224":2}}],["lwd+ptqdy6abpx83icdlsu2cdqqkzwohg1jpsk33l1lieqy4",{"2":{"21":1}}],["lg",{"2":{"18":8}}],["length",{"2":{"248":1}}],["len",{"2":{"248":2,"286":2}}],["legacy",{"0":{"226":1},"2":{"225":1,"226":1,"227":1,"228":1,"229":1,"251":2}}],["left",{"2":{"170":2,"274":1}}],["let",{"2":{"163":1,"245":1,"256":1,"257":1,"258":2,"259":1,"260":6,"261":1,"267":1,"270":1,"273":16,"274":21,"275":10,"276":5,"278":1,"279":5,"280":6}}],["lets",{"2":{"84":1}}],["leaves",{"2":{"200":1}}],["leaving",{"2":{"155":1,"200":1}}],["learn",{"2":{"187":1,"268":1,"278":1}}],["least",{"2":{"42":2,"44":2,"46":1,"198":1,"200":1}}],["lead",{"2":{"15":1}}],["leak",{"2":{"12":3,"15":1,"18":2}}],["leaks",{"2":{"12":1,"16":2}}],["less",{"2":{"12":1,"43":1,"45":1,"46":2,"47":1,"48":1,"235":1}}],["levels",{"2":{"27":2,"171":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["level",{"2":{"6":1,"7":1,"24":1,"26":1,"27":1,"43":2,"54":3,"92":1,"148":1,"242":1,"243":7,"244":1,"245":7,"246":1,"247":7,"248":7,"249":7,"250":7,"251":7,"252":7,"253":7,"254":1,"255":1,"279":1,"281":1,"282":1,"283":7,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":7,"291":7,"292":7,"293":7,"294":1,"295":1,"296":1,"297":7,"298":7,"299":7,"300":7,"301":7,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["loop",{"2":{"259":3,"260":1}}],["lookback",{"2":{"251":1}}],["lookupreceiptsaccount",{"2":{"209":1,"210":1,"211":1,"212":1,"213":1}}],["lookup200gbreceipts250gbaccount",{"2":{"199":1}}],["lookup",{"0":{"144":1},"2":{"135":1,"144":2,"155":2,"200":1,"201":2,"251":12,"252":9,"291":9,"292":9,"293":9,"298":2,"300":11}}],["look",{"2":{"9":1,"170":1,"241":1}}],["london",{"2":{"228":1,"251":1}}],["long",{"2":{"54":1,"234":1,"251":1,"288":1}}],["longest",{"2":{"44":1}}],["longer",{"2":{"14":1,"43":1,"138":1}}],["loss",{"2":{"54":1}}],["lock",{"2":{"238":2}}],["locked",{"2":{"52":1}}],["located",{"2":{"235":1}}],["location",{"2":{"53":1,"170":1,"251":1}}],["locals",{"2":{"251":2}}],["locally",{"0":{"185":1},"1":{"186":1,"187":1},"2":{"40":1,"185":2,"186":1,"188":1}}],["localhost",{"2":{"38":2,"89":1,"157":1,"158":1,"162":1,"170":5,"177":2,"224":1}}],["local",{"2":{"35":2,"37":4,"89":1,"91":1,"135":1,"157":1,"170":1,"177":1,"185":1,"187":1,"243":2,"245":1,"247":2,"248":1,"249":1,"250":1,"251":8,"252":1,"253":1,"289":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["lot",{"2":{"15":1,"260":1}}],["load",{"2":{"14":1,"15":1,"46":1,"147":1}}],["lowers",{"2":{"137":1,"138":1,"139":1,"141":1,"142":1,"144":1,"145":1,"146":1,"147":1}}],["lower",{"2":{"43":3,"54":1,"137":1,"138":1,"139":1,"140":3,"141":1,"142":1,"144":1,"145":1,"146":1,"147":1,"172":1,"218":1,"239":1,"279":1}}],["low",{"2":{"12":1,"15":1,"16":1,"24":1,"46":1,"49":1,"92":1,"151":1,"229":1}}],["logged",{"2":{"170":1}}],["logging",{"2":{"6":4,"7":4,"242":4,"243":13,"244":4,"245":13,"246":4,"247":13,"248":13,"249":13,"250":13,"251":13,"252":13,"253":13,"254":4,"255":4,"257":1,"260":1,"281":4,"282":4,"283":13,"284":4,"285":4,"286":4,"287":4,"288":4,"289":4,"290":13,"291":13,"292":13,"293":13,"294":4,"295":4,"296":4,"297":13,"298":13,"299":13,"300":13,"301":13,"302":4,"303":4,"304":4,"305":4,"306":4,"307":4,"308":4,"309":4,"310":4,"311":4,"312":4,"313":4}}],["login",{"2":{"40":1}}],["logfmt",{"2":{"6":2,"7":2,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["log",{"2":{"6":20,"7":20,"106":1,"155":2,"171":1,"200":1,"237":2,"242":20,"243":22,"244":20,"245":22,"246":20,"247":22,"248":22,"249":22,"250":22,"251":23,"252":22,"253":22,"254":20,"255":20,"256":1,"260":1,"280":2,"281":20,"282":20,"283":22,"284":20,"285":20,"286":20,"287":20,"288":20,"289":20,"290":22,"291":22,"292":22,"293":22,"294":20,"295":20,"296":20,"297":22,"298":22,"299":22,"300":22,"301":22,"302":20,"303":20,"304":20,"305":20,"306":20,"307":20,"308":20,"309":20,"310":20,"311":20,"312":20,"313":20}}],["logs",{"2":{"1":1,"6":13,"7":13,"38":1,"54":3,"79":1,"90":1,"155":4,"159":1,"200":3,"214":1,"234":1,"242":13,"243":13,"244":13,"245":13,"246":13,"247":13,"248":13,"249":13,"250":13,"251":15,"252":13,"253":13,"254":13,"255":13,"281":13,"282":13,"283":13,"284":13,"285":13,"286":13,"287":13,"288":13,"289":13,"290":13,"291":13,"292":13,"293":13,"294":13,"295":13,"296":13,"297":13,"298":13,"299":13,"300":13,"301":13,"302":13,"303":13,"304":13,"305":13,"306":13,"307":13,"308":13,"309":13,"310":13,"311":13,"312":13,"313":13}}],["lto",{"2":{"54":1}}],["lt",{"2":{"6":11,"7":11,"18":3,"157":2,"160":1,"161":1,"177":3,"187":1,"221":1,"222":1,"223":1,"224":1,"242":11,"243":20,"244":11,"245":20,"246":11,"247":21,"248":22,"249":31,"250":19,"251":166,"252":54,"253":19,"254":11,"255":11,"258":1,"259":4,"260":6,"273":22,"274":30,"275":15,"276":1,"279":11,"280":16,"281":16,"282":12,"283":21,"284":11,"285":12,"286":19,"287":11,"288":11,"289":11,"290":28,"291":55,"292":54,"293":56,"294":12,"295":12,"296":11,"297":19,"298":21,"299":20,"300":60,"301":20,"302":12,"303":13,"304":13,"305":15,"306":15,"307":12,"308":17,"309":17,"310":17,"311":17,"312":13,"313":13}}],["llvm",{"2":{"51":4}}],["ll",{"2":{"3":1,"160":1,"170":1,"174":1,"176":2,"199":1,"214":2,"259":1,"278":1,"279":1}}],["last",{"2":{"155":3,"192":1,"200":2,"203":7,"204":10,"206":8,"249":1,"251":6,"286":1}}],["lasting",{"2":{"43":1}}],["language",{"2":{"92":1}}],["latency",{"2":{"234":1,"235":1,"251":1}}],["later",{"2":{"141":1,"142":1}}],["latest",{"2":{"34":2,"57":2,"107":1,"109":1,"110":1,"119":1,"143":1,"166":2,"167":4,"170":2,"186":2,"192":1,"223":1,"224":1,"245":1,"301":2,"312":1,"313":1}}],["latitude",{"2":{"48":2,"240":2}}],["layout",{"0":{"24":1},"2":{"24":2,"30":1,"31":1,"32":1}}],["layer",{"0":{"158":1,"160":1},"2":{"1":2,"4":1,"156":1,"157":2,"160":2,"174":1,"177":2,"214":1,"224":1,"251":1}}],["launching",{"2":{"258":1}}],["launch",{"2":{"18":1,"258":1,"259":1,"260":1,"273":3,"274":2,"275":1,"279":1,"280":1}}],["labs",{"2":{"176":1}}],["label",{"2":{"15":1}}],["lab",{"2":{"12":1}}],["larger",{"2":{"26":1,"137":1,"188":1}}],["large",{"2":{"2":1,"24":1,"28":2,"48":1,"152":1,"240":2}}],["live",{"2":{"262":1}}],["lifecycle",{"2":{"262":1}}],["lifetime",{"2":{"251":1}}],["lifespan",{"2":{"43":1}}],["libmdbx",{"2":{"238":1}}],["lib",{"2":{"232":1,"270":2,"271":1}}],["libclang",{"2":{"51":1}}],["libraries",{"2":{"2":1}}],["library",{"2":{"2":1,"26":1,"92":1,"135":1,"157":1,"160":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["lists",{"2":{"101":1,"226":1,"243":3,"286":1,"288":1,"289":1}}],["listens",{"2":{"273":1}}],["listening✅✅✅✅✅net",{"2":{"211":1}}],["listeningnet",{"2":{"205":1}}],["listening",{"0":{"94":1},"1":{"95":1},"2":{"94":2,"95":1,"251":2,"252":2,"260":1,"291":2,"292":2,"293":2,"300":2}}],["listen",{"2":{"89":2,"251":6,"259":1}}],["listener",{"2":{"69":1,"251":2}}],["listenaddr",{"2":{"69":1}}],["listed",{"2":{"19":1,"40":1,"57":1,"87":1}}],["list",{"0":{"286":1},"2":{"44":1,"54":1,"64":2,"109":1,"148":1,"158":1,"166":2,"172":1,"229":1,"243":1,"251":1,"286":2,"302":1}}],["light",{"2":{"12":1,"160":1}}],["lighthouse",{"2":{"4":1,"38":6,"41":1,"49":1,"57":1,"156":1,"158":2,"160":1,"185":1,"186":2,"187":5}}],["limitations",{"2":{"27":1,"32":1}}],["limitation",{"0":{"25":1,"27":1},"1":{"26":1,"27":1,"28":1,"29":1},"2":{"26":2,"27":1}}],["limit",{"0":{"17":1},"2":{"16":1,"17":5,"27":1,"137":1,"138":1,"251":10,"252":2,"281":2,"291":2,"292":2,"293":2,"300":2}}],["limiting",{"0":{"16":1},"2":{"11":1,"16":1}}],["limits",{"2":{"7":1,"17":1,"24":1,"152":1,"253":1}}],["limited",{"2":{"2":1,"16":1,"32":1,"48":1,"229":1}}],["linking",{"2":{"57":1}}],["linuxbrew",{"2":{"19":1,"170":3}}],["linux",{"0":{"165":1},"1":{"166":1,"167":1},"2":{"17":1,"19":2,"20":2,"24":1,"26":1,"27":1,"31":1,"32":1,"40":1,"41":1,"50":1,"69":1,"91":1,"132":1,"135":1,"157":1,"166":1,"167":1,"170":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["lines",{"2":{"271":1}}],["line",{"2":{"6":2,"7":2,"17":1,"52":2,"86":1,"187":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":3,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["lint",{"2":{"4":1}}],["likely",{"2":{"15":3,"18":1,"35":1,"57":1,"234":1}}],["like",{"2":{"2":1,"14":1,"20":1,"26":1,"45":1,"49":1,"70":1,"92":2,"119":1,"156":1,"160":1,"170":1,"186":1}}],["licensing",{"2":{"2":2}}],["license",{"2":{"2":2}}],["licenses",{"2":{"1":1,"2":2}}],["licensed",{"2":{"1":1}}],["b",{"2":{"240":1,"280":2}}],["blog",{"2":{"265":1}}],["blobpool",{"2":{"251":7}}],["blobs",{"2":{"229":1,"251":1,"290":4}}],["blob",{"2":{"229":5,"251":6}}],["blockbody",{"2":{"280":1}}],["block✅✅✅❌❌trace",{"2":{"212":1}}],["blockonly",{"2":{"206":1}}],["blocknumber✅✅✅✅✅eth",{"2":{"210":1}}],["blocknumbereth",{"2":{"204":1}}],["blocknumber",{"2":{"118":1,"120":1,"122":1,"124":1,"280":2}}],["blockhash",{"2":{"118":1,"120":1,"122":1,"124":1}}],["blockstrace",{"2":{"206":7}}],["blockseth",{"2":{"204":6}}],["blocksdebug",{"2":{"203":5}}],["blocks",{"0":{"221":1,"312":1},"2":{"3":1,"6":1,"7":2,"78":1,"79":1,"138":2,"140":4,"141":1,"142":1,"143":1,"145":2,"146":2,"155":5,"156":6,"161":1,"177":1,"191":2,"192":1,"200":2,"203":2,"204":4,"206":1,"215":1,"218":2,"219":1,"221":3,"244":1,"247":1,"248":1,"249":2,"251":31,"256":1,"263":1,"265":2,"280":2,"291":1,"301":2,"312":3}}],["block",{"0":{"117":1,"161":1,"290":1,"313":1},"1":{"118":1},"2":{"2":1,"7":1,"15":1,"21":2,"44":2,"74":1,"75":2,"77":1,"79":2,"80":3,"81":3,"82":3,"84":4,"92":1,"106":1,"107":4,"109":6,"113":2,"117":3,"118":1,"119":2,"126":1,"128":1,"129":1,"138":3,"140":1,"143":1,"150":1,"155":10,"160":1,"172":2,"197":1,"200":3,"215":1,"216":3,"218":1,"223":4,"224":3,"228":1,"234":1,"244":2,"246":1,"248":1,"249":5,"251":46,"252":2,"255":1,"258":1,"260":2,"263":4,"280":14,"290":5,"291":2,"294":2,"295":1,"300":1,"301":6,"304":1,"306":1,"308":2,"309":2,"310":2,"311":2,"312":1,"313":5}}],["blockchain",{"2":{"1":1,"3":3,"15":1,"179":1,"181":1,"182":1}}],["bn",{"2":{"158":1}}],["broadcast",{"2":{"273":6,"274":8,"275":4}}],["browser",{"2":{"170":1}}],["browsers",{"2":{"90":1}}],["bridges",{"2":{"265":1}}],["brings",{"2":{"225":1}}],["break",{"2":{"215":1,"217":1}}],["breach",{"2":{"152":1}}],["brew",{"2":{"19":2,"51":1,"164":3,"170":2}}],["branch",{"2":{"32":1,"292":1,"293":1}}],["bigger",{"2":{"138":1}}],["bidirectional",{"2":{"90":2}}],["bincode",{"2":{"270":1,"273":2,"274":2,"275":1,"276":1}}],["binary",{"2":{"52":2,"54":1,"57":1,"76":1,"77":1,"170":1,"172":1,"175":1,"258":1,"266":1,"268":2,"270":2,"274":1,"276":1,"286":1}}],["binaries",{"0":{"19":1},"1":{"20":1,"21":1},"2":{"19":1,"41":1,"270":2}}],["bin",{"2":{"52":3,"175":1,"257":1,"270":6,"277":2}}],["bindings",{"2":{"51":1}}],["bits",{"2":{"32":1,"43":2}}],["bit",{"2":{"23":1,"28":1,"162":1,"261":1}}],["balance",{"2":{"229":1,"249":2}}],["ba79dbd109dd",{"2":{"187":1}}],["ban",{"2":{"148":1,"150":2}}],["banned",{"2":{"148":1}}],["bandwidth",{"0":{"47":1},"2":{"47":1,"137":1,"138":2}}],["batch",{"2":{"119":1,"138":1,"300":3}}],["battle",{"2":{"2":1}}],["backup",{"2":{"235":1,"251":4}}],["backoff",{"0":{"151":1},"2":{"135":1,"151":1}}],["back",{"2":{"89":1,"159":1,"177":1,"251":1,"252":1,"259":1,"260":2,"273":1,"280":1,"291":1,"292":1,"293":1,"300":1}}],["background",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"273":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["bare",{"2":{"48":1}}],["basic",{"0":{"192":1}}],["basefee",{"2":{"251":7}}],["base",{"2":{"84":1,"174":1,"177":4,"228":3,"251":1,"265":1}}],["based",{"2":{"43":1,"44":1,"106":1,"170":1,"181":1,"182":1,"251":1}}],["bashrc",{"2":{"51":1}}],["bash",{"2":{"39":1}}],["badly",{"2":{"148":1}}],["bad",{"2":{"2":1,"78":1,"150":4}}],["body",{"0":{"294":1},"2":{"252":2,"280":2,"294":3}}],["bodies",{"0":{"138":1},"2":{"15":1,"45":1,"47":1,"135":1,"138":7,"247":2,"248":1,"298":2,"300":2,"301":1}}],["bootnodes",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["bootstrap",{"0":{"216":1,"217":1},"1":{"218":1,"219":1,"220":1,"221":1,"222":1,"223":1},"2":{"185":1,"215":2,"251":7,"252":7,"291":7,"292":7,"293":7,"300":7}}],["boost",{"2":{"189":1,"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["bool",{"2":{"60":1,"62":1,"64":1,"94":1}}],["book",{"2":{"5":3,"57":1,"279":1}}],["bottleneck",{"2":{"45":1}}],["both",{"2":{"1":1,"2":1,"30":1,"34":1,"47":1,"86":1,"137":1,"138":1,"156":1,"157":1,"163":1,"170":1,"251":2,"273":1,"286":1}}],["boards",{"2":{"26":1,"27":2,"43":1}}],["board",{"0":{"25":1},"1":{"26":1,"27":1,"28":1,"29":1},"2":{"27":3,"31":1,"32":2}}],["boxes",{"2":{"48":1}}],["box",{"2":{"17":1,"48":1,"172":1}}],["bounty",{"2":{"4":1}}],["bound",{"2":{"2":1,"28":3,"251":2}}],["bundle",{"2":{"290":4}}],["bunch",{"2":{"270":1}}],["bump",{"2":{"251":4}}],["burned",{"2":{"228":1,"229":1}}],["bus",{"0":{"58":1}}],["business",{"2":{"2":1}}],["buying",{"2":{"48":2}}],["buff",{"2":{"17":1}}],["buffers",{"2":{"152":1}}],["buffered",{"2":{"137":1,"138":1,"241":2}}],["buffer",{"2":{"15":2,"137":3,"138":4,"152":4,"251":7}}],["bugs",{"2":{"12":1}}],["bug",{"2":{"2":1,"4":1,"15":1,"103":1}}],["but",{"2":{"2":2,"12":1,"13":1,"22":1,"28":1,"44":1,"45":2,"47":1,"54":1,"66":1,"136":1,"137":1,"138":2,"139":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1,"147":1,"157":1,"160":1,"162":1,"170":1,"229":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":4,"252":3,"253":1,"262":1,"270":1,"271":1,"273":1,"279":3,"283":1,"290":1,"291":3,"292":3,"293":3,"297":1,"298":1,"299":1,"300":3,"301":1}}],["builder",{"2":{"251":9,"258":1,"259":1,"260":2,"262":1,"273":6,"274":6,"275":3,"279":2,"280":2}}],["builders",{"2":{"49":2}}],["builderslow",{"2":{"49":1}}],["buildersmedium",{"2":{"49":1}}],["builds",{"2":{"54":1,"141":1,"142":1,"144":1,"145":1,"146":1,"177":1}}],["build",{"0":{"30":1,"50":1,"52":1,"267":1,"290":1},"1":{"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1},"2":{"14":4,"31":1,"32":7,"35":3,"49":1,"50":1,"51":2,"52":3,"53":2,"54":3,"186":1,"235":1,"243":1,"244":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":2,"252":1,"253":1,"265":2,"266":1,"267":1,"270":3,"283":1,"290":3,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["building",{"0":{"22":1,"35":1},"1":{"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1},"2":{"1":2,"2":1,"30":1,"33":1,"41":1,"244":1,"251":1,"290":1}}],["built",{"2":{"1":1,"2":2,"4":1,"12":1,"18":2,"22":1,"35":1,"41":1,"57":1,"143":2,"172":1,"173":1,"176":1,"218":1,"243":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":3,"252":2,"253":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["behind",{"2":{"234":1}}],["behaving",{"2":{"148":1}}],["behavior",{"2":{"103":2,"137":1,"138":1,"152":1}}],["behave",{"2":{"136":1}}],["beacon=",{"2":{"177":1}}],["beacon",{"2":{"177":2,"200":3,"203":1,"204":4,"290":2}}],["besu",{"2":{"174":1}}],["best",{"2":{"15":1,"16":1,"44":1,"137":1,"138":1}}],["been",{"2":{"48":2,"83":1,"143":1,"172":1,"177":1,"222":1,"262":1,"263":1,"300":2,"301":2,"312":1,"313":1}}],["become",{"2":{"201":1}}],["becomes",{"2":{"2":1}}],["became",{"2":{"156":1}}],["because",{"2":{"31":1,"89":1,"90":1,"156":1,"201":1,"265":1,"270":1,"276":1,"279":2,"280":1}}],["better",{"2":{"45":2,"46":2,"237":1}}],["between",{"2":{"28":1,"43":1,"79":1,"157":1,"182":1,"183":2,"243":1,"251":1,"273":1,"283":1}}],["beta",{"2":{"20":2}}],["beforehand",{"2":{"249":1}}],["before",{"2":{"22":1,"56":1,"58":1,"83":1,"138":1,"139":1,"140":5,"141":2,"142":2,"143":1,"144":1,"145":1,"146":1,"147":1,"152":2,"155":8,"177":1,"200":2,"216":1,"229":1,"249":1,"251":17,"279":1,"300":1}}],["begin",{"2":{"21":1,"158":1,"163":1,"187":1}}],["below",{"2":{"19":1,"20":1,"32":1,"51":1,"53":1,"87":1,"92":1,"150":1,"218":1,"239":1,"251":1}}],["beyond",{"2":{"15":1,"262":1,"271":1}}],["bench",{"2":{"17":1}}],["benchmarks",{"2":{"48":1,"54":1}}],["benchmark",{"2":{"14":1}}],["benchmarked",{"2":{"2":1}}],["benefits",{"2":{"13":2}}],["bedrock",{"0":{"224":1},"2":{"6":2,"215":2,"216":1,"218":6,"219":1,"221":1,"222":1,"223":2}}],["be",{"2":{"2":3,"3":2,"6":1,"7":1,"9":1,"12":2,"13":1,"14":1,"15":3,"16":1,"17":4,"18":3,"20":1,"22":1,"23":2,"26":1,"32":4,"38":2,"40":1,"43":3,"44":1,"47":2,"49":3,"51":1,"52":1,"53":2,"54":2,"56":2,"64":1,"80":1,"84":1,"85":1,"86":2,"87":1,"89":1,"103":3,"109":1,"136":2,"137":2,"138":3,"140":1,"152":1,"156":1,"158":1,"162":3,"170":1,"171":1,"172":1,"176":1,"177":2,"179":1,"180":1,"182":1,"183":2,"185":3,"186":1,"188":1,"191":1,"192":1,"201":1,"215":1,"216":1,"218":3,"219":2,"222":2,"223":2,"224":2,"226":1,"229":1,"232":1,"239":1,"242":1,"243":1,"244":1,"245":2,"246":1,"247":1,"248":1,"249":3,"250":1,"251":16,"252":3,"253":1,"254":1,"255":1,"260":1,"263":1,"265":1,"271":1,"273":1,"276":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":2,"287":1,"288":1,"289":1,"290":2,"291":3,"292":3,"293":3,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":4,"301":2,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["being",{"2":{"0":2,"1":1,"2":1,"44":1,"48":1,"126":1,"128":1,"129":1,"147":1,"152":1,"172":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["bypasses",{"2":{"284":1}}],["bytecode",{"2":{"249":1}}],["byte",{"2":{"248":1,"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["bytes",{"2":{"17":1,"133":1,"138":2,"147":1,"251":5,"252":2,"271":1,"286":4,"291":2,"292":2,"293":2,"300":2,"305":1,"306":1}}],["by",{"2":{"1":1,"2":5,"5":1,"15":2,"16":1,"20":2,"26":1,"27":1,"32":1,"39":1,"42":1,"48":1,"51":1,"53":1,"54":2,"70":1,"75":1,"84":2,"86":1,"89":2,"90":2,"91":1,"104":1,"127":1,"155":3,"156":1,"157":6,"159":1,"162":1,"163":1,"170":3,"173":1,"176":1,"177":1,"178":1,"180":1,"181":2,"182":1,"183":1,"185":1,"188":1,"191":1,"195":1,"227":1,"228":1,"229":1,"237":2,"248":1,"251":9,"252":3,"254":1,"258":2,"259":2,"260":1,"262":4,"263":1,"265":1,"291":3,"292":3,"293":3,"297":1,"300":3}}],["w",{"2":{"241":1}}],["wget",{"2":{"166":2,"167":1}}],["ws",{"0":{"182":1},"2":{"90":5,"92":1,"157":3,"177":1,"182":1,"187":2,"251":18}}],["wsl",{"2":{"58":1}}],["wsl1",{"2":{"50":1}}],["wsl2",{"0":{"58":1},"2":{"50":1,"58":2}}],["wrap",{"2":{"279":1}}],["wrappers",{"2":{"273":3,"274":2,"275":1}}],["wrapper",{"2":{"89":1}}],["writing",{"2":{"138":1,"139":1,"141":1,"142":1,"144":1,"145":1,"146":1}}],["writers",{"2":{"240":8}}],["writes",{"2":{"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1}}],["write",{"0":{"237":1},"2":{"6":1,"7":2,"43":2,"230":1,"237":2,"242":2,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["written",{"2":{"6":5,"7":5,"135":1,"140":2,"242":5,"243":5,"244":5,"245":5,"246":5,"247":5,"248":5,"249":5,"250":5,"251":6,"252":5,"253":5,"254":5,"255":5,"258":1,"281":5,"282":5,"283":5,"284":5,"285":5,"286":5,"287":5,"288":5,"289":5,"290":5,"291":5,"292":5,"293":5,"294":5,"295":5,"296":5,"297":5,"298":5,"299":5,"300":5,"301":5,"302":5,"303":5,"304":5,"305":5,"306":5,"307":5,"308":5,"309":5,"310":5,"311":5,"312":5,"313":5}}],["wm=",{"2":{"21":1}}],["wwsjcds0u0dlb3jnaw9zietvbnn0yw50b3bvdwxvcyaoumv0acbzawduaw5nigtl",{"2":{"21":1}}],["wcjriqi+h",{"2":{"21":1}}],["woah",{"2":{"260":1}}],["words",{"2":{"156":1,"251":5}}],["world",{"0":{"256":1,"260":1},"1":{"257":1,"258":1,"259":1,"260":1,"261":1},"2":{"156":1,"216":1,"256":1,"267":1,"270":1,"278":1}}],["workloads",{"2":{"43":1}}],["workspace",{"2":{"175":1}}],["works",{"2":{"38":1,"51":1,"103":1,"185":1,"208":1,"258":1,"279":1}}],["work",{"0":{"262":1},"1":{"263":1},"2":{"32":1,"50":1,"140":1,"188":1,"208":1,"267":1}}],["working",{"2":{"18":1}}],["workflows",{"2":{"189":1}}],["workflow",{"2":{"8":1}}],["worth",{"2":{"17":1,"28":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["wouldn",{"2":{"162":1}}],["would",{"2":{"15":1,"54":1,"64":1,"92":1,"186":1,"251":1,"271":1}}],["walker",{"2":{"286":1}}],["walk",{"2":{"177":1,"191":1}}],["walkback",{"2":{"177":1}}],["warn",{"2":{"54":1,"234":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["warning",{"2":{"6":1,"7":1,"242":1,"243":2,"244":1,"245":2,"246":1,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":1,"255":1,"281":1,"282":1,"283":2,"284":1,"285":1,"286":1,"287":1,"288":2,"289":1,"290":2,"291":2,"292":2,"293":2,"294":1,"295":1,"296":1,"297":2,"298":2,"299":2,"300":3,"301":2,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["warnings",{"2":{"6":1,"7":1,"234":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["waiting",{"2":{"260":1}}],["waits",{"2":{"260":1}}],["wait",{"2":{"32":1,"103":1,"159":1,"258":1,"259":1,"260":1,"273":3,"274":2,"275":1,"279":1,"280":1}}],["was",{"2":{"28":2,"52":1,"60":1,"62":1,"64":1,"66":1,"83":1,"192":1,"201":1,"229":1,"280":3}}],["want",{"2":{"2":5,"3":1,"37":1,"38":1,"89":1,"157":1,"171":2,"174":1,"251":1,"266":1,"300":1}}],["ways",{"2":{"33":1,"36":1,"140":1,"187":1,"215":1,"234":1}}],["way",{"2":{"2":1,"16":1,"51":1,"188":1,"192":1,"195":1,"251":1,"260":1,"271":1,"273":1,"302":1}}],["witnesses",{"2":{"251":1}}],["witness",{"2":{"251":10}}],["within",{"2":{"84":1,"127":1,"137":1,"138":1,"183":1,"251":2,"298":11,"300":11}}],["without",{"0":{"160":1},"2":{"2":1,"7":1,"40":1,"111":1,"160":1,"162":1,"215":1,"216":1,"224":1,"249":2,"253":1}}],["with",{"0":{"18":1,"39":1,"92":1,"161":1,"162":1,"189":1,"240":1},"1":{"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"190":1},"2":{"0":1,"1":3,"3":1,"4":3,"6":1,"7":1,"11":1,"12":3,"14":3,"16":3,"18":4,"21":1,"24":1,"26":1,"27":1,"28":2,"32":3,"34":4,"35":1,"37":3,"38":3,"39":4,"40":1,"41":1,"44":2,"47":2,"48":1,"51":1,"52":2,"54":4,"57":3,"70":1,"71":1,"72":1,"86":1,"87":1,"91":1,"92":4,"103":1,"104":2,"106":1,"109":1,"119":1,"136":1,"150":1,"156":2,"158":1,"160":1,"161":2,"170":1,"172":3,"177":1,"179":2,"181":1,"182":1,"184":1,"185":3,"186":3,"187":2,"189":1,"198":1,"200":2,"216":1,"222":1,"224":2,"227":1,"228":1,"229":2,"230":2,"232":2,"233":1,"234":1,"238":1,"239":1,"240":1,"241":3,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":2,"250":1,"251":11,"252":4,"253":1,"254":1,"255":1,"258":1,"259":1,"265":1,"273":3,"278":1,"279":2,"281":1,"282":1,"283":1,"284":1,"285":1,"286":2,"287":1,"288":1,"289":1,"290":1,"291":4,"292":4,"293":4,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":4,"301":1,"302":3,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["wish",{"2":{"53":1}}],["window`",{"2":{"251":1}}],["window",{"2":{"251":6,"277":1}}],["windows",{"0":{"168":1},"1":{"169":1,"170":1},"2":{"19":1,"40":1,"41":1,"50":3,"51":1,"54":1,"58":1,"86":1,"91":1,"135":1,"170":4,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["winget",{"2":{"51":1}}],["wiki",{"2":{"18":1}}],["wide",{"2":{"2":1}}],["willing",{"2":{"228":2,"229":1}}],["will",{"2":{"2":2,"4":1,"6":1,"7":1,"12":1,"13":1,"18":2,"23":1,"30":1,"32":5,"35":1,"37":3,"38":3,"41":1,"43":1,"44":1,"47":3,"49":2,"52":2,"53":2,"56":1,"80":2,"81":1,"82":1,"83":3,"89":1,"109":1,"137":1,"138":1,"140":1,"148":5,"149":1,"150":1,"151":1,"152":2,"155":1,"156":1,"157":2,"160":2,"170":2,"171":1,"172":1,"174":1,"175":1,"185":4,"187":2,"188":1,"191":2,"214":1,"232":2,"235":2,"236":1,"241":1,"242":1,"243":1,"244":1,"245":2,"246":1,"247":1,"248":1,"249":2,"250":1,"251":14,"252":5,"253":1,"254":1,"255":1,"259":1,"263":2,"268":4,"270":6,"272":1,"273":4,"276":1,"277":3,"279":1,"280":2,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":2,"289":1,"290":1,"291":5,"292":5,"293":5,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":6,"301":2,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":2,"309":2,"310":2,"311":2,"312":1,"313":1}}],["while",{"2":{"4":1,"14":1,"18":1,"43":1,"44":1,"54":1,"103":3,"156":2,"162":1,"228":1,"229":1,"238":1,"241":1,"260":2,"273":1,"274":4,"275":2,"276":1,"279":1,"280":1}}],["which",{"2":{"2":1,"3":2,"14":1,"15":1,"24":1,"26":1,"28":2,"45":1,"48":1,"49":1,"54":1,"57":1,"64":1,"70":1,"87":1,"89":1,"90":1,"136":1,"137":2,"138":2,"148":2,"150":2,"152":2,"155":1,"156":3,"157":3,"162":1,"170":5,"172":1,"176":1,"200":1,"201":1,"214":1,"223":1,"226":1,"248":1,"251":7,"252":3,"291":3,"292":4,"293":4,"300":3,"308":2,"309":2,"310":2,"311":2}}],["whether",{"2":{"6":1,"7":1,"43":1,"60":1,"62":1,"64":1,"94":1,"148":1,"171":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":2,"250":1,"251":2,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["whenever",{"2":{"32":1}}],["when",{"2":{"2":1,"12":3,"13":1,"14":1,"15":1,"18":2,"27":1,"43":1,"44":1,"49":1,"51":1,"70":1,"72":1,"103":1,"135":1,"140":1,"192":1,"214":1,"249":1,"251":3,"252":1,"262":1,"291":1,"292":1,"293":1,"300":2}}],["whereas",{"2":{"42":1,"177":1}}],["where",{"2":{"0":1,"3":1,"12":1,"54":1,"91":1,"103":1,"107":1,"109":1,"141":1,"142":1,"247":1,"251":1,"273":1}}],["whole",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["who",{"0":{"3":1},"2":{"1":1,"2":2,"49":2,"89":1,"184":1,"228":1,"279":1}}],["what",{"0":{"1":1,"2":1,"48":1,"261":1,"265":1,"266":1},"2":{"68":1,"87":1,"145":1,"146":1,"156":1,"191":1,"260":1,"263":2,"270":1,"279":1}}],["wei",{"2":{"229":1}}],["weights",{"0":{"150":1},"2":{"135":1,"150":1}}],["web3",{"0":{"130":1,"131":1,"133":1},"1":{"131":1,"132":2,"133":1,"134":2},"2":{"87":2,"89":1,"92":1,"130":2,"131":2,"132":1,"133":1,"134":1,"251":2}}],["websockets",{"0":{"90":1},"2":{"88":1,"90":3}}],["websocket",{"2":{"86":1,"90":2,"182":1}}],["website",{"2":{"18":1}}],["were",{"2":{"80":1,"187":1,"228":1}}],["weeks",{"2":{"49":1}}],["week",{"2":{"49":1}}],["we",{"2":{"0":1,"2":10,"4":6,"8":1,"12":1,"13":1,"18":2,"41":1,"48":3,"149":1,"155":1,"156":1,"160":3,"162":1,"163":1,"170":1,"171":1,"174":1,"176":1,"191":1,"214":2,"259":2,"260":8,"268":2,"270":7,"271":1,"272":1,"273":6,"276":1,"277":2,"278":1,"279":9,"280":8,"292":1,"293":1}}],["well",{"2":{"0":1,"1":2,"2":1,"13":1,"14":1,"68":1,"126":1,"127":1,"128":1,"129":1,"137":1,"138":1,"172":1,"244":1,"259":1,"291":1}}],["cx",{"2":{"279":3,"280":2}}],["ctx",{"2":{"259":3,"260":6,"274":7,"275":4,"279":4,"280":6}}],["circumvent",{"2":{"218":1}}],["cb5d0a7d0e7c",{"2":{"187":1}}],["cc",{"2":{"57":1}}],["cut",{"2":{"166":2,"167":2}}],["custom",{"0":{"155":1},"2":{"161":1,"186":1,"192":1,"195":1,"222":1,"251":1,"252":1,"258":1,"270":1,"291":1,"292":1,"293":1,"300":1}}],["customise",{"2":{"54":1}}],["cumulative",{"2":{"140":2}}],["current",{"2":{"57":1,"60":1,"140":1,"170":1,"239":1,"243":1,"251":1,"289":1}}],["currently",{"2":{"28":1,"54":1,"126":1,"128":1,"129":1,"150":1,"215":1,"234":1,"259":1,"273":1}}],["curled",{"2":{"162":1}}],["curl",{"2":{"5":1,"51":1,"92":1,"162":3,"166":1,"167":1}}],["cycle",{"2":{"49":1}}],["c3",{"2":{"48":2,"240":2}}],["cest",{"2":{"187":1}}],["centos",{"0":{"167":1}}],["cell",{"2":{"43":4}}],["certain",{"2":{"15":1,"103":1,"150":1,"251":1,"255":1,"301":1}}],["cd",{"2":{"32":1,"52":1,"53":1,"166":1,"167":1,"175":1,"235":1,"237":1,"257":1,"270":1}}],["children",{"2":{"240":8}}],["chk",{"2":{"237":4}}],["chunk",{"2":{"144":1,"248":3}}],["cheapest",{"2":{"44":1}}],["cheaper",{"2":{"44":1}}],["checkpoints",{"2":{"300":2}}],["checkpoint",{"2":{"158":4}}],["checksum`",{"2":{"288":1}}],["checksums",{"2":{"288":1}}],["checksum",{"0":{"281":1},"2":{"243":2,"281":6,"288":2}}],["checks",{"2":{"156":1,"241":1,"280":2}}],["checkout",{"2":{"53":1,"219":1}}],["checking",{"2":{"18":1,"20":1,"260":1}}],["check",{"2":{"8":1,"17":1,"27":1,"38":1,"51":1,"52":1,"156":1,"187":1,"234":1,"237":2,"238":1,"241":1,"251":2,"266":1}}],["choosing",{"2":{"251":1}}],["chooses",{"2":{"251":1}}],["choose",{"2":{"44":1,"170":1,"251":1}}],["chocolatey",{"0":{"169":1}}],["choco",{"2":{"51":1,"169":2}}],["choice",{"2":{"32":1,"158":1,"170":1}}],["chosen",{"2":{"28":1,"157":1,"192":1,"251":1,"302":1}}],["channel",{"2":{"273":9,"274":6,"275":2,"279":1}}],["changed",{"2":{"141":1,"142":1,"145":1,"146":1,"192":1,"280":1}}],["changes",{"2":{"140":2,"171":1,"172":3,"226":1,"227":1,"251":1,"265":1,"300":1,"302":1}}],["changesets",{"2":{"140":1}}],["change",{"2":{"42":1,"157":1,"170":1}}],["changing",{"2":{"28":1,"228":1}}],["chart",{"2":{"234":2,"235":2}}],["chapter",{"2":{"191":1,"194":1,"195":1,"196":1,"201":1,"214":1,"266":1,"268":1,"270":1,"271":1,"278":2}}],["chainreverted",{"2":{"260":1,"276":1,"279":1}}],["chainreorged",{"2":{"260":1,"276":1,"279":1}}],["chaincommitted",{"2":{"260":1,"276":1,"279":1}}],["chainid✅✅✅✅✅eth",{"2":{"210":1}}],["chainideth",{"2":{"204":1}}],["chainstate",{"2":{"177":1}}],["chains",{"0":{"172":1},"1":{"173":1,"174":1,"175":1,"176":1,"177":1},"2":{"172":1,"173":1,"177":1,"214":1,"243":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["chain",{"0":{"159":1},"2":{"47":1,"92":1,"156":3,"158":1,"161":1,"173":3,"174":1,"177":2,"216":2,"218":1,"219":1,"221":1,"222":1,"223":1,"243":5,"245":5,"246":5,"247":5,"248":5,"249":7,"250":5,"251":12,"252":6,"253":5,"256":1,"258":1,"260":9,"262":2,"265":1,"274":6,"275":3,"276":4,"277":2,"279":7,"280":15,"281":5,"282":5,"283":5,"284":5,"285":5,"286":5,"287":5,"288":5,"289":5,"290":5,"291":6,"292":6,"293":6,"297":5,"298":5,"299":5,"300":6,"301":5,"302":5,"303":5,"304":5,"305":5,"306":5,"308":5,"309":5,"310":5,"311":5,"312":5,"313":5}}],["challenge",{"2":{"26":1}}],["cpu",{"0":{"23":1,"45":1},"2":{"23":1,"30":1,"42":1,"54":2,"251":6}}],["cpu=native",{"2":{"14":1,"54":3}}],["cwiefgidaqiebwixgaakcrcqxtvqf78lptg6apwjxcdeg3ocrytboiwtls5cdflu",{"2":{"21":1}}],["cgexec",{"2":{"17":2}}],["cgcreate",{"2":{"17":1}}],["cgroup",{"2":{"17":8}}],["cgroups",{"0":{"17":1},"2":{"16":2,"17":1}}],["cmdline",{"2":{"17":1}}],["c",{"2":{"14":1,"54":3,"166":1,"167":1,"170":1,"235":1,"238":1,"241":1,"286":1,"300":1}}],["caution",{"2":{"249":1,"251":1}}],["caused",{"2":{"16":1,"228":1,"237":2}}],["causes",{"2":{"12":1}}],["cause",{"2":{"12":2,"15":1,"16":1}}],["calculation",{"2":{"244":1,"251":1,"292":1}}],["calculations",{"2":{"244":1,"293":1}}],["calculates",{"2":{"243":1,"281":1}}],["call`",{"2":{"251":1}}],["calling",{"2":{"233":1}}],["call✅✅✅❌❌trace",{"2":{"212":1}}],["call✅✅✅❌❌eth",{"2":{"210":1}}],["callonly",{"2":{"204":1,"206":1}}],["calltype",{"2":{"110":2,"118":1,"120":1,"122":1,"124":1}}],["callmany✅✅✅❌❌trace",{"2":{"212":1}}],["callmanyonly",{"2":{"206":1}}],["callmany",{"0":{"109":1},"1":{"110":1},"2":{"105":1,"110":1}}],["calls",{"2":{"104":1,"105":1,"106":1,"227":1,"251":2}}],["call",{"0":{"107":1},"1":{"108":1},"2":{"70":1,"84":3,"92":1,"105":1,"107":2,"108":2,"109":5,"110":4,"111":3,"112":1,"114":1,"116":1,"118":2,"120":2,"122":2,"124":2,"181":1,"182":1,"251":2,"279":1}}],["called",{"2":{"14":1,"37":1,"157":1,"185":1,"189":1,"233":1,"265":1,"271":4}}],["catch",{"2":{"216":1}}],["caveat",{"2":{"200":1}}],["caveats",{"2":{"191":1}}],["capacity",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["capabilities",{"2":{"13":2}}],["cap",{"2":{"47":1,"251":3}}],["caching",{"2":{"46":1,"251":5}}],["cached",{"2":{"251":2}}],["cache",{"2":{"6":1,"7":1,"17":1,"140":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":24,"252":2,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":2,"292":2,"293":2,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":2,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["carry",{"2":{"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["card",{"2":{"32":2}}],["cargo",{"2":{"14":4,"51":5,"52":3,"53":1,"54":5,"56":2,"57":2,"175":1,"232":1,"257":2,"258":1,"270":2,"277":2}}],["care",{"2":{"2":1}}],["case",{"2":{"15":1,"18":1,"229":1,"260":1,"262":1,"302":1}}],["cases",{"2":{"0":1,"3":1,"188":1,"237":1}}],["cast",{"2":{"5":1,"92":4}}],["canonical",{"2":{"16":1,"234":2,"235":1}}],["cannot",{"2":{"2":1,"15":1,"28":1,"51":1,"192":1,"218":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["can",{"0":{"48":1},"2":{"1":1,"3":3,"5":1,"8":1,"9":2,"12":3,"14":1,"15":1,"16":2,"17":2,"18":2,"19":2,"20":3,"22":1,"24":1,"26":1,"28":1,"31":1,"32":2,"34":3,"38":1,"42":1,"43":1,"44":1,"47":1,"48":1,"50":1,"51":1,"52":2,"53":1,"54":5,"56":1,"57":2,"58":1,"59":1,"84":1,"85":1,"86":1,"87":1,"89":5,"90":1,"91":1,"92":2,"103":1,"138":1,"148":1,"150":1,"152":4,"153":1,"155":1,"156":1,"157":3,"158":2,"159":1,"160":1,"161":1,"162":4,"170":1,"176":1,"177":2,"185":1,"186":2,"187":1,"188":1,"189":1,"198":1,"201":1,"216":1,"219":2,"224":2,"239":1,"241":1,"251":4,"258":1,"261":1,"262":1,"263":1,"265":1,"276":1,"279":3,"280":1,"300":1}}],["cross",{"2":{"89":1,"90":1,"227":1,"251":4}}],["crucial",{"2":{"43":1,"47":1}}],["credentials",{"2":{"38":1,"40":1}}],["creation",{"2":{"187":1}}],["creations",{"2":{"106":1}}],["creating",{"2":{"1":1}}],["createaccesslist✅✅✅❌❌eth",{"2":{"210":1}}],["createaccesslistonly",{"2":{"204":1}}],["created",{"2":{"79":1,"117":1,"170":1,"187":1,"308":1,"309":1,"310":1,"311":1}}],["creates",{"2":{"70":1,"91":1,"249":1}}],["create",{"0":{"257":1,"270":1,"271":1},"1":{"271":1},"2":{"17":1,"32":1,"37":1,"38":2,"186":1,"243":1,"257":1,"268":2,"270":2,"271":1,"272":1,"273":4,"283":1}}],["crash",{"2":{"215":1,"217":1}}],["crashes",{"2":{"12":2}}],["crate",{"2":{"9":1,"54":1}}],["crates",{"2":{"2":1,"9":2,"57":1,"172":1}}],["critical",{"2":{"0":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"273":3,"274":2,"275":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["clauses",{"2":{"280":1}}],["clarify",{"2":{"263":1}}],["class",{"2":{"241":1}}],["classprioritypayload",{"2":{"49":1}}],["clear",{"0":{"282":1,"303":1,"304":1},"2":{"243":1,"282":2,"303":2,"304":2}}],["clean",{"2":{"57":1,"141":1,"142":1,"143":1,"244":1,"293":1}}],["close",{"2":{"216":1}}],["closed",{"2":{"89":1}}],["cloud",{"2":{"176":1,"185":1}}],["clock",{"2":{"42":2,"45":1}}],["cloned",{"2":{"53":1}}],["clone3",{"2":{"33":1}}],["clone",{"2":{"32":2,"52":2,"175":1,"219":1,"235":2,"237":1,"273":2,"274":2,"275":1}}],["clippy",{"2":{"259":1}}],["click",{"2":{"170":7,"275":1}}],["cli",{"2":{"39":1,"157":1,"177":1,"251":1,"258":2,"259":2,"260":2,"273":6,"274":4,"275":2,"279":2,"280":2}}],["clientroleexecutionvalidates",{"2":{"156":1}}],["clientversion",{"0":{"131":1},"1":{"132":1},"2":{"131":1,"132":1}}],["clients",{"2":{"89":1,"90":2,"156":4,"160":1,"185":2}}],["clientmethod",{"2":{"60":1,"62":1,"64":1,"66":1,"68":1,"70":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"94":1,"96":1,"98":1,"101":1,"107":1,"109":1,"111":1,"113":1,"115":1,"117":1,"119":1,"121":1,"123":1,"126":1,"127":1,"128":1,"129":1,"131":1,"133":1}}],["client",{"2":{"2":2,"38":1,"41":1,"78":1,"87":1,"90":1,"91":1,"92":1,"130":1,"131":1,"156":8,"161":1,"176":1,"177":1,"185":1,"214":1,"251":2,"268":4,"270":1,"271":1,"273":4,"274":4,"275":2,"276":3,"277":1}}],["cl",{"2":{"1":1,"38":1,"157":1,"160":1,"183":1,"185":2,"186":4,"187":5,"224":1}}],["collect",{"2":{"251":1}}],["collection",{"2":{"180":1}}],["collects",{"2":{"170":1}}],["collector",{"2":{"147":1,"189":1}}],["colors",{"2":{"6":4,"7":4,"242":4,"243":4,"244":4,"245":4,"246":4,"247":4,"248":4,"249":4,"250":4,"251":4,"252":4,"253":4,"254":4,"255":4,"281":4,"282":4,"283":4,"284":4,"285":4,"286":4,"287":4,"288":4,"289":4,"290":4,"291":4,"292":4,"293":4,"294":4,"295":4,"296":4,"297":4,"298":4,"299":4,"300":4,"301":4,"302":4,"303":4,"304":4,"305":4,"306":4,"307":4,"308":4,"309":4,"310":4,"311":4,"312":4,"313":4}}],["color",{"2":{"6":2,"7":2,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["corruption",{"2":{"177":1}}],["correspond",{"2":{"137":1,"139":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1}}],["corresponds",{"2":{"83":1,"147":1}}],["corresponding",{"2":{"20":1,"222":1,"260":1,"290":1}}],["correctly",{"2":{"38":1}}],["corsdomain",{"2":{"89":2,"251":3}}],["cores",{"2":{"45":2,"251":6}}],["core",{"2":{"41":1,"42":2}}],["copy",{"2":{"20":1,"52":1,"235":1}}],["could",{"2":{"15":1,"57":1,"251":1}}],["countdown",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["countbandwidthstable",{"2":{"42":1}}],["counthigher",{"2":{"42":1}}],["count",{"2":{"6":1,"7":1,"119":1,"120":1,"242":1,"243":2,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":21,"252":6,"253":1,"254":1,"255":1,"280":3,"281":1,"282":1,"283":1,"284":1,"285":1,"286":2,"287":1,"288":2,"289":1,"290":1,"291":6,"292":6,"293":6,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":6,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["codes",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["code",{"0":{"233":1,"275":1},"2":{"4":1,"57":1,"230":1,"232":1,"233":1,"237":4,"249":1,"270":1,"271":1,"273":1,"274":1}}],["coming",{"2":{"251":1,"259":1}}],["come",{"2":{"232":1,"260":2}}],["comes",{"2":{"43":1,"189":1}}],["combinations",{"2":{"185":1}}],["com",{"2":{"18":1,"20":1,"32":1,"52":1,"166":4,"167":4,"170":1,"175":1,"187":1,"235":1,"237":1,"245":1,"257":4,"270":5}}],["common",{"2":{"166":1}}],["communicate",{"2":{"179":1,"251":1,"252":1,"260":1,"291":1,"292":1,"293":1,"300":1}}],["communication",{"2":{"157":1,"182":1,"183":2,"266":1,"273":1,"274":1}}],["community",{"2":{"1":1,"2":2,"27":1,"29":1,"158":1}}],["committed",{"2":{"256":1,"260":5,"274":6,"275":3,"276":1,"279":4,"280":14}}],["commits",{"2":{"140":4,"262":1,"300":1}}],["commit",{"2":{"137":1,"139":1,"141":1,"142":1,"145":1,"146":1,"150":1,"234":2,"235":1,"260":2,"276":1,"279":1,"300":1}}],["comma",{"2":{"54":1,"89":1,"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["command",{"0":{"56":1},"2":{"6":3,"7":3,"18":1,"20":2,"37":1,"38":1,"39":1,"41":1,"52":2,"86":1,"92":1,"152":1,"162":1,"187":2,"222":2,"233":1,"242":2,"243":3,"244":3,"245":3,"246":2,"247":2,"248":2,"249":3,"250":2,"251":2,"252":3,"253":2,"254":3,"255":3,"281":2,"282":3,"283":2,"284":2,"285":3,"286":2,"287":2,"288":3,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":3,"297":2,"298":2,"299":3,"300":2,"301":3,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["commands",{"2":{"6":2,"7":1,"53":1,"152":1,"157":2,"219":1,"243":1,"244":1,"252":2,"254":1,"255":1,"282":1,"285":1,"296":2,"299":1,"301":1}}],["compressed",{"2":{"286":1}}],["compression",{"2":{"251":2}}],["comprising",{"2":{"172":1}}],["computes",{"2":{"143":1}}],["compute",{"2":{"141":1,"142":1,"143":1,"281":1}}],["compiling",{"2":{"54":1}}],["compilation",{"0":{"57":1},"2":{"52":1,"54":1,"57":4}}],["compiled",{"2":{"266":1}}],["compiler",{"2":{"51":1,"54":2}}],["compile",{"2":{"14":1,"23":1,"32":2,"54":4,"57":1,"270":1}}],["compacted",{"2":{"235":1}}],["compaction",{"2":{"235":1}}],["compact",{"0":{"235":1},"2":{"230":1,"235":2}}],["compare",{"2":{"251":1}}],["compared",{"2":{"43":2,"54":1}}],["comparing",{"2":{"251":2,"292":1,"293":1}}],["comparison",{"2":{"48":1}}],["compatible",{"2":{"1":1}}],["complete",{"2":{"103":2}}],["completes",{"2":{"51":1,"221":1,"222":1,"223":1}}],["completed",{"2":{"4":1,"49":3,"103":1,"200":1}}],["complex",{"2":{"12":1}}],["compose",{"0":{"38":1},"2":{"36":1,"38":6,"39":1,"40":2,"41":1}}],["composed",{"2":{"9":1,"86":1}}],["components",{"2":{"2":1,"15":2,"46":1,"183":2,"259":1}}],["component",{"2":{"2":1,"93":1,"148":1,"156":1}}],["condition",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["conditions",{"2":{"243":3,"245":3,"247":3,"248":3,"249":3,"250":3,"251":3,"252":3,"253":3,"283":3,"290":3,"291":3,"292":3,"293":3,"297":3,"298":3,"299":3,"300":3,"301":3}}],["congestion",{"2":{"228":2}}],["congratulations",{"2":{"214":1}}],["concurrency",{"2":{"251":2}}],["concurrently",{"2":{"233":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["concurrent",{"0":{"238":1},"2":{"137":3,"138":3,"230":1,"251":9,"252":2,"291":2,"292":2,"293":2,"300":2}}],["concepts",{"0":{"192":1}}],["conclusion",{"0":{"171":1}}],["concise",{"2":{"6":2,"7":2,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["convenient",{"2":{"89":1}}],["convenience",{"2":{"49":1}}],["conflict",{"2":{"251":1,"302":1}}],["conflicts",{"2":{"251":1,"302":1}}],["confirmation",{"2":{"284":1}}],["confirm",{"2":{"234":1,"235":1}}],["configuring",{"0":{"135":1},"1":{"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1},"2":{"56":1,"214":1}}],["configures",{"2":{"149":1,"150":1,"152":1,"153":1,"251":1,"302":1}}],["configure",{"2":{"59":2,"87":2,"89":1,"90":2,"91":1,"136":1,"148":2,"152":2,"153":1,"170":2,"187":1,"191":1,"251":6}}],["configure=yes",{"2":{"32":1}}],["configured",{"2":{"18":1,"195":1,"251":3}}],["configurations",{"2":{"185":1}}],["configuration",{"0":{"155":1},"2":{"7":2,"31":1,"32":1,"41":1,"42":1,"57":1,"90":1,"135":3,"153":1,"155":7,"192":1,"195":1,"200":1,"201":1,"242":1,"243":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":2,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["configurable",{"2":{"2":1}}],["config",{"0":{"154":1,"242":1},"2":{"7":2,"51":2,"170":3,"242":5,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":2,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["confusion",{"2":{"170":1}}],["conf=prof",{"2":{"18":2}}],["conf",{"2":{"18":4}}],["continue",{"2":{"278":1}}],["continuously",{"2":{"5":1,"155":1}}],["content✅✅✅✅✅txpool",{"2":{"213":1}}],["contenttxpool",{"2":{"207":1}}],["contentfrom✅✅✅✅✅txpool",{"2":{"213":1}}],["contentfromtxpool",{"2":{"207":1}}],["contentfrom",{"0":{"127":1},"2":{"127":1}}],["content",{"0":{"126":1},"2":{"126":1,"243":2,"281":1,"285":3,"305":3,"306":2}}],["contents",{"0":{"11":1},"2":{"186":1,"243":1,"286":1}}],["context",{"0":{"28":1},"2":{"84":1,"183":1,"259":1,"279":3,"280":2}}],["containing",{"2":{"249":1,"251":2}}],["contained",{"2":{"127":1}}],["containers",{"0":{"238":1},"2":{"38":2,"185":1,"230":1,"238":3}}],["container",{"2":{"34":1,"37":2,"39":2,"57":1,"187":1,"238":1}}],["contains",{"2":{"70":1,"135":1,"259":1,"260":1,"279":1,"290":1}}],["contain",{"2":{"15":1,"155":3,"200":1,"249":2}}],["control",{"2":{"140":1}}],["controls",{"2":{"137":1,"138":1}}],["contracteth",{"2":{"204":4}}],["contractdebug",{"2":{"203":1}}],["contract",{"2":{"106":1,"158":1,"200":3,"227":2}}],["contracts",{"2":{"1":1,"90":1}}],["contrast",{"2":{"28":1}}],["contributor",{"2":{"171":1}}],["contributors",{"2":{"1":1,"8":1}}],["contributing",{"2":{"8":1}}],["contribute",{"0":{"8":1},"2":{"2":1,"5":2,"156":1}}],["console",{"2":{"280":1}}],["consecutive",{"2":{"251":2}}],["consensys",{"2":{"186":1}}],["consensusdetermines",{"2":{"156":1}}],["consensus",{"0":{"158":1,"160":1},"2":{"1":1,"3":1,"4":1,"38":1,"41":1,"156":9,"157":2,"160":2,"161":1,"176":1,"177":1,"179":1,"251":6,"277":1}}],["consistency",{"2":{"215":1,"217":1,"258":1}}],["consider",{"2":{"57":1,"159":1,"177":1,"239":1}}],["considering",{"2":{"27":1,"43":1}}],["considerations",{"2":{"181":1}}],["consideration",{"2":{"22":1}}],["constitute",{"2":{"150":1}}],["constant",{"2":{"43":1}}],["consuming",{"2":{"257":1}}],["consumption",{"2":{"137":1,"138":1,"140":1,"152":1}}],["consume",{"2":{"15":1,"46":1,"170":1}}],["consumes",{"2":{"12":1}}],["consumer",{"0":{"276":1},"2":{"1":1,"270":3,"276":1,"277":2}}],["consult",{"2":{"27":1,"48":1}}],["connected",{"2":{"96":1,"150":1,"170":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["connects",{"2":{"72":1,"268":1,"276":1}}],["connections",{"2":{"70":1,"94":1,"148":2,"170":1,"251":6,"252":1,"291":1,"292":1,"293":1,"300":1}}],["connection",{"0":{"149":1},"2":{"47":6,"62":1,"89":1,"90":1,"135":1,"149":1,"151":2,"152":1,"157":1,"177":1,"224":1,"251":3}}],["connect",{"2":{"1":1,"60":1,"64":1,"70":1,"148":5,"149":3,"150":1,"177":1,"251":1,"252":1,"266":1,"270":1,"274":1,"276":1,"291":1,"292":1,"293":1,"300":1}}],["costs",{"2":{"43":1}}],["costly",{"2":{"28":1}}],["cost",{"2":{"0":1,"54":1,"137":2,"138":1}}],["phase",{"2":{"300":1}}],["pthread",{"2":{"238":2}}],["pbs",{"2":{"189":1}}],["ping",{"0":{"307":1},"2":{"296":2,"307":4}}],["pinning",{"2":{"279":1}}],["pin",{"2":{"279":4,"280":3}}],["pid=host",{"2":{"238":1}}],["pid",{"2":{"238":1}}],["pipeline",{"2":{"103":1,"218":1,"251":1,"298":11,"300":11}}],["pipe",{"2":{"91":1,"251":2}}],["pipes",{"2":{"86":1,"91":1}}],["pieces",{"2":{"12":1,"274":1}}],["pkg",{"2":{"51":2}}],["plus",{"2":{"162":1}}],["plug",{"2":{"32":1}}],["please",{"2":{"48":1,"52":1,"190":1,"237":1}}],["plans",{"2":{"160":1,"227":1}}],["platform",{"2":{"135":1}}],["platforms",{"2":{"19":1,"51":1}}],["placed",{"2":{"157":1}}],["places",{"2":{"135":1}}],["place",{"2":{"52":1,"235":1,"277":1}}],["plain",{"0":{"37":1}}],["pgp",{"2":{"21":2}}],["p",{"2":{"18":1,"37":3,"134":1}}],["penalized",{"2":{"152":1}}],["penalties",{"2":{"150":1}}],["penalty",{"2":{"150":1}}],["pending",{"2":{"107":1,"109":2,"126":1,"127":1,"128":1,"129":1,"152":1,"251":16,"252":3,"279":1,"291":3,"292":3,"293":3,"300":3}}],["peercount✅✅✅✅✅net",{"2":{"211":1}}],["peercountnet",{"2":{"205":1}}],["peercount",{"0":{"96":1},"1":{"97":1},"2":{"96":1,"97":1}}],["peerevents",{"0":{"70":2},"1":{"71":2,"72":2},"2":{"70":3,"72":2}}],["peer",{"2":{"60":4,"62":2,"64":3,"66":2,"70":4,"71":1,"72":2,"137":1,"138":1,"148":1,"150":3,"151":1,"152":5,"177":1,"251":11,"252":11,"291":11,"292":11,"293":11,"300":11}}],["peers`",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["peers",{"0":{"148":1},"1":{"149":1,"150":1,"151":1},"2":{"59":1,"64":1,"70":2,"96":1,"135":1,"138":1,"148":9,"149":6,"150":3,"151":1,"157":1,"170":1,"177":1,"251":16,"252":16,"291":16,"292":16,"293":16,"300":16}}],["peering",{"0":{"179":1},"2":{"37":1,"179":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["peak",{"2":{"15":1}}],["percentage",{"2":{"251":1}}],["percentile",{"2":{"251":3}}],["personal",{"2":{"177":1}}],["persists",{"2":{"233":1}}],["persist",{"2":{"137":1,"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["persistent",{"2":{"44":1}}],["persistence",{"2":{"37":1,"251":3}}],["periodic",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["periodically",{"2":{"162":1}}],["periods",{"2":{"138":1}}],["permits",{"2":{"251":1}}],["permissions",{"2":{"232":2,"233":1}}],["permissive",{"2":{"2":1}}],["permaban",{"2":{"152":1}}],["permanent",{"2":{"150":1}}],["per",{"2":{"43":2,"152":1,"199":1,"208":1,"228":2,"229":3,"251":10,"252":3,"288":1,"291":2,"292":3,"293":3,"300":2}}],["perf",{"2":{"14":1}}],["perform",{"2":{"105":1,"140":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["performs",{"2":{"16":1,"109":1}}],["performing",{"2":{"14":1,"104":1}}],["performance",{"0":{"239":1},"1":{"240":1,"241":1},"2":{"0":2,"2":1,"13":2,"14":4,"43":2,"44":1,"54":2,"171":1,"177":1,"180":1,"224":1,"230":1,"239":4,"251":1}}],["policy",{"2":{"251":4,"252":4,"291":4,"292":4,"293":4,"300":4}}],["pollable",{"2":{"279":1}}],["polling",{"2":{"262":1}}],["poll",{"2":{"162":1,"279":10,"280":5}}],["popular",{"2":{"230":1}}],["populating",{"2":{"170":1}}],["point",{"2":{"157":1,"170":1,"215":1,"218":1}}],["points",{"2":{"40":1}}],["post",{"2":{"156":1,"237":1}}],["position",{"2":{"121":1}}],["possible",{"2":{"6":3,"7":3,"49":1,"107":1,"185":1,"238":2,"242":3,"243":7,"244":3,"245":7,"246":4,"247":7,"248":7,"249":7,"250":7,"251":11,"252":7,"253":7,"254":3,"255":3,"279":1,"281":4,"282":4,"283":7,"284":4,"285":4,"286":4,"287":4,"288":4,"289":4,"290":7,"291":7,"292":7,"293":7,"294":3,"295":3,"296":3,"297":7,"298":8,"299":7,"300":8,"301":7,"302":5,"303":4,"304":5,"305":4,"306":5,"307":3,"308":4,"309":4,"310":4,"311":4,"312":4,"313":4}}],["port`",{"2":{"251":4,"302":4}}],["port=7000",{"2":{"177":1}}],["ports",{"0":{"178":1,"179":1},"1":{"179":1,"180":1,"181":1,"182":1,"183":1},"2":{"68":1,"69":1,"157":1,"178":1,"187":2,"214":1,"251":4,"302":1}}],["portable",{"2":{"54":1,"188":1}}],["port",{"0":{"180":1,"181":1,"182":1,"183":1},"2":{"37":2,"89":4,"90":1,"92":1,"157":3,"177":1,"179":3,"180":3,"181":4,"182":4,"183":3,"196":1,"251":24,"252":12,"273":1,"291":12,"292":12,"293":12,"300":13,"302":2}}],["powerful",{"2":{"16":1}}],["pooled",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["pool",{"2":{"15":1,"87":1,"90":1,"125":1,"177":1,"251":9}}],["potentially",{"2":{"300":1}}],["potential",{"2":{"12":1,"45":1,"239":1}}],["pack",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["package",{"2":{"185":4,"187":1,"189":1,"190":1,"257":1,"270":1,"271":1}}],["packages",{"2":{"166":2,"188":1}}],["panic",{"2":{"238":1}}],["panel",{"2":{"170":1}}],["paid",{"2":{"228":1}}],["pairing",{"2":{"216":1}}],["pair",{"2":{"18":3,"187":1}}],["pay",{"2":{"228":2,"229":1}}],["payloadattributes",{"2":{"172":1}}],["payloads",{"2":{"49":1,"172":1,"251":1}}],["payload",{"2":{"49":3,"251":9}}],["pattern",{"2":{"90":1}}],["path=",{"2":{"258":2}}],["path`",{"2":{"251":1}}],["path",{"0":{"287":1},"2":{"6":2,"7":2,"52":2,"56":2,"91":1,"157":2,"158":1,"177":2,"196":1,"232":3,"233":1,"235":3,"237":1,"241":1,"242":3,"243":10,"244":2,"245":8,"246":4,"247":11,"248":11,"249":8,"250":8,"251":21,"252":10,"253":8,"254":2,"255":2,"270":6,"281":4,"282":4,"283":5,"284":4,"285":4,"286":4,"287":7,"288":4,"289":4,"290":11,"291":10,"292":10,"293":10,"294":2,"295":2,"296":2,"297":8,"298":8,"299":8,"300":10,"301":8,"302":4,"303":4,"304":4,"305":4,"306":4,"307":2,"308":7,"309":7,"310":7,"311":7,"312":4,"313":4}}],["passed",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1,"308":1,"309":1,"310":1,"311":1}}],["pass",{"2":{"89":4,"274":1}}],["passing",{"2":{"54":1,"90":1}}],["password",{"2":{"38":1,"170":1,"187":1}}],["page",{"2":{"28":1,"32":1,"230":1}}],["pages",{"2":{"24":1}}],["paging",{"2":{"26":1,"27":3}}],["parse",{"2":{"251":1,"258":1,"259":1,"260":1,"273":6,"274":4,"275":2,"279":1,"280":1}}],["parses",{"2":{"251":1}}],["parsing",{"2":{"247":2}}],["partially",{"2":{"192":1}}],["participants",{"2":{"186":1}}],["participate",{"2":{"156":1}}],["participates",{"2":{"3":1,"68":1}}],["participation",{"2":{"156":1}}],["particular",{"2":{"54":1,"145":1,"146":1}}],["part",{"2":{"156":3,"260":1,"273":2,"274":2}}],["parity",{"2":{"87":1,"104":1}}],["parent",{"2":{"80":1,"84":1,"233":1,"240":8,"290":2}}],["paru",{"2":{"19":3}}],["parallel",{"2":{"156":1,"251":4}}],["parallelizable",{"2":{"45":1}}],["params",{"2":{"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"69":1,"70":2,"71":1,"72":3,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"101":1,"102":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"126":1,"127":1,"128":1,"129":1,"132":1,"133":1,"134":1,"186":2,"187":1}}],["parameters",{"0":{"186":1},"2":{"32":1,"172":1,"226":1,"227":1,"228":1,"229":2}}],["parameter",{"2":{"17":1,"107":3,"109":2,"160":1,"227":1,"228":1,"286":1}}],["paradigmxyz",{"2":{"19":1,"34":3,"37":1,"52":1,"175":1,"186":2,"235":1,"237":1,"257":4,"270":5}}],["paradigm",{"2":{"1":1,"19":1,"265":1}}],["pub",{"2":{"271":1}}],["publicnode",{"2":{"245":1}}],["publicly",{"2":{"59":1,"87":1}}],["public",{"2":{"7":1,"21":2,"180":1,"181":1,"183":1,"198":1,"245":1}}],["publishing",{"2":{"49":1}}],["published",{"2":{"34":1}}],["publish",{"2":{"4":1}}],["push",{"2":{"90":1}}],["pure",{"2":{"54":1}}],["purchasing",{"2":{"43":1}}],["purposes",{"2":{"49":1,"160":1,"178":1,"180":1,"251":1}}],["purpose",{"2":{"13":1,"86":1,"179":1,"180":1,"181":1,"182":1,"183":1,"185":1}}],["put",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["pulled",{"2":{"176":1}}],["pull",{"2":{"4":1,"34":2}}],["prysm",{"2":{"187":1}}],["pruning",{"0":{"155":1,"191":1,"263":1},"1":{"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1},"2":{"153":3,"154":1,"155":8,"157":1,"191":2,"201":2,"214":1,"251":3,"262":1,"263":1}}],["prunes",{"2":{"200":1,"251":5}}],["pruned",{"0":{"195":1,"199":1,"208":1},"1":{"209":1,"210":1,"211":1,"212":1,"213":1},"2":{"48":1,"191":1,"192":4,"195":1,"199":1,"200":3,"201":1,"208":2,"251":5,"262":1,"263":1}}],["prune",{"0":{"153":1,"253":1},"1":{"154":1,"155":1},"2":{"7":2,"135":1,"153":1,"155":12,"200":4,"208":1,"251":26,"253":3,"260":1}}],["prerequisites",{"0":{"269":1}}],["precompile",{"2":{"251":2}}],["precompiled",{"2":{"19":1}}],["prewarming",{"2":{"251":5}}],["prefix",{"2":{"286":1}}],["prefunds",{"2":{"251":1}}],["preference",{"2":{"52":1}}],["preferred",{"2":{"37":1}}],["prestate`",{"2":{"251":1}}],["preserving",{"2":{"200":1}}],["present",{"2":{"54":1,"71":1,"80":1,"81":1,"82":1,"233":1}}],["pre",{"2":{"41":1,"57":1,"227":1,"251":1}}],["prev",{"2":{"290":4}}],["previous",{"2":{"32":1,"33":1,"45":1,"194":1,"195":1,"196":1,"278":1}}],["prevent",{"2":{"17":1}}],["predictability",{"2":{"13":1}}],["pricebump",{"2":{"251":2}}],["prices",{"2":{"251":1}}],["price",{"2":{"228":1,"251":9}}],["private",{"0":{"184":1,"186":1},"1":{"185":1,"186":1,"187":1,"188":1,"189":1,"190":1},"2":{"184":1,"185":3,"187":3,"189":1,"190":1}}],["prioritynon",{"2":{"49":1}}],["priority",{"2":{"49":6,"228":2,"251":1}}],["priorities",{"0":{"49":1}}],["prior",{"2":{"43":1,"83":1}}],["primitives",{"2":{"260":2,"274":4,"275":2,"279":2,"280":3}}],["primary",{"2":{"45":1,"137":1,"138":1,"178":1}}],["primarily",{"2":{"13":1}}],["prime",{"2":{"4":1,"57":1,"158":1}}],["prints",{"2":{"276":1}}],["print",{"2":{"6":2,"7":3,"162":1,"187":1,"242":1,"243":2,"244":2,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":2,"253":1,"254":2,"255":2,"281":1,"282":2,"283":1,"284":1,"285":2,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":2,"297":1,"298":1,"299":2,"300":1,"301":2,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["prs",{"2":{"4":1}}],["prost",{"2":{"270":1}}],["propagation",{"2":{"251":5,"252":3,"291":3,"292":3,"293":3,"300":3}}],["proposed",{"2":{"245":1}}],["propose",{"2":{"245":1}}],["proper",{"2":{"271":1}}],["properties",{"2":{"119":2,"166":1}}],["properly",{"2":{"18":1,"32":1}}],["progress",{"2":{"162":1,"251":1}}],["programming",{"2":{"92":1}}],["program",{"2":{"12":2,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["proofs",{"2":{"251":1}}],["proof",{"2":{"156":1,"251":9}}],["prom",{"2":{"166":3,"167":3}}],["prompted",{"2":{"51":1}}],["prometheus",{"0":{"162":1,"163":1},"1":{"163":1,"164":2,"165":2,"166":2,"167":2,"168":2,"169":2,"170":2,"171":1},"2":{"38":1,"40":2,"41":1,"163":2,"164":1,"166":9,"167":9,"169":1,"170":23,"185":1,"189":1,"251":1,"300":1}}],["proto3",{"2":{"271":1}}],["protobuf",{"0":{"271":1},"2":{"270":1}}],["proto",{"2":{"51":1,"271":5,"273":12,"274":12,"275":6,"276":1}}],["protocolversion✅✅✅✅✅eth",{"2":{"210":1}}],["protocolversioneth",{"2":{"204":1}}],["protocols",{"2":{"68":1,"69":1}}],["protocol",{"2":{"2":1,"90":1,"91":1,"150":2,"152":2,"177":1,"179":1,"180":1,"181":1,"182":1,"183":1,"228":1,"251":4,"252":1,"291":1,"292":1,"293":1,"300":1}}],["probably",{"2":{"47":1}}],["problem",{"2":{"12":1,"17":1}}],["procedure",{"2":{"181":1,"182":1}}],["proceed",{"2":{"33":1}}],["processed",{"2":{"262":1,"263":1}}],["processes",{"2":{"3":1,"12":1,"183":1,"238":1,"251":1,"266":1}}],["processing",{"2":{"104":1,"140":1,"260":1,"262":1}}],["process",{"0":{"16":1,"17":1},"2":{"3":1,"11":1,"15":1,"16":1,"17":1,"30":1,"32":1,"53":1,"103":3,"140":2,"141":1,"142":1,"144":1,"145":1,"146":1,"156":1,"266":2,"268":1}}],["provided",{"2":{"86":1,"91":1,"160":1,"162":1,"245":1,"249":1,"251":4,"290":1}}],["provide",{"2":{"54":1,"70":1,"160":2,"260":1,"270":1}}],["providers",{"2":{"177":1,"234":1}}],["provider",{"2":{"48":1,"251":4}}],["provides",{"2":{"13":1,"51":1,"73":1,"87":5,"93":1,"100":1,"104":1,"130":1,"158":1,"178":1,"181":1,"229":1}}],["providing",{"2":{"28":1}}],["project",{"0":{"257":1,"270":1},"1":{"271":1},"2":{"23":1,"51":1,"257":1,"270":2,"271":1}}],["projects",{"2":{"9":1}}],["produced",{"2":{"48":1}}],["produce",{"2":{"14":1}}],["production",{"2":{"0":2,"13":1}}],["prof",{"2":{"14":3,"18":13}}],["profiles",{"2":{"12":1,"13":1,"54":3}}],["profile",{"2":{"12":1,"14":6,"54":4}}],["profiling",{"0":{"10":1,"12":1},"1":{"11":1,"12":1,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2},"2":{"11":1,"12":1,"13":2,"14":6,"18":2}}],["professional",{"2":{"0":1}}],["pronunciation",{"2":{"0":1}}],["p2p",{"0":{"252":1,"294":1,"295":1,"296":1,"307":1},"2":{"0":1,"2":1,"7":2,"137":1,"138":1,"251":3,"252":6,"291":3,"292":3,"293":3,"294":2,"295":2,"296":2,"300":3,"307":2}}],["t1",{"2":{"240":2}}],["tui",{"2":{"286":1}}],["turn",{"2":{"279":1}}],["turning",{"0":{"279":1},"2":{"192":1}}],["tue",{"2":{"187":1}}],["tutorial",{"2":{"12":1,"176":1,"270":1}}],["tmp",{"2":{"91":1,"240":2}}],["txs",{"2":{"251":2}}],["txns",{"2":{"251":2}}],["txnumber",{"2":{"155":1}}],["txfeecap",{"2":{"251":1}}],["txhash",{"2":{"155":1}}],["txpool",{"0":{"125":1,"126":1,"127":1,"128":1,"129":1,"207":1,"213":1},"1":{"126":1,"127":1,"128":1,"129":1},"2":{"87":1,"89":1,"92":1,"102":1,"125":1,"126":1,"127":2,"128":1,"129":1,"251":28}}],["tx",{"2":{"76":1,"83":1,"107":1,"109":1,"111":1,"115":1,"121":1,"123":1,"177":1,"189":1,"200":1,"234":1,"251":13,"252":8,"273":4,"274":4,"275":2,"291":8,"292":8,"293":8,"298":1,"300":9}}],["tldr",{"2":{"215":1,"217":1}}],["tlsv1",{"2":{"51":1}}],["tlc",{"0":{"43":1},"2":{"42":2,"43":6,"44":1}}],["times",{"2":{"251":3,"252":2,"291":2,"292":2,"293":2,"300":2}}],["timestamp",{"2":{"187":1,"290":4}}],["timeouts",{"2":{"152":1}}],["timeout",{"2":{"150":1,"152":2,"243":4,"245":4,"247":4,"248":4,"249":4,"250":4,"251":4,"252":4,"253":4,"283":4,"290":4,"291":4,"292":4,"293":4,"297":4,"298":4,"299":4,"300":4,"301":4}}],["time",{"2":{"42":1,"45":1,"48":1,"54":1,"137":4,"138":2,"140":1,"150":1,"151":1,"152":1,"162":3,"172":1,"182":1,"187":1,"214":1,"225":1,"234":2,"235":1,"236":1,"251":4,"256":1,"270":1,"288":1}}],["tips",{"2":{"8":1}}],["tip",{"0":{"224":1},"2":{"4":1,"47":2,"160":2,"177":2,"186":1,"216":2,"224":3,"234":1,"251":4,"260":1,"274":2,"275":1,"279":1,"280":1}}],["tcp",{"2":{"37":1,"179":1,"180":1,"181":1,"182":1,"183":1,"187":21}}],["two",{"2":{"33":1,"36":1,"38":2,"49":1,"79":1,"104":1,"215":1,"234":1,"243":2,"270":2,"280":2,"283":2}}],["t",{"2":{"15":1,"17":1,"31":1,"35":1,"54":1,"57":1,"156":1,"158":1,"162":1,"208":1,"228":1,"270":1,"273":1,"274":1,"279":3,"300":1,"308":1,"309":1,"310":1,"311":1}}],["trustrpc",{"2":{"177":1,"224":1}}],["trusted",{"2":{"64":1,"66":1,"148":4,"251":6,"252":6,"291":6,"292":6,"293":6,"300":6}}],["true",{"2":{"18":3,"61":1,"63":1,"65":1,"66":1,"67":1,"72":1,"95":1,"162":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["tried",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["tries",{"0":{"297":1},"2":{"230":1,"254":2,"297":3}}],["trie",{"2":{"143":2,"216":1,"251":2}}],["triple",{"2":{"43":1}}],["trigger",{"2":{"16":1,"160":1,"232":1,"265":1}}],["troubleshooting",{"0":{"31":1,"55":1,"230":1},"1":{"32":1,"56":1,"57":1,"58":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1},"2":{"52":1,"214":1,"230":1}}],["trystreamext",{"2":{"260":1,"274":2,"275":1,"279":1,"280":1}}],["trying",{"2":{"48":1}}],["try",{"2":{"18":1,"40":1,"51":1,"57":1,"136":1,"148":2,"259":1,"260":1,"274":2,"275":1,"279":1,"280":1}}],["tree",{"2":{"15":1}}],["traverse",{"2":{"288":1}}],["trait",{"2":{"273":3,"274":2,"275":1,"279":2}}],["traditional",{"2":{"226":1,"228":1}}],["tradeoffs",{"2":{"2":1}}],["tracking",{"0":{"278":1},"1":{"279":1,"280":1},"2":{"267":1}}],["track",{"2":{"198":1,"224":1,"261":1,"278":1,"279":1,"280":2}}],["tracked",{"2":{"41":1}}],["tracing",{"0":{"105":1},"2":{"104":1,"105":2,"191":1,"251":4,"257":1,"260":2,"270":1,"273":2,"274":4,"275":2,"276":2,"279":2,"280":2}}],["tracer",{"2":{"276":1}}],["traced",{"2":{"109":1}}],["traceaddress",{"2":{"108":1,"110":2,"112":1,"114":1,"116":1,"118":1,"120":1,"122":1,"124":1}}],["tracecallmany✅✅✅❌❌debug",{"2":{"209":1}}],["tracecallmanyonly",{"2":{"203":1}}],["tracecall✅✅✅❌❌debug",{"2":{"209":1}}],["tracecallonly",{"2":{"203":1}}],["tracecall",{"0":{"84":1},"2":{"84":2}}],["tracechain",{"0":{"79":1},"2":{"79":1}}],["tracetransaction✅✅✅❌❌",{"2":{"209":1}}],["tracetransactiononly",{"2":{"203":1}}],["tracetransaction",{"0":{"83":1},"2":{"83":2,"92":1}}],["traceblock✅✅✅❌❌debug",{"2":{"209":1}}],["traceblockonly",{"2":{"203":1}}],["traceblockbynumber✅✅✅❌❌debug",{"2":{"209":1}}],["traceblockbynumberonly",{"2":{"203":1}}],["traceblockbynumber",{"0":{"82":1},"2":{"82":2}}],["traceblockbyhash✅✅✅❌❌debug",{"2":{"209":1}}],["traceblockbyhashonly",{"2":{"203":1}}],["traceblockbyhash",{"0":{"81":1},"2":{"81":2,"82":1}}],["traceblock",{"0":{"80":1},"2":{"80":2,"81":1}}],["trace",{"0":{"104":1,"106":1,"107":1,"109":1,"111":1,"113":1,"115":1,"117":1,"119":1,"121":1,"123":1,"206":1,"212":1},"1":{"105":1,"106":1,"107":1,"108":2,"109":1,"110":2,"111":1,"112":2,"113":1,"114":2,"115":1,"116":2,"117":1,"118":2,"119":1,"120":2,"121":1,"122":2,"123":1,"124":2},"2":{"54":1,"80":1,"87":1,"89":2,"92":2,"104":3,"105":6,"106":6,"107":3,"108":3,"109":4,"110":5,"111":1,"112":3,"113":1,"114":3,"115":1,"116":3,"117":1,"118":1,"119":2,"120":1,"121":2,"122":1,"123":1,"124":1,"243":2,"245":2,"247":2,"248":2,"249":2,"250":2,"251":5,"252":2,"253":2,"283":2,"290":2,"291":2,"292":2,"293":2,"297":2,"298":2,"299":2,"300":2,"301":2}}],["traces",{"2":{"1":1,"6":1,"7":1,"73":1,"87":2,"104":3,"105":3,"107":1,"109":2,"111":2,"113":1,"115":1,"117":1,"119":4,"123":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["transition",{"2":{"156":1}}],["transform",{"2":{"147":1}}],["transfer",{"2":{"106":1}}],["transport",{"2":{"89":1,"90":1,"91":2,"92":1,"166":1,"273":3,"274":2,"275":1}}],["transports",{"0":{"88":1},"1":{"89":1,"90":1,"91":1},"2":{"86":2}}],["translation",{"2":{"24":1}}],["transactionlookup",{"2":{"251":3}}],["transaction✅❌✅❌❌",{"2":{"212":1}}],["transactiononly",{"2":{"206":1}}],["transactionposition",{"2":{"118":1,"120":1,"122":1,"124":1}}],["transactionhash",{"2":{"114":1,"118":1,"120":1,"122":1,"124":1}}],["transaction",{"0":{"106":1,"123":1,"144":1,"225":1},"1":{"124":1,"226":1,"227":1,"228":1,"229":1},"2":{"15":1,"45":1,"76":1,"80":1,"83":3,"84":1,"87":1,"90":1,"104":3,"105":1,"106":3,"107":1,"109":2,"113":1,"115":1,"123":2,"124":1,"125":1,"135":1,"139":2,"140":1,"144":4,"155":5,"172":4,"189":1,"200":1,"201":1,"214":1,"225":3,"227":1,"228":2,"229":3,"234":1,"243":3,"245":3,"247":3,"248":3,"249":3,"250":3,"251":28,"252":7,"253":3,"280":2,"283":3,"290":3,"291":7,"292":7,"293":7,"297":3,"298":4,"299":3,"300":8,"301":3}}],["transactions",{"0":{"226":1,"227":1,"228":1,"229":1},"2":{"1":1,"3":1,"45":1,"90":1,"104":1,"105":1,"113":1,"126":1,"127":2,"128":1,"129":1,"139":1,"140":3,"144":1,"150":2,"155":1,"156":3,"172":2,"177":2,"222":1,"225":4,"226":3,"227":1,"228":5,"229":2,"251":19,"252":7,"280":18,"290":4,"291":7,"292":7,"293":7,"300":7,"304":1,"306":1}}],["types",{"0":{"71":1,"225":1},"1":{"226":1,"227":1,"228":1,"229":1},"2":{"44":1,"104":1,"107":1,"214":1,"225":2,"260":1,"274":2,"275":1,"279":1,"280":1}}],["type",{"2":{"12":1,"71":1,"72":1,"107":1,"108":1,"109":1,"110":2,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"118":1,"120":1,"122":1,"124":1,"170":1,"172":1,"186":4,"192":1,"226":1,"227":1,"228":1,"229":1,"251":1,"260":1,"273":3,"274":2,"275":1,"279":1,"280":1}}],["typically",{"2":{"6":2,"7":2,"43":1,"170":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["tag",{"2":{"37":1,"75":1,"107":1,"109":1,"119":1,"166":1,"167":1,"186":2}}],["tar",{"2":{"20":2,"166":3,"167":3}}],["target",{"2":{"14":1,"32":1,"52":1,"54":3,"57":1,"251":4,"313":2}}],["targets",{"2":{"12":1,"54":1,"57":1,"137":1,"138":1}}],["tap",{"2":{"19":1}}],["tasks",{"2":{"43":1,"251":7}}],["task",{"2":{"14":1,"251":4,"265":1,"273":5,"274":2,"275":1,"279":1,"280":1}}],["taking",{"2":{"12":1,"54":1}}],["taken",{"2":{"224":1}}],["takes",{"2":{"44":2}}],["take",{"2":{"9":1,"18":1,"22":1,"35":1,"44":1,"52":1,"199":1,"235":2,"236":1,"241":1,"286":1,"288":1}}],["tables",{"0":{"302":1},"2":{"202":1,"208":1,"243":2,"255":1,"283":2,"286":1,"288":1,"298":1,"302":3,"304":2,"306":2}}],["table",{"0":{"11":1},"2":{"24":1,"49":2,"57":1,"141":1,"142":1,"243":4,"281":4,"282":2,"283":3,"285":2,"286":5,"288":2,"302":2,"303":3,"304":2,"305":3,"306":2}}],["talking",{"2":{"2":1}}],["teku",{"2":{"185":1,"186":2,"187":4}}],["tee",{"2":{"166":1,"237":1}}],["temporarily",{"2":{"150":1}}],["temporary",{"2":{"147":1,"229":1,"251":1}}],["telegram",{"2":{"52":1,"191":1}}],["terminate",{"2":{"251":1}}],["terminated",{"2":{"90":1,"251":1}}],["terminal",{"2":{"6":7,"7":7,"162":2,"242":7,"243":7,"244":7,"245":7,"246":7,"247":7,"248":7,"249":7,"250":7,"251":7,"252":7,"253":7,"254":7,"255":7,"277":1,"281":7,"282":7,"283":7,"284":7,"285":7,"286":7,"287":7,"288":7,"289":7,"290":7,"291":7,"292":7,"293":7,"294":7,"295":7,"296":7,"297":7,"298":7,"299":7,"300":7,"301":7,"302":7,"303":7,"304":7,"305":7,"306":7,"307":7,"308":7,"309":7,"310":7,"311":7,"312":7,"313":7}}],["terms",{"2":{"49":1}}],["technology",{"2":{"43":1}}],["tend",{"2":{"43":1,"46":1}}],["text",{"2":{"6":1,"7":1,"162":2,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":2,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["testinprod",{"2":{"219":2,"222":1}}],["testing",{"0":{"239":1,"240":1,"241":1},"1":{"240":1,"241":1},"2":{"16":2,"160":1,"230":2,"251":2,"279":1}}],["testnet",{"0":{"184":1},"1":{"185":1,"186":1,"187":1,"188":1,"189":1,"190":1},"2":{"184":1,"185":3,"187":2,"190":1,"251":1,"267":1}}],["testnets",{"0":{"156":1},"1":{"157":1,"158":1,"159":1,"160":1,"161":1},"2":{"4":1,"185":1,"194":1,"195":1,"196":1,"214":1,"245":1}}],["test",{"0":{"302":1},"2":{"4":2,"14":1,"34":1,"35":1,"159":1,"170":1,"189":1,"240":2,"241":2,"251":11,"258":1,"302":3}}],["tests",{"2":{"4":3,"239":1,"267":1}}],["tested",{"2":{"2":2}}],["team",{"2":{"2":1}}],["teams",{"2":{"2":1}}],["though",{"2":{"162":1,"177":1}}],["those",{"2":{"17":1,"20":1,"32":1,"49":2,"103":1,"155":2,"171":1,"184":1,"200":1,"279":1}}],["throughput",{"2":{"240":16}}],["through",{"2":{"86":1,"171":1,"172":1,"179":1,"185":1,"191":1,"192":1,"195":1,"214":1,"260":1}}],["threshold",{"2":{"137":1,"139":1,"141":3,"142":3,"143":2,"145":1,"146":1,"147":1,"150":1,"251":3}}],["thresholds",{"2":{"137":2,"138":1,"139":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1}}],["threaded",{"2":{"45":1}}],["three",{"2":{"38":1,"41":1,"43":1,"174":1}}],["thanks",{"2":{"57":1,"190":1}}],["than",{"2":{"12":1,"28":1,"46":1,"54":1,"218":1,"234":2,"235":1,"239":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":3,"252":2,"253":1,"263":1,"283":1,"290":1,"291":2,"292":2,"293":2,"297":1,"298":1,"299":1,"300":2,"301":1}}],["that",{"2":{"0":1,"1":3,"2":6,"3":2,"6":1,"7":1,"9":1,"12":1,"13":1,"14":2,"15":4,"16":3,"17":1,"18":1,"24":2,"28":3,"32":1,"38":1,"41":1,"47":2,"48":1,"51":1,"52":1,"54":3,"57":1,"70":1,"78":1,"80":1,"81":1,"82":1,"83":2,"87":1,"103":2,"109":1,"126":1,"128":1,"129":1,"137":2,"138":3,"141":1,"142":1,"143":1,"149":1,"152":1,"155":1,"156":1,"157":2,"158":1,"159":2,"160":2,"161":1,"162":2,"170":1,"171":1,"172":1,"177":3,"187":4,"188":1,"192":4,"200":1,"214":1,"222":1,"225":1,"227":1,"233":2,"235":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":2,"249":1,"250":1,"251":8,"252":1,"253":1,"254":1,"255":1,"256":1,"258":1,"259":8,"260":4,"262":4,"265":2,"266":2,"268":2,"270":3,"271":1,"273":5,"274":1,"276":1,"279":4,"280":3,"281":2,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":2,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":3,"301":2,"302":3,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":2}}],["third",{"2":{"107":1}}],["things",{"2":{"22":1,"174":1,"265":1}}],["think",{"2":{"2":1}}],["this",{"0":{"1":1,"3":1,"4":1},"2":{"1":1,"2":1,"5":2,"6":4,"7":7,"12":2,"14":1,"15":1,"16":1,"17":2,"18":4,"20":1,"26":1,"27":1,"28":3,"32":4,"38":2,"40":1,"43":1,"46":1,"47":1,"48":1,"49":1,"51":1,"52":1,"54":3,"56":1,"57":2,"59":1,"70":2,"80":3,"83":1,"89":1,"92":1,"103":2,"104":1,"127":1,"140":2,"141":1,"142":1,"149":1,"150":1,"152":1,"155":3,"156":2,"157":3,"160":1,"161":1,"162":1,"170":2,"171":2,"174":1,"175":1,"176":1,"177":4,"178":1,"179":2,"180":2,"181":1,"183":1,"185":3,"191":1,"199":1,"200":1,"214":1,"218":1,"222":2,"223":1,"227":1,"229":2,"230":1,"234":1,"235":1,"241":1,"242":4,"243":6,"244":5,"245":5,"246":5,"247":6,"248":6,"249":6,"250":5,"251":20,"252":10,"253":5,"254":5,"255":5,"263":1,"268":1,"270":1,"271":3,"273":3,"278":1,"279":3,"280":9,"281":5,"282":6,"283":5,"284":5,"285":6,"286":5,"287":5,"288":6,"289":5,"290":5,"291":9,"292":9,"293":9,"294":4,"295":4,"296":5,"297":5,"298":5,"299":6,"300":9,"301":7,"302":6,"303":5,"304":5,"305":5,"306":5,"307":4,"308":5,"309":5,"310":5,"311":5,"312":5,"313":5}}],["then",{"2":{"17":1,"24":1,"28":1,"32":1,"34":1,"52":1,"70":1,"92":1,"170":3,"177":2,"186":1,"234":1,"249":1,"273":1,"301":1}}],["their",{"2":{"16":1,"57":1,"86":3,"106":1,"144":1,"150":1,"156":2,"172":1,"178":1,"183":1,"243":2,"265":1,"288":2}}],["these",{"2":{"8":1,"15":3,"19":1,"45":1,"48":1,"51":1,"54":1,"68":1,"92":2,"106":1,"119":2,"137":3,"138":3,"152":1,"157":1,"162":1,"188":1,"191":1,"201":1,"225":1,"226":1,"239":1,"251":1}}],["therefore",{"2":{"28":1,"156":1}}],["there",{"2":{"2":1,"22":1,"28":1,"32":1,"33":1,"36":1,"41":1,"44":1,"48":1,"64":1,"104":1,"140":1,"148":1,"170":1,"201":1,"214":1,"215":1,"233":2,"234":1,"260":1,"280":4,"286":1}}],["they",{"2":{"2":1,"19":1,"43":4,"44":1,"87":1,"92":1,"188":1,"226":1,"227":1,"228":1,"262":1,"265":1,"290":1}}],["themselves",{"2":{"156":1}}],["them",{"2":{"2":1,"9":1,"18":1,"43":2,"54":1,"138":1,"191":1,"229":1,"260":2,"265":1,"270":1,"273":1,"279":1}}],["the",{"0":{"2":1,"27":1,"35":1,"36":1,"92":1,"136":1,"148":1,"152":1,"153":1,"155":1,"157":1,"158":1,"159":1,"186":1,"189":1,"235":1,"271":1},"1":{"37":1,"38":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"149":1,"150":1,"151":1,"154":1,"155":1,"190":1},"2":{"1":5,"2":13,"3":5,"4":12,"5":3,"6":14,"7":18,"8":2,"9":3,"12":5,"13":1,"14":5,"15":11,"16":4,"17":7,"18":9,"19":1,"20":9,"21":1,"23":1,"24":5,"26":1,"27":1,"28":7,"30":3,"31":4,"32":18,"33":3,"34":3,"35":4,"36":1,"37":5,"38":8,"39":4,"41":1,"42":5,"43":5,"44":5,"45":3,"46":2,"47":5,"48":2,"49":6,"51":6,"52":7,"53":6,"54":11,"56":1,"57":8,"58":4,"59":1,"60":7,"62":2,"64":4,"66":2,"68":2,"70":8,"71":2,"73":2,"75":1,"78":2,"79":2,"80":2,"81":2,"82":2,"83":6,"84":8,"85":2,"86":1,"87":8,"89":13,"90":8,"91":5,"92":3,"93":3,"94":1,"96":2,"98":1,"100":3,"101":2,"103":14,"104":3,"105":1,"106":3,"107":6,"109":4,"111":2,"113":1,"115":1,"119":5,"125":2,"126":3,"127":2,"128":3,"129":3,"130":2,"131":1,"133":2,"135":7,"136":2,"137":15,"138":14,"139":4,"140":15,"141":11,"142":12,"143":10,"144":3,"145":3,"146":3,"147":1,"148":7,"149":2,"150":4,"151":2,"152":9,"153":5,"155":15,"156":11,"157":16,"158":2,"159":4,"160":4,"161":1,"162":14,"163":1,"166":1,"167":2,"170":25,"171":2,"172":21,"173":2,"174":2,"175":3,"176":8,"177":16,"178":2,"179":1,"180":2,"181":3,"182":3,"183":4,"185":5,"186":5,"187":8,"188":1,"189":1,"190":2,"191":3,"192":5,"194":2,"195":4,"196":2,"198":1,"199":1,"200":12,"201":2,"202":2,"203":7,"204":10,"206":8,"208":6,"214":2,"215":1,"216":4,"217":1,"218":5,"219":3,"222":1,"223":4,"224":5,"225":2,"226":4,"227":2,"228":11,"229":7,"230":2,"232":3,"233":5,"234":5,"235":8,"236":2,"237":5,"238":5,"241":2,"242":15,"243":28,"244":17,"245":22,"246":14,"247":27,"248":23,"249":29,"250":21,"251":143,"252":46,"253":21,"254":15,"255":16,"258":2,"259":8,"260":17,"262":5,"263":2,"265":4,"266":3,"267":1,"268":6,"269":2,"270":9,"271":8,"272":2,"273":12,"274":7,"275":2,"276":1,"277":2,"278":1,"279":12,"280":23,"281":22,"282":16,"283":19,"284":16,"285":22,"286":23,"287":15,"288":19,"289":14,"290":23,"291":47,"292":45,"293":47,"294":13,"295":13,"296":14,"297":21,"298":43,"299":22,"300":78,"301":29,"302":19,"303":14,"304":18,"305":18,"306":21,"307":13,"308":17,"309":17,"310":17,"311":17,"312":17,"313":17}}],["tokio",{"2":{"270":2,"273":8,"274":6,"275":3,"276":1}}],["tonic",{"2":{"268":1,"269":1,"270":4,"271":2,"273":6,"274":4,"275":2}}],["toggle",{"2":{"251":1}}],["together",{"2":{"106":1,"274":1}}],["toaddress",{"2":{"119":1,"120":1}}],["toblock",{"2":{"119":1,"120":1}}],["toml",{"2":{"57":1,"135":2,"195":1,"214":1,"257":1}}],["took",{"2":{"171":1,"234":1,"251":1}}],["too",{"2":{"24":1,"54":1,"234":1}}],["tool",{"2":{"16":1,"92":1}}],["tools",{"2":{"13":1,"14":1,"185":1,"235":3,"237":2,"239":1}}],["total",{"2":{"17":1,"199":1,"228":1,"229":1,"249":3,"280":6,"288":1}}],["topics",{"2":{"214":1}}],["top",{"2":{"2":1,"109":2,"148":1,"172":1}}],["to",{"0":{"17":2,"32":1,"224":1,"313":1},"2":{"0":2,"1":3,"2":12,"3":3,"4":1,"5":3,"6":13,"7":16,"12":11,"14":5,"15":5,"16":5,"17":6,"18":4,"20":1,"22":1,"23":1,"24":2,"27":1,"28":5,"31":1,"32":14,"33":3,"35":2,"36":1,"37":2,"38":3,"39":3,"40":1,"41":1,"43":6,"44":4,"45":1,"46":2,"47":2,"49":2,"51":7,"52":3,"53":3,"54":8,"56":2,"57":1,"58":2,"59":2,"60":3,"64":3,"70":2,"73":1,"81":1,"82":1,"83":4,"87":8,"89":8,"90":3,"91":1,"92":4,"96":1,"100":1,"103":6,"104":1,"105":1,"106":2,"110":4,"111":1,"118":1,"119":3,"120":1,"122":1,"124":1,"125":1,"136":2,"137":6,"138":6,"139":3,"140":9,"141":5,"142":5,"143":2,"144":4,"145":3,"146":3,"147":3,"148":10,"149":3,"150":3,"151":2,"152":2,"156":8,"157":5,"158":1,"159":2,"160":5,"161":1,"162":5,"163":3,"170":8,"171":3,"172":7,"174":3,"175":2,"176":2,"177":16,"179":2,"180":2,"181":4,"183":2,"184":1,"185":6,"186":1,"187":3,"189":1,"190":2,"191":3,"194":1,"195":2,"196":3,"200":2,"214":3,"215":2,"216":3,"218":4,"219":2,"221":1,"222":3,"224":3,"225":2,"226":2,"227":1,"228":6,"229":4,"230":2,"232":2,"234":3,"235":1,"237":2,"238":2,"239":2,"242":16,"243":20,"244":13,"245":20,"246":15,"247":22,"248":22,"249":23,"250":20,"251":95,"252":43,"253":21,"254":13,"255":13,"258":2,"259":5,"260":10,"263":3,"265":1,"266":2,"267":1,"268":4,"269":1,"270":5,"271":6,"273":13,"274":16,"275":7,"276":4,"277":1,"278":1,"279":10,"280":9,"281":17,"282":14,"283":17,"284":14,"285":14,"286":16,"287":14,"288":16,"289":14,"290":21,"291":48,"292":43,"293":48,"294":13,"295":13,"296":13,"297":20,"298":20,"299":20,"300":52,"301":21,"302":17,"303":14,"304":14,"305":16,"306":15,"307":14,"308":20,"309":20,"310":20,"311":20,"312":14,"313":16}}],["u64",{"2":{"280":4}}],["util",{"2":{"257":1,"260":1,"270":1,"274":2,"275":1,"279":1,"280":1}}],["utilization",{"2":{"136":1}}],["utilize",{"2":{"43":1,"226":1}}],["utility",{"2":{"87":1,"130":1}}],["utilities",{"2":{"7":2,"243":1,"252":1,"257":1}}],["u",{"2":{"245":1}}],["uuid",{"2":{"187":3}}],["uri",{"2":{"177":1}}],["urls",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["url",{"2":{"40":1,"60":2,"62":1,"64":1,"66":1,"70":1,"158":2,"161":2,"170":2,"245":4,"247":3,"251":4}}],["udp",{"2":{"37":2,"179":1,"187":8,"251":6,"252":6,"291":6,"292":6,"293":6,"300":6}}],["uqquy9j",{"2":{"21":1}}],["ubuntu",{"0":{"166":1},"2":{"17":2,"20":2,"51":1}}],["uncompressed",{"2":{"286":1}}],["unpack",{"2":{"279":1}}],["unpin",{"2":{"279":1,"280":1}}],["unwound",{"2":{"301":1}}],["unwrap",{"2":{"273":3,"274":2,"275":1}}],["unwinding",{"2":{"300":2}}],["unwinds",{"2":{"255":1,"301":3,"312":1,"313":1}}],["unwind",{"0":{"301":1,"312":1,"313":1},"2":{"255":1,"291":1,"300":2,"301":2,"312":2,"313":2}}],["unused",{"2":{"251":3,"259":1}}],["unlock",{"2":{"238":1}}],["unlike",{"2":{"228":1}}],["unless",{"2":{"15":1,"46":1,"87":1,"91":1,"177":1,"233":1,"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["unavailable",{"2":{"201":1}}],["unique",{"2":{"225":1}}],["uninstallfilter✅✅✅✅✅eth",{"2":{"210":1}}],["uninstallfiltereth",{"2":{"204":1}}],["unichain",{"2":{"173":2}}],["unidirectional",{"2":{"89":1}}],["unix",{"2":{"86":1,"91":1}}],["unit",{"2":{"4":1}}],["unspecified",{"2":{"153":1}}],["unsubscribe✅✅✅✅✅",{"2":{"210":1}}],["unsubscribe",{"0":{"70":1},"1":{"71":1,"72":1},"2":{"70":3,"72":2,"204":1}}],["unstable",{"2":{"19":1,"54":1}}],["unknown",{"2":{"20":2,"69":1,"132":1}}],["until",{"2":{"12":1,"90":1,"103":4,"137":1,"138":1,"157":1,"218":1,"224":1,"249":1,"301":2,"312":1,"313":1}}],["unbundling",{"2":{"2":1}}],["underpriced",{"2":{"251":1}}],["undergone",{"2":{"225":1}}],["understood",{"2":{"183":1}}],["understand",{"2":{"43":1,"49":1,"103":1}}],["understanding",{"0":{"18":1,"27":1},"2":{"11":1,"12":1,"16":1}}],["underscore",{"2":{"86":1}}],["underwent",{"2":{"4":1}}],["under",{"2":{"1":1,"2":2,"17":1,"40":1,"46":1,"52":2,"57":1,"251":1}}],["upgrading",{"2":{"239":1}}],["upgrades",{"2":{"225":1}}],["upload",{"2":{"170":1}}],["updating",{"2":{"143":1}}],["updated",{"2":{"158":1,"179":1}}],["updates",{"0":{"234":1},"1":{"235":1,"236":1},"2":{"49":3,"230":1,"251":3}}],["update",{"0":{"49":1,"53":1},"2":{"49":3,"51":3,"53":1,"57":1,"164":1,"166":1,"280":1}}],["upon",{"2":{"106":1}}],["upper",{"2":{"28":3,"170":1}}],["up",{"0":{"187":1},"2":{"2":1,"5":1,"12":1,"17":1,"24":1,"38":1,"40":1,"47":1,"137":1,"157":1,"159":1,"160":1,"170":1,"177":1,"185":1,"187":2,"199":1,"200":2,"216":1,"249":2,"251":4,"252":1,"291":1,"292":1,"293":1,"300":1}}],["uptime",{"2":{"0":1}}],["usize",{"2":{"276":3}}],["using",{"0":{"36":1,"37":1,"38":1,"169":1,"184":1,"185":1,"188":1,"238":1},"1":{"37":1,"38":1,"185":1,"186":2,"187":2,"188":1,"189":1,"190":1},"2":{"5":1,"9":1,"13":1,"18":1,"19":1,"20":3,"21":1,"33":1,"36":2,"41":1,"44":1,"51":1,"57":2,"84":1,"89":2,"90":3,"91":2,"92":1,"139":1,"155":1,"157":3,"161":1,"164":1,"170":1,"185":1,"191":1,"230":1,"236":1,"238":2,"247":1,"251":3,"260":1,"262":1,"266":1,"270":1,"271":1,"273":1,"280":2,"286":1}}],["usr",{"2":{"170":1}}],["us",{"2":{"52":1,"149":1,"150":1}}],["usually",{"2":{"14":1,"15":1,"232":1,"262":1}}],["uses",{"2":{"137":1,"138":1,"143":1,"185":1,"222":1,"251":1,"286":1}}],["useful",{"2":{"3":1,"5":1,"8":1,"16":1,"160":1,"171":1,"251":2,"300":1,"302":1}}],["used",{"2":{"2":3,"3":2,"4":1,"6":2,"7":2,"9":1,"13":1,"14":1,"15":2,"17":2,"54":1,"70":1,"87":1,"136":1,"141":1,"142":1,"147":1,"148":1,"172":1,"178":1,"185":2,"186":1,"187":1,"232":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":8,"252":7,"253":2,"254":2,"255":2,"263":1,"281":3,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":7,"292":7,"293":7,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":7,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["use",{"0":{"17":1},"2":{"0":1,"1":1,"2":3,"3":3,"6":5,"7":5,"12":1,"14":2,"17":3,"18":1,"19":2,"31":1,"32":1,"36":1,"37":3,"40":1,"43":1,"46":1,"48":2,"49":1,"54":1,"57":1,"91":1,"92":1,"157":2,"161":1,"163":2,"176":1,"185":1,"186":1,"188":1,"190":1,"218":1,"224":1,"226":1,"228":1,"232":1,"237":2,"242":6,"243":6,"244":5,"245":6,"246":5,"247":6,"248":6,"249":6,"250":6,"251":17,"252":13,"253":6,"254":5,"255":5,"258":1,"259":4,"260":5,"268":1,"270":1,"273":20,"274":22,"275":10,"276":3,"277":1,"279":8,"280":7,"281":5,"282":5,"283":5,"284":5,"285":5,"286":5,"287":5,"288":6,"289":5,"290":6,"291":13,"292":13,"293":13,"294":5,"295":5,"296":5,"297":6,"298":6,"299":6,"300":13,"301":6,"302":5,"303":5,"304":5,"305":5,"306":5,"307":5,"308":5,"309":5,"310":5,"311":5,"312":5,"313":5}}],["username",{"2":{"38":1,"170":1}}],["user",{"2":{"0":1,"16":1,"24":2,"26":1,"28":2,"32":1,"49":1,"187":1,"225":1}}],["users",{"2":{"0":1,"1":1,"3":1,"12":1,"19":1,"48":1,"157":1}}],["usage",{"0":{"15":1},"2":{"0":1,"2":1,"6":1,"7":1,"11":1,"12":2,"15":3,"16":2,"18":1,"106":1,"137":1,"138":1,"139":1,"141":1,"142":1,"144":1,"145":1,"146":1,"147":1,"229":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":3,"252":3,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":3,"292":3,"293":3,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":3,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["ots",{"2":{"251":2}}],["otherwise",{"2":{"23":1,"64":1,"172":1,"286":1}}],["others",{"2":{"12":2,"103":1,"153":1,"155":1,"170":1,"171":1}}],["other",{"2":{"3":1,"6":1,"7":1,"8":1,"12":1,"37":1,"43":1,"46":1,"49":1,"70":1,"104":1,"148":1,"156":1,"160":1,"170":1,"172":1,"179":2,"201":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":7,"252":1,"253":1,"254":1,"255":1,"277":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":2,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["ok",{"2":{"241":1,"259":1,"260":2,"273":5,"274":9,"275":5,"276":1,"279":2,"280":2}}],["old",{"2":{"235":2,"260":4,"265":1,"276":4,"279":4}}],["ovm",{"2":{"215":1,"216":1,"218":1,"219":1,"221":1,"222":1}}],["overhead",{"2":{"251":1}}],["overwritten",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["overpricing",{"2":{"228":1}}],["override",{"2":{"157":2}}],["overrides",{"2":{"155":1}}],["overridden",{"2":{"155":1}}],["over",{"2":{"42":3,"70":1,"86":1,"137":1,"138":1,"150":1,"157":2,"162":1,"177":1,"181":1,"185":2,"187":1,"188":1,"224":1,"225":1,"251":1}}],["overall",{"2":{"17":1}}],["overview",{"2":{"9":1,"18":1,"43":1,"170":1}}],["occupies",{"2":{"198":1,"200":1}}],["occurred",{"2":{"237":2}}],["occurring",{"2":{"15":1}}],["occur",{"2":{"16":1,"28":1}}],["o",{"2":{"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1,"166":1,"235":1}}],["omitted",{"2":{"107":1,"177":2}}],["observability",{"0":{"162":1},"1":{"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1},"2":{"159":1,"185":1,"214":1}}],["observed",{"2":{"103":1}}],["object",{"2":{"79":1,"107":1}}],["objects",{"2":{"6":2,"7":2,"119":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["obtained",{"2":{"33":1}}],["obtain",{"2":{"33":1,"34":1,"41":1}}],["ownership",{"2":{"232":1}}],["own",{"2":{"32":1,"48":1,"191":1,"265":1,"267":1}}],["osx",{"2":{"170":1}}],["oss",{"2":{"166":1,"167":1}}],["os",{"2":{"31":1,"32":2,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":3,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["oarmxgaoegorbgeeazdvaqubaqdapfagkjqdmd9rmualqvbqwy23w3txsths4oy8",{"2":{"21":1}}],["ooms",{"2":{"16":2,"17":2}}],["oom",{"2":{"12":3,"15":3}}],["outsources",{"2":{"156":1}}],["outside",{"2":{"137":1,"138":1}}],["outbound",{"2":{"149":2,"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["outgoing",{"2":{"148":1,"152":1}}],["outperform",{"2":{"48":1}}],["output",{"2":{"6":1,"7":1,"18":2,"106":1,"108":2,"110":4,"112":2,"114":2,"116":2,"118":1,"120":1,"122":1,"124":1,"187":1,"237":1,"241":2,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"279":2,"280":2,"281":1,"282":1,"283":6,"284":1,"285":1,"286":2,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":2,"306":2,"307":1,"308":5,"309":5,"310":5,"311":5,"312":1,"313":1}}],["outputs",{"2":{"6":2,"7":2,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["outdated",{"2":{"12":1}}],["out",{"2":{"8":1,"12":2,"15":1,"52":1,"54":1,"57":1,"150":1,"172":1,"187":1,"190":1,"238":1,"251":3,"252":3,"266":1,"276":1,"291":3,"292":3,"293":3,"300":3}}],["our",{"2":{"2":1,"4":1,"8":1,"48":2,"157":1,"163":1,"198":1,"257":1,"258":1,"259":2,"260":1,"267":1,"268":1,"270":1,"272":1,"273":3,"274":3,"276":1,"277":2,"278":2,"279":5,"280":5}}],["opcode",{"2":{"251":1}}],["opcodes",{"2":{"80":1}}],["opposed",{"2":{"141":1,"142":1,"143":1}}],["opt",{"2":{"170":1,"177":1}}],["opts",{"2":{"80":1,"81":1,"82":1,"83":1,"84":1}}],["optimal",{"2":{"136":1}}],["optimistic",{"2":{"224":1}}],["optimism",{"0":{"174":1},"1":{"175":1,"176":1,"177":1},"2":{"172":2,"175":1,"216":2,"219":1,"221":1,"222":1,"223":1}}],["optimisations",{"2":{"54":3}}],["optimizations",{"0":{"54":1}}],["optimized",{"2":{"2":1}}],["option",{"2":{"44":1,"89":1,"157":1,"280":1,"288":1}}],["optionally",{"2":{"84":1,"161":1,"300":1}}],["optional",{"2":{"38":1,"54":1,"107":2,"109":1,"119":1,"189":1,"222":1}}],["options",{"2":{"6":2,"7":2,"18":1,"32":1,"157":1,"176":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["op",{"0":{"6":1,"172":1,"175":1,"177":1,"215":1},"1":{"173":1,"174":1,"175":1,"176":1,"177":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1},"2":{"6":5,"172":4,"173":1,"174":4,"175":4,"176":5,"177":12,"214":2,"215":1,"216":6,"218":3,"219":5,"221":2,"222":3,"223":2,"224":3,"265":1}}],["operations",{"2":{"171":1}}],["operation",{"2":{"28":1,"45":1,"158":1,"180":1}}],["operating",{"2":{"23":1,"47":1,"51":1}}],["operate",{"2":{"2":1,"4":1}}],["operators",{"2":{"0":1,"2":1}}],["opening",{"2":{"258":1}}],["opened",{"2":{"233":1}}],["opens",{"2":{"137":1}}],["open",{"0":{"32":1},"2":{"2":1,"32":1,"39":1,"157":1,"160":1,"170":1,"233":1,"237":1,"243":2,"245":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"283":2,"290":2,"291":2,"292":2,"293":2,"297":2,"298":2,"299":2,"300":2,"301":2}}],["often",{"2":{"16":2,"148":2}}],["offences",{"2":{"150":1}}],["offers",{"2":{"182":1}}],["offer",{"2":{"28":1,"43":1}}],["offset",{"2":{"119":1}}],["offline",{"2":{"47":1,"301":1}}],["off",{"2":{"6":1,"7":1,"170":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["official",{"2":{"5":1,"27":1,"31":1,"194":1,"195":1,"196":1,"214":1}}],["of",{"0":{"2":1,"11":1,"155":1,"186":1},"2":{"1":1,"2":4,"3":1,"4":4,"6":2,"7":3,"8":1,"9":3,"12":5,"14":1,"15":4,"16":3,"17":2,"18":2,"19":4,"20":2,"23":1,"26":1,"27":1,"28":6,"32":3,"34":1,"35":1,"38":1,"43":4,"44":4,"45":3,"46":3,"51":3,"52":1,"54":6,"57":4,"58":1,"60":2,"64":1,"70":1,"77":1,"78":1,"79":1,"80":3,"84":2,"86":1,"87":1,"90":1,"92":1,"93":1,"96":1,"101":1,"103":4,"104":1,"106":1,"107":2,"109":4,"119":1,"123":1,"126":1,"127":1,"128":1,"129":1,"133":1,"135":1,"136":1,"137":9,"138":8,"139":2,"140":6,"141":5,"142":5,"143":2,"144":2,"145":2,"146":2,"147":1,"148":3,"149":2,"150":1,"151":1,"152":4,"153":3,"156":4,"160":2,"162":3,"170":2,"172":4,"174":2,"176":2,"177":3,"179":1,"183":2,"189":1,"191":3,"197":1,"198":1,"199":1,"200":1,"201":3,"221":2,"222":2,"223":1,"225":1,"227":1,"229":3,"235":1,"237":1,"238":2,"242":2,"243":6,"244":4,"245":2,"246":2,"247":2,"248":2,"249":4,"250":2,"251":67,"252":20,"253":2,"254":3,"255":3,"256":1,"258":1,"260":3,"261":1,"262":2,"265":3,"269":1,"270":3,"271":3,"273":1,"274":2,"277":1,"278":1,"279":3,"280":15,"281":6,"282":3,"283":2,"284":2,"285":6,"286":10,"287":2,"288":3,"289":2,"290":3,"291":19,"292":19,"293":19,"294":2,"295":2,"296":3,"297":2,"298":2,"299":3,"300":20,"301":4,"302":6,"303":2,"304":2,"305":4,"306":4,"307":2,"308":2,"309":2,"310":2,"311":2,"312":3,"313":2}}],["oracle",{"2":{"251":1}}],["original",{"2":{"235":3}}],["originally",{"2":{"1":1}}],["origins",{"2":{"90":1,"251":3}}],["origin",{"2":{"89":1,"90":1}}],["ordering",{"2":{"172":1}}],["order",{"2":{"17":1,"54":1,"156":1,"160":1,"286":1,"290":1,"300":1}}],["org",{"2":{"12":1,"85":1,"177":1}}],["or",{"0":{"156":1},"1":{"157":1,"158":1,"159":1,"160":1,"161":1},"2":{"0":1,"2":2,"3":1,"5":1,"6":1,"7":2,"9":2,"12":2,"14":2,"15":1,"16":1,"17":1,"19":1,"23":1,"32":1,"33":1,"34":1,"40":1,"42":1,"43":2,"45":1,"48":2,"49":3,"51":1,"52":1,"54":2,"56":1,"57":2,"60":1,"62":1,"64":1,"70":1,"71":2,"75":1,"80":1,"84":1,"87":1,"90":1,"92":2,"94":1,"103":3,"104":2,"105":2,"107":2,"109":1,"119":1,"135":1,"148":1,"157":1,"159":1,"170":2,"171":2,"173":1,"176":1,"184":1,"185":2,"188":2,"191":1,"192":2,"194":1,"195":1,"196":1,"201":1,"214":1,"216":1,"235":1,"237":2,"238":2,"239":1,"242":1,"243":6,"244":2,"245":5,"246":3,"247":4,"248":4,"249":6,"250":4,"251":11,"252":8,"253":4,"254":2,"255":2,"256":1,"260":1,"262":1,"265":3,"280":1,"281":3,"282":4,"283":4,"284":3,"285":4,"286":3,"287":3,"288":3,"289":3,"290":4,"291":7,"292":7,"293":7,"294":2,"295":2,"296":2,"297":4,"298":4,"299":5,"300":7,"301":6,"302":3,"303":3,"304":3,"305":3,"306":3,"307":1,"308":3,"309":3,"310":3,"311":3,"312":3,"313":4}}],["online",{"2":{"27":1,"47":1,"248":1}}],["only",{"0":{"40":1},"2":{"16":2,"26":1,"28":1,"38":1,"47":1,"54":1,"71":1,"103":1,"106":1,"126":1,"128":1,"129":1,"148":2,"155":2,"156":1,"192":1,"200":1,"215":1,"233":3,"251":5,"252":3,"260":1,"262":1,"263":1,"288":1,"291":3,"292":3,"293":3,"300":3}}],["once",{"2":{"20":1,"32":1,"33":1,"35":1,"39":1,"47":1,"160":1,"170":2,"177":1}}],["ones",{"2":{"45":1,"126":1,"128":1,"129":1}}],["one",{"2":{"6":1,"7":1,"9":1,"15":1,"19":1,"40":1,"41":1,"54":3,"83":1,"92":1,"107":1,"137":1,"157":1,"187":1,"238":1,"242":1,"243":1,"244":1,"245":2,"246":1,"247":1,"248":1,"249":1,"250":1,"251":3,"252":3,"253":1,"254":1,"255":1,"277":1,"280":2,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":3,"292":3,"293":3,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":3,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["on",{"0":{"24":1,"156":1,"172":1,"174":1,"188":1},"1":{"157":1,"158":1,"159":1,"160":1,"161":1,"173":1,"174":1,"175":2,"176":2,"177":2},"2":{"0":1,"1":1,"2":2,"4":1,"5":2,"6":2,"7":2,"8":1,"12":1,"13":1,"15":1,"16":2,"17":1,"18":1,"22":1,"24":1,"26":1,"27":2,"28":1,"34":1,"38":2,"40":2,"41":1,"42":1,"43":2,"44":3,"45":1,"46":1,"47":1,"48":2,"50":2,"51":1,"52":1,"54":2,"56":1,"57":1,"58":1,"78":1,"83":1,"85":1,"86":2,"87":1,"89":2,"91":3,"103":1,"104":2,"105":1,"109":2,"136":1,"140":1,"151":1,"152":2,"157":2,"158":2,"161":1,"163":1,"170":6,"171":2,"172":1,"175":1,"176":2,"177":2,"185":2,"187":1,"188":2,"191":1,"194":2,"195":2,"196":2,"214":2,"218":2,"224":1,"227":1,"233":2,"234":3,"235":4,"237":1,"240":2,"242":2,"243":3,"244":2,"245":3,"246":2,"247":3,"248":3,"249":4,"250":3,"251":16,"252":5,"253":3,"254":2,"255":2,"258":1,"260":1,"262":1,"265":1,"267":1,"273":4,"277":2,"279":2,"280":1,"281":2,"282":2,"283":3,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":3,"291":5,"292":5,"293":5,"294":2,"295":2,"296":2,"297":3,"298":3,"299":3,"300":6,"301":3,"302":3,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["mpsc",{"2":{"273":6,"274":4,"275":2}}],["myexex",{"2":{"279":5,"280":4}}],["my",{"2":{"257":3,"259":4,"260":3,"279":1,"280":1}}],["mycoolapp",{"2":{"89":1}}],["mnemonic",{"2":{"251":1}}],["mhz",{"2":{"241":2}}],["mv",{"2":{"235":2}}],["msi",{"2":{"170":1}}],["msrv",{"2":{"51":1,"57":1}}],["mdbx",{"0":{"303":1,"305":1},"2":{"26":1,"28":1,"32":1,"147":1,"233":1,"235":3,"237":5,"238":1,"282":1,"285":1,"303":2,"305":2}}],["mdmezl4gjhyjkwybbaharw8baqdau5gninbafigf9s9gzz1zhdwztv",{"2":{"21":1}}],["m",{"2":{"17":2}}],["mutable",{"2":{"279":1}}],["mutates",{"2":{"140":1}}],["mut",{"2":{"259":1,"260":1,"273":1,"274":4,"275":2,"276":2,"279":3,"280":3}}],["mutually",{"2":{"251":1}}],["mutex",{"2":{"238":2}}],["much",{"2":{"140":1,"276":1}}],["multimedia",{"2":{"43":1}}],["multiple",{"2":{"4":2,"44":1,"54":1,"86":1,"109":1,"238":2,"251":1,"302":1}}],["must",{"2":{"14":1,"17":1,"23":1,"24":1,"39":1,"58":1,"80":1,"86":2,"157":1,"218":1,"222":1,"223":1,"249":3,"290":1}}],["mb",{"2":{"6":1,"7":1,"229":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["mention",{"2":{"263":1}}],["mentioned",{"2":{"201":1}}],["megabytes",{"2":{"251":7}}],["merge",{"2":{"156":2}}],["merkle",{"0":{"143":1,"292":1,"293":1,"310":1},"2":{"135":1,"143":2,"244":2,"245":2,"292":2,"293":2,"298":2,"299":2,"300":2,"310":3}}],["measured",{"2":{"155":1,"251":1}}],["meant",{"2":{"183":1}}],["meantime",{"2":{"159":1}}],["mean",{"2":{"57":1}}],["means",{"2":{"47":1,"137":1,"138":3,"152":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["meaning",{"2":{"43":1,"188":1,"200":1,"233":1}}],["mechanism",{"2":{"103":1}}],["medium",{"2":{"49":1,"151":1}}],["meta",{"2":{"304":1,"306":1}}],["metadata",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["metal",{"2":{"48":1}}],["method",{"2":{"60":2,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":2,"71":1,"72":3,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":2,"81":1,"82":1,"83":2,"84":2,"86":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"101":1,"102":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"126":1,"127":1,"128":1,"129":1,"131":1,"132":1,"133":1,"134":1,"160":1,"208":3,"251":1,"252":1,"260":1,"271":2,"279":2,"291":1,"292":1,"293":1,"300":1}}],["methods",{"2":{"41":1,"70":1,"73":1,"85":1,"86":1,"87":3,"100":1,"104":2,"160":1,"201":1,"202":1,"251":1}}],["metric",{"2":{"15":1}}],["metrics",{"0":{"180":1},"2":{"5":1,"15":4,"37":2,"38":2,"162":7,"163":1,"170":5,"171":2,"180":1,"181":1,"185":1,"187":5,"189":1,"251":6,"300":3}}],["memtester",{"2":{"237":1,"241":3}}],["memtest86+",{"2":{"237":1}}],["mempool",{"2":{"177":1}}],["mem",{"2":{"17":1}}],["memory16gb+8gb+cpuhigher",{"2":{"42":1}}],["memory",{"0":{"12":1,"15":1,"16":1,"17":1,"24":1,"25":1,"46":1,"292":1},"1":{"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"26":1,"27":1,"28":1,"29":1},"2":{"11":3,"12":14,"15":9,"16":5,"17":10,"18":1,"24":2,"26":3,"27":3,"30":1,"31":1,"32":1,"46":2,"54":1,"57":2,"137":3,"138":3,"139":1,"140":3,"141":1,"142":1,"144":1,"145":1,"146":1,"147":1,"152":1,"237":2,"240":1,"241":3,"244":2,"251":5,"266":1,"292":3}}],["messages",{"2":{"152":3,"158":1,"238":1,"243":3,"245":3,"247":3,"248":3,"249":3,"250":3,"251":5,"252":3,"253":3,"283":3,"290":3,"291":3,"292":3,"293":3,"297":3,"298":3,"299":3,"300":3,"301":3}}],["message",{"2":{"7":1,"150":1,"160":1,"243":1,"244":1,"252":1,"254":1,"255":1,"271":2,"276":4,"282":1,"285":1,"296":1,"299":1,"301":1}}],["mev",{"2":{"0":1,"189":2,"251":2}}],["monopolistic",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["monitor",{"2":{"12":1,"159":1}}],["monitoring",{"0":{"15":1},"2":{"11":1,"15":1,"180":2}}],["move",{"2":{"235":1,"258":1,"259":2,"260":2,"273":7,"274":7,"275":4,"279":2,"280":2}}],["moving",{"2":{"12":1}}],["mounted",{"2":{"232":1}}],["mountain",{"2":{"187":2}}],["moment",{"2":{"160":1}}],["most",{"2":{"12":1,"42":1,"45":1,"46":1,"54":1,"90":1,"230":1,"234":1,"237":1,"251":1,"263":1}}],["mod",{"2":{"271":1}}],["modify",{"2":{"195":1}}],["modified",{"2":{"186":1}}],["modifications",{"2":{"172":1}}],["module",{"2":{"104":1}}],["modules",{"0":{"101":1},"1":{"102":1},"2":{"87":1,"101":1,"102":1,"251":2}}],["modularity",{"2":{"2":1}}],["modular",{"2":{"0":1}}],["mode`",{"2":{"251":3}}],["modes",{"0":{"193":1},"1":{"194":1,"195":1,"196":1}}],["modern",{"2":{"90":1}}],["mode",{"2":{"3":3,"44":1,"194":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":3,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["more",{"2":{"2":1,"9":1,"14":1,"16":1,"28":1,"43":2,"45":1,"48":2,"54":1,"56":1,"107":1,"126":1,"127":1,"128":1,"129":1,"137":2,"138":2,"139":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1,"147":1,"148":1,"155":1,"157":1,"172":2,"185":1,"214":1,"234":1,"238":1,"251":2,"252":2,"261":1,"265":1,"270":1,"279":2,"291":2,"292":2,"293":2,"300":2}}],["map",{"2":{"280":2}}],["mappings",{"2":{"155":1}}],["mapped",{"2":{"26":1,"240":1}}],["market",{"2":{"226":1,"227":1,"228":1,"229":1}}],["margins",{"2":{"0":1}}],["magi",{"2":{"174":1,"176":1}}],["made",{"2":{"138":2,"223":1}}],["matter",{"2":{"46":1}}],["matters",{"2":{"45":1}}],["matches",{"2":{"260":1}}],["matching",{"2":{"119":1}}],["match",{"2":{"2":1,"260":2,"276":1,"279":1,"280":1}}],["macro",{"2":{"279":1}}],["mac",{"2":{"40":1,"157":1}}],["macos",{"0":{"164":1},"2":{"19":2,"41":1,"50":1,"51":1,"91":1,"135":1,"170":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["machines",{"2":{"16":1,"17":1,"34":1}}],["machine",{"2":{"15":1,"16":2,"57":1,"91":1,"185":2,"187":1,"251":1,"258":1,"302":1}}],["malloc",{"2":{"18":3}}],["maybeweb3the",{"2":{"87":1}}],["may",{"2":{"14":1,"15":1,"17":2,"27":1,"43":1,"49":1,"52":1,"54":2,"83":1,"103":3,"136":1,"137":1,"138":1,"170":1,"215":1,"217":1,"239":2,"279":1}}],["manually",{"2":{"218":1,"249":1,"251":1,"270":1,"279":2}}],["manual",{"0":{"170":1,"219":1,"220":1},"1":{"221":1,"222":1,"223":1}}],["manufacturing",{"2":{"43":1}}],["manufacturer",{"2":{"27":1}}],["manner",{"2":{"49":1,"83":1,"147":1}}],["manages",{"2":{"262":1}}],["manage",{"2":{"228":1}}],["management",{"2":{"12":1}}],["managing",{"2":{"18":1}}],["many",{"2":{"12":2,"15":1,"149":1,"189":1,"251":2,"286":1}}],["manipulate",{"2":{"7":1,"255":1}}],["maxfeepergas",{"2":{"228":1}}],["maxprice",{"2":{"251":1}}],["maxpriorityfeepergas",{"2":{"228":1}}],["maxpriorityfeepergas✅✅✅✅✅eth",{"2":{"210":1}}],["maxpriorityfeepergaseth",{"2":{"204":1}}],["maxperf",{"2":{"14":2,"54":3}}],["maximum",{"2":{"6":2,"7":2,"28":1,"137":3,"138":3,"140":4,"144":1,"145":1,"146":1,"147":1,"149":2,"228":2,"229":1,"242":2,"243":3,"244":2,"245":3,"246":2,"247":3,"248":3,"249":3,"250":3,"251":28,"252":5,"253":3,"254":2,"255":2,"276":1,"281":3,"282":2,"283":3,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":3,"291":6,"292":5,"293":5,"294":2,"295":2,"296":2,"297":3,"298":3,"299":3,"300":5,"301":3,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["max",{"2":{"6":2,"7":2,"137":2,"138":2,"140":4,"149":2,"151":1,"229":1,"242":2,"243":4,"244":2,"245":4,"246":2,"247":4,"248":4,"249":4,"250":4,"251":97,"252":20,"253":4,"254":2,"255":2,"276":5,"281":2,"282":2,"283":4,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":4,"291":20,"292":20,"293":20,"294":2,"295":2,"296":2,"297":4,"298":4,"299":4,"300":20,"301":4,"302":3,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["making",{"2":{"6":2,"7":2,"16":1,"43":2,"111":1,"177":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["makefile",{"2":{"175":1}}],["makes",{"2":{"156":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"279":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["make",{"2":{"4":1,"47":1,"57":1,"148":1,"158":1,"175":1,"177":1,"235":1,"237":1,"277":1}}],["maintain",{"2":{"179":1,"251":1}}],["maintains",{"2":{"148":1}}],["maintained",{"2":{"48":1,"90":1,"158":1,"176":1}}],["mainly",{"2":{"147":1}}],["mainnet",{"0":{"156":1,"215":1},"1":{"157":1,"158":1,"159":1,"160":1,"161":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1},"2":{"4":1,"24":1,"37":1,"44":1,"98":1,"157":1,"158":1,"174":1,"177":3,"194":1,"195":1,"196":1,"197":1,"214":1,"215":1,"216":2,"218":3,"223":1,"243":2,"245":4,"246":2,"247":2,"248":2,"249":2,"250":2,"251":4,"252":2,"253":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["main",{"2":{"4":1,"166":1,"234":1,"258":2,"259":2,"260":5,"265":1,"266":1,"273":4,"274":2,"275":1,"276":2,"279":1,"280":2}}],["milliseconds",{"2":{"251":2}}],["million",{"2":{"221":1,"222":1,"223":1}}],["mib",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["migrate",{"2":{"219":1}}],["might",{"2":{"28":2,"54":1,"103":1,"157":1,"170":1,"238":1,"286":1}}],["misc",{"2":{"270":1}}],["misbehaves",{"2":{"150":1}}],["missing",{"2":{"33":1,"286":1}}],["mission",{"2":{"0":1}}],["mine",{"2":{"251":1}}],["mined",{"2":{"251":1}}],["miners",{"2":{"228":1}}],["miner",{"2":{"228":1,"251":2}}],["mining✅✅✅✅✅eth",{"2":{"210":1}}],["miningeth",{"2":{"204":1}}],["minimal",{"0":{"216":1},"2":{"215":1,"251":2,"260":1,"273":1}}],["minimal=yes",{"2":{"32":1}}],["minimum",{"2":{"6":1,"7":1,"51":1,"57":1,"137":1,"138":1,"155":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":3,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":4,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["minor",{"2":{"172":1}}],["min",{"2":{"54":1,"137":1,"138":1,"286":6}}],["minutes",{"2":{"35":1,"52":1,"221":1,"222":1,"223":1}}],["mix",{"2":{"2":1,"238":1}}],["mit",{"2":{"1":1,"2":2}}],["snippet",{"2":{"273":2,"274":4,"275":2}}],["snapshot",{"2":{"215":1,"216":2,"218":1,"245":3}}],["snapshots",{"2":{"7":1,"18":1,"245":2}}],["src",{"2":{"270":6,"271":1,"272":1}}],["sf",{"2":{"258":1}}],["s1g",{"2":{"240":2}}],["skip",{"2":{"222":1,"251":6,"286":3,"292":2,"293":2,"300":2}}],["skill",{"2":{"12":1}}],["squares",{"2":{"170":1}}],["scope",{"2":{"271":1}}],["schema",{"2":{"271":2}}],["scheduled",{"2":{"126":1,"128":1,"129":1}}],["scary",{"2":{"279":1}}],["scanned",{"2":{"251":1}}],["scaling",{"2":{"229":1}}],["scale",{"2":{"184":1,"185":1,"188":1,"229":1}}],["scrapes",{"2":{"170":1}}],["scrape",{"2":{"163":1}}],["scratch",{"0":{"236":1},"2":{"4":1,"141":1,"142":1,"143":1,"230":1,"267":1}}],["screen",{"2":{"32":1}}],["script",{"2":{"32":1,"38":1}}],["scripts",{"2":{"7":1,"254":1}}],["ssf",{"2":{"51":1}}],["ssds",{"2":{"44":1}}],["ssd",{"2":{"44":2,"48":1,"237":1}}],["smooth",{"2":{"48":1}}],["smaller",{"2":{"241":1}}],["small",{"2":{"48":1,"172":1}}],["smart",{"2":{"1":1,"90":1}}],["slight",{"2":{"251":1}}],["slightly",{"2":{"43":1}}],["sleep",{"2":{"162":1}}],["slow",{"0":{"234":1},"1":{"235":1,"236":1},"2":{"230":1,"234":1}}],["slowly",{"2":{"200":1}}],["slower",{"2":{"43":1,"48":1}}],["slots",{"2":{"142":1,"148":1,"227":1,"251":3,"300":1}}],["slot",{"2":{"142":2,"146":1,"229":1}}],["sdx",{"2":{"32":2}}],["sd",{"2":{"32":1}}],["savings",{"2":{"227":1}}],["save",{"2":{"170":1,"273":1,"300":1}}],["sake",{"2":{"176":1}}],["saturating",{"2":{"280":2}}],["saturated",{"2":{"138":1}}],["sata",{"2":{"44":1}}],["same",{"2":{"49":1,"83":1,"90":1,"91":1,"109":1,"140":1,"157":1,"172":1,"188":1,"192":1,"195":1,"200":1,"235":1,"236":1,"251":1,"266":1,"290":1,"300":1,"302":1}}],["sample",{"2":{"18":4,"187":1}}],["safe",{"2":{"32":1,"107":1,"109":1,"260":1}}],["shut",{"2":{"262":1}}],["shutting",{"2":{"262":1}}],["shutdown",{"2":{"251":2,"252":1,"291":1,"292":1,"293":1,"300":1}}],["ships",{"2":{"172":1}}],["shipped",{"2":{"136":1}}],["sha",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["shape",{"0":{"186":1}}],["sha3",{"0":{"133":1},"1":{"134":1},"2":{"57":1,"133":1,"134":1}}],["share",{"2":{"37":1,"135":1,"157":1,"179":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["shared",{"2":{"17":1,"251":1,"252":1,"266":1,"291":1,"292":1,"293":1,"300":1}}],["shell",{"2":{"38":1,"39":1}}],["shed",{"2":{"12":1}}],["sh",{"2":{"32":1,"38":2,"48":2,"51":2,"219":1}}],["show",{"2":{"242":1,"288":3}}],["shows",{"2":{"15":2}}],["should",{"2":{"19":1,"32":1,"40":1,"46":1,"49":3,"51":1,"156":1,"158":1,"170":2,"177":1,"179":1,"180":1,"182":1,"183":1,"190":1,"223":1,"232":1,"233":1,"241":1,"251":4,"252":1,"263":1,"291":1,"292":2,"293":2,"300":1}}],["shorter",{"2":{"43":1}}],["short",{"2":{"0":1,"241":1,"265":1}}],["swappiness",{"2":{"17":1}}],["swap",{"2":{"12":1,"17":4}}],["switch",{"2":{"0":1}}],["syntax",{"2":{"271":1}}],["synchronous",{"2":{"241":2}}],["synchronization",{"2":{"156":1,"179":2}}],["synchronized",{"2":{"103":1}}],["syncmode=execution",{"2":{"177":1,"224":1}}],["synced",{"2":{"47":1,"174":1,"177":1,"235":1,"300":1}}],["syncing✅✅✅✅✅eth",{"2":{"210":1}}],["syncingeth",{"2":{"204":1}}],["syncing",{"0":{"103":1},"2":{"41":1,"44":2,"45":2,"47":1,"58":1,"103":5,"157":1,"158":1,"160":2,"233":1,"277":1,"300":1}}],["syncs",{"2":{"7":2,"224":1,"247":1,"248":1}}],["sync",{"0":{"215":1,"224":1,"236":1},"1":{"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1},"2":{"2":3,"3":1,"5":1,"14":1,"24":1,"28":1,"44":2,"47":1,"103":2,"135":1,"136":1,"137":1,"138":1,"140":1,"156":1,"158":4,"174":1,"177":1,"192":1,"200":1,"215":1,"216":1,"218":2,"230":1,"236":1,"251":3,"262":1,"273":5,"274":4,"275":2,"291":1}}],["syst",{"2":{"170":1}}],["systemctl",{"2":{"170":2}}],["system",{"2":{"12":2,"14":1,"15":1,"17":1,"23":1,"51":1,"54":2,"57":1,"178":1,"180":1,"183":2,"229":1}}],["syscall",{"2":{"33":1}}],["sys",{"2":{"17":2}}],["symbols",{"2":{"14":3,"18":1}}],["silent",{"2":{"187":2}}],["silence",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["side",{"2":{"170":1}}],["sit",{"2":{"159":1}}],["since",{"2":{"87":1,"89":1,"140":2,"173":1,"226":1,"251":1,"252":1,"280":3,"286":1,"291":1,"292":1,"293":1,"300":1}}],["single",{"2":{"45":1,"60":1,"152":1,"251":2,"255":1,"271":1,"300":1}}],["similar",{"2":{"81":1,"82":1,"104":1,"106":1,"177":1,"181":1}}],["simply",{"2":{"57":1,"171":1}}],["simplest",{"0":{"259":1},"2":{"259":1,"260":1}}],["simpler",{"2":{"91":1,"276":1}}],["simple",{"2":{"32":1,"256":1,"262":1}}],["simulatev1`",{"2":{"251":1}}],["simulate",{"2":{"17":1,"160":1,"189":1,"251":1}}],["simulations",{"2":{"0":1}}],["sigp",{"2":{"158":1,"186":1}}],["sigkill",{"2":{"57":1}}],["sign✅✅✅✅✅eth",{"2":{"210":1}}],["signtypeddata✅✅✅✅✅eth",{"2":{"210":1}}],["signtypeddataeth",{"2":{"204":1}}],["signtransaction✅✅✅✅✅eth",{"2":{"210":1}}],["signtransactioneth",{"2":{"204":1}}],["signeth",{"2":{"204":1}}],["signed",{"2":{"21":1}}],["signal",{"2":{"57":1}}],["signatures",{"2":{"139":1}}],["signature",{"0":{"20":1},"1":{"21":1},"2":{"20":2}}],["signify",{"2":{"263":1}}],["significantly",{"2":{"239":1}}],["significant",{"2":{"13":1,"54":2,"225":1,"229":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["signing",{"0":{"21":1},"2":{"20":1}}],["sigma",{"2":{"4":1,"57":1,"158":1}}],["sizes",{"2":{"152":2,"276":1,"288":1}}],["size",{"0":{"197":1},"1":{"198":1,"199":1,"200":1},"2":{"6":3,"7":3,"28":3,"32":3,"44":1,"58":3,"138":3,"144":1,"147":2,"198":1,"242":3,"243":7,"244":3,"245":6,"246":3,"247":6,"248":6,"249":6,"250":6,"251":39,"252":10,"253":6,"254":3,"255":3,"276":2,"281":3,"282":3,"283":6,"284":3,"285":3,"286":12,"287":3,"288":5,"289":3,"290":6,"291":10,"292":10,"293":10,"294":3,"295":3,"296":3,"297":6,"298":6,"299":6,"300":13,"301":6,"302":3,"303":3,"304":3,"305":3,"306":3,"307":3,"308":3,"309":3,"310":3,"311":3,"312":3,"313":3}}],["span",{"2":{"262":1}}],["spawn",{"2":{"251":2,"273":6,"274":4,"275":2}}],["spammer",{"2":{"189":1}}],["space",{"2":{"24":2,"26":1,"28":7,"32":2,"54":1,"138":1,"199":2,"200":1,"235":1}}],["spent",{"2":{"45":1,"140":1}}],["speeds",{"2":{"42":1,"43":2,"45":1,"137":1,"138":1}}],["speed",{"0":{"240":1,"241":1},"2":{"42":1,"136":1,"140":1,"230":1,"235":1,"240":2,"241":1}}],["special",{"2":{"263":1}}],["specify",{"2":{"161":1,"226":1,"228":1,"245":1}}],["specifying",{"2":{"89":1,"228":1}}],["specifies",{"2":{"227":1,"249":1}}],["specified",{"2":{"84":1,"135":1,"140":1,"148":1,"155":1,"222":1,"249":1,"251":18,"252":2,"260":1,"283":1,"291":2,"292":2,"293":2,"300":2,"302":2}}],["specifics",{"2":{"28":1,"172":1}}],["specific",{"2":{"27":2,"34":1,"53":1,"54":1,"90":1,"103":1,"136":1,"177":1,"183":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":3,"252":3,"253":1,"270":1,"290":1,"291":3,"292":3,"293":3,"297":1,"298":1,"299":1,"300":3,"301":1}}],["specifically",{"2":{"8":1,"185":1}}],["specifications",{"2":{"27":2}}],["specification",{"2":{"4":1,"172":3,"243":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["spec",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["specs",{"2":{"4":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["spin",{"0":{"187":1},"2":{"157":1,"185":1,"187":1}}],["spinning",{"2":{"2":1}}],["spikes",{"2":{"16":1}}],["soft",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["software",{"2":{"1":1,"2":3,"166":1}}],["solution",{"2":{"238":1}}],["solve",{"2":{"2":1}}],["sort",{"2":{"162":1}}],["sorted",{"2":{"147":1}}],["socket",{"2":{"91":1,"251":3,"300":1}}],["sockets",{"2":{"86":1,"251":1}}],["something",{"2":{"261":1}}],["sometimes",{"2":{"12":1,"16":1,"17":2}}],["somewhere",{"2":{"162":1}}],["some",{"2":{"5":1,"12":2,"15":1,"23":1,"26":1,"28":1,"48":1,"54":2,"87":1,"103":2,"151":1,"157":1,"172":1,"189":1,"239":1,"260":3,"261":1,"265":1,"270":2,"274":4,"275":2,"276":1,"278":1,"279":3,"280":4}}],["soon",{"2":{"4":1,"28":1,"49":1,"214":1}}],["sources",{"2":{"166":1,"170":1,"245":1}}],["source",{"0":{"50":1,"161":1},"1":{"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1},"2":{"2":1,"33":1,"35":1,"41":1,"51":2,"54":1,"170":2,"176":1}}],["so",{"2":{"2":1,"15":1,"16":1,"40":1,"43":1,"46":1,"48":2,"49":1,"157":1,"170":1,"200":1,"251":1,"260":1,"279":1,"302":1}}],["s",{"0":{"261":1},"2":{"2":4,"5":1,"7":1,"12":2,"14":1,"15":3,"16":1,"19":3,"28":1,"35":1,"46":1,"47":2,"51":2,"57":1,"103":2,"126":1,"128":1,"129":1,"156":1,"159":1,"162":2,"163":1,"166":1,"167":1,"170":2,"171":1,"180":1,"189":1,"200":1,"214":1,"218":1,"223":1,"224":1,"226":2,"228":1,"229":2,"233":3,"237":2,"238":1,"243":1,"244":1,"251":5,"252":3,"254":1,"255":2,"256":1,"257":1,"258":1,"259":2,"260":5,"261":1,"265":1,"267":1,"270":1,"273":4,"274":2,"278":1,"279":4,"280":3,"282":1,"285":1,"286":1,"291":2,"292":2,"293":2,"296":1,"298":1,"299":1,"300":3,"301":1,"302":1}}],["std",{"2":{"273":2,"274":2,"275":1,"279":1,"280":1}}],["stdout",{"2":{"6":4,"7":6,"242":5,"243":4,"244":4,"245":4,"246":5,"247":4,"248":4,"249":4,"250":4,"251":4,"252":4,"253":4,"254":4,"255":4,"281":4,"282":4,"283":4,"284":4,"285":4,"286":4,"287":4,"288":4,"289":4,"290":4,"291":4,"292":4,"293":4,"294":4,"295":4,"296":4,"297":4,"298":4,"299":4,"300":4,"301":4,"302":4,"303":4,"304":4,"305":4,"306":4,"307":4,"308":4,"309":4,"310":4,"311":4,"312":4,"313":4}}],["stuff",{"2":{"260":1}}],["stop",{"2":{"235":1,"236":1}}],["storagehashing",{"2":{"311":1}}],["storagehistory",{"2":{"251":3}}],["storages",{"2":{"142":3}}],["storage",{"0":{"142":1,"146":1,"297":1,"311":1},"2":{"32":3,"43":2,"135":2,"140":2,"142":3,"143":1,"146":3,"147":1,"155":4,"200":2,"201":1,"215":1,"217":1,"226":1,"227":2,"249":1,"251":3,"254":2,"258":2,"297":3,"298":5,"299":1,"300":5,"311":2}}],["store",{"2":{"28":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":5,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["stored",{"2":{"6":1,"7":1,"87":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":3,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["stores",{"2":{"3":2}}],["steps",{"0":{"219":1,"220":1},"1":{"221":1,"222":1,"223":1},"2":{"191":1,"194":1,"195":1,"196":1}}],["step",{"0":{"186":1,"187":1},"2":{"162":1,"222":3,"223":1,"235":1,"243":3,"245":3,"247":3,"248":3,"249":3,"250":3,"251":3,"252":3,"253":3,"260":2,"283":3,"290":3,"291":3,"292":3,"293":3,"297":3,"298":3,"299":3,"300":3,"301":3}}],["style",{"2":{"73":1,"87":2,"104":2}}],["still",{"2":{"18":1,"103":2,"208":1,"280":1}}],["struct",{"0":{"279":1},"2":{"273":3,"274":2,"275":1,"279":5,"280":2}}],["structures",{"2":{"15":2}}],["structure",{"2":{"8":1,"71":1}}],["structured",{"2":{"6":2,"7":2,"79":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["strings",{"2":{"251":2}}],["strictly",{"2":{"17":1}}],["streams",{"2":{"271":1}}],["stream",{"2":{"138":1,"257":1,"270":1,"271":1,"273":5,"274":2,"275":1,"276":2}}],["stress",{"2":{"46":1}}],["strong",{"2":{"1":1}}],["stake",{"2":{"156":1}}],["staking",{"2":{"0":1}}],["stays",{"2":{"150":1}}],["stack",{"0":{"172":1},"1":{"173":1,"174":1,"175":1,"176":1,"177":1},"2":{"80":1,"172":3,"174":1,"176":1,"177":2,"214":2,"265":1}}],["standard",{"2":{"30":1,"86":1}}],["standalone",{"2":{"2":1,"9":1,"170":2}}],["stable",{"2":{"19":2,"47":1,"166":1}}],["stages",{"0":{"136":1},"1":{"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1},"2":{"7":1,"45":2,"47":1,"103":3,"135":2,"136":2,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":2,"144":1,"145":1,"146":1,"147":1,"159":1,"248":3,"255":1,"298":1,"300":2,"301":1}}],["stage",{"0":{"255":1,"298":1,"299":1,"300":1,"301":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1},"2":{"7":1,"103":2,"137":1,"138":1,"139":1,"140":6,"141":2,"142":2,"143":2,"144":1,"145":1,"146":1,"237":2,"255":5,"298":15,"299":7,"300":20,"301":2,"308":4,"309":4,"310":4,"311":4,"312":2,"313":2}}],["staged",{"2":{"2":1,"47":1}}],["startup",{"2":{"177":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["started",{"2":{"157":1,"177":1,"280":1}}],["starting",{"2":{"135":1,"155":1,"171":1,"177":1,"200":1,"215":1,"218":1,"258":1}}],["starts",{"2":{"12":1,"141":1,"142":1,"143":1}}],["start",{"2":{"7":1,"12":1,"32":1,"79":2,"89":1,"150":1,"152":1,"157":3,"158":1,"170":8,"174":1,"177":2,"187":1,"224":1,"235":1,"236":1,"251":2,"258":1,"260":1,"273":3,"274":2,"275":1,"277":1,"280":3,"281":3,"292":1,"293":1,"300":1}}],["stats",{"0":{"288":1},"2":{"243":1,"251":1,"288":2}}],["stat",{"2":{"233":1}}],["status✅✅✅✅✅",{"2":{"213":1}}],["status",{"0":{"129":1},"2":{"129":1,"177":1,"187":2,"207":1,"273":9,"274":6,"275":3}}],["statuses",{"2":{"106":1}}],["static",{"0":{"304":1,"306":1},"2":{"19":1,"162":1,"243":2,"245":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"258":1,"282":2,"285":2,"288":2,"290":2,"291":2,"292":2,"293":2,"297":2,"298":2,"299":2,"300":2,"301":2,"304":7,"306":7}}],["statistics",{"2":{"5":1}}],["stateful",{"2":{"279":2}}],["states",{"2":{"155":2,"251":1}}],["statediff",{"2":{"105":1,"107":1,"108":1,"110":2,"112":1,"114":1,"116":1}}],["state",{"0":{"218":1,"223":1,"249":1,"278":1,"280":1},"1":{"279":1,"280":1},"2":{"3":1,"4":1,"7":2,"45":1,"73":1,"84":1,"87":2,"104":1,"105":1,"140":2,"141":1,"142":1,"143":2,"156":2,"170":1,"191":1,"192":1,"215":3,"216":4,"218":1,"219":1,"223":4,"244":2,"248":2,"249":9,"251":13,"261":1,"263":1,"265":3,"267":1,"278":1,"279":2,"292":1,"293":1}}],["self",{"2":{"273":10,"274":8,"275":4,"279":5,"280":6}}],["selected",{"2":{"54":1}}],["select",{"2":{"32":2,"170":5}}],["serialize",{"2":{"273":3,"274":4,"275":2}}],["serde",{"2":{"270":1}}],["serve",{"2":{"273":3,"274":2,"275":1}}],["served",{"2":{"251":1,"300":1}}],["server",{"0":{"272":1,"273":1},"1":{"273":1,"274":1,"275":1},"2":{"40":1,"87":1,"89":6,"90":3,"100":1,"103":1,"170":1,"251":16,"268":4,"270":3,"272":1,"273":26,"274":16,"275":8,"276":1,"277":1}}],["serving",{"2":{"180":1}}],["service",{"2":{"170":5,"251":1,"252":1,"271":2,"273":3,"274":2,"275":1,"291":1,"292":1,"293":1,"300":1}}],["services",{"0":{"189":1},"1":{"190":1},"2":{"0":1,"170":6,"187":2}}],["segmenttxpool",{"2":{"207":1}}],["segmentnotetrace",{"2":{"206":1}}],["segmentnoteeth",{"2":{"204":1}}],["segmentnet",{"2":{"205":1}}],["segment",{"2":{"199":1,"208":2,"218":1,"282":1,"285":1,"288":1,"304":7,"306":7}}],["segmentsender",{"2":{"209":1,"210":1,"211":1,"212":1,"213":1}}],["segmentsizesender",{"2":{"199":1}}],["segments",{"2":{"153":2,"155":2,"199":1,"200":2,"201":2,"208":1,"288":1}}],["seamless",{"2":{"179":1}}],["search",{"2":{"27":1,"106":1,"286":5}}],["sepolia",{"2":{"173":1,"243":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["separate",{"2":{"156":1,"162":1,"229":1,"266":2,"270":1,"273":1}}],["separated",{"2":{"54":1,"86":1,"89":1,"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["sequencer",{"2":{"172":1,"177":8}}],["sequential",{"2":{"144":1}}],["session",{"2":{"152":4}}],["sessions",{"0":{"152":1},"2":{"135":1,"152":4}}],["sensible",{"2":{"251":1}}],["sensitive",{"2":{"14":1,"87":1,"302":1}}],["sent",{"2":{"89":1,"119":2,"137":1,"177":1,"251":1,"273":1,"274":4,"275":2}}],["sends",{"2":{"266":1}}],["sendtransaction✅✅✅✅✅eth",{"2":{"210":1}}],["sendtransactioneth",{"2":{"204":1}}],["sendrawtransaction✅✅✅✅✅eth",{"2":{"210":1}}],["sendrawtransactioneth",{"2":{"204":1}}],["sendrawtransaction",{"2":{"111":1}}],["send",{"2":{"89":1,"251":1,"259":1,"260":3,"273":5,"274":8,"275":4,"279":1,"280":2}}],["senderrecovery",{"2":{"251":3}}],["senders",{"2":{"139":2,"155":3,"298":2,"300":2}}],["sender",{"0":{"139":1},"2":{"45":1,"135":1,"139":2,"155":2,"200":2,"201":1,"228":2,"229":2,"251":3,"273":3,"274":5,"275":2,"301":1}}],["sending",{"2":{"1":1,"160":1,"181":1,"260":3,"262":1}}],["several",{"2":{"9":1,"35":1,"54":1,"73":1,"87":2,"104":1,"140":1,"172":1,"201":1}}],["seem",{"2":{"279":1}}],["sees",{"2":{"240":8}}],["seeing",{"2":{"159":1,"234":1}}],["seen",{"2":{"13":1,"18":1,"78":1,"150":1,"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["see",{"2":{"6":1,"7":1,"12":1,"16":1,"18":1,"24":1,"34":1,"44":1,"54":1,"56":1,"57":1,"109":1,"126":1,"127":1,"128":1,"129":1,"157":2,"162":1,"170":2,"171":1,"172":1,"185":1,"222":1,"223":1,"238":1,"240":8,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":2,"250":1,"251":4,"252":2,"253":1,"254":1,"255":1,"259":1,"261":1,"269":1,"271":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":2,"292":2,"293":2,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":2,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["setup",{"2":{"239":1}}],["settlement",{"2":{"174":1}}],["settings",{"2":{"54":1,"178":1}}],["setting",{"2":{"17":1,"153":1,"155":2,"159":1,"177":1,"228":1}}],["sets",{"2":{"6":1,"7":1,"17":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":4,"252":3,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":3,"292":3,"293":3,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":3,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["set",{"2":{"5":1,"6":2,"7":2,"17":1,"24":1,"28":2,"32":2,"58":1,"60":1,"66":1,"136":1,"161":1,"170":1,"177":1,"224":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":12,"252":7,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":7,"292":7,"293":7,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":7,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["sec",{"2":{"240":16}}],["security",{"2":{"181":1,"182":1,"225":1}}],["securely",{"2":{"4":1}}],["secure",{"0":{"4":1},"2":{"1":1}}],["secret=",{"2":{"177":1}}],["secret",{"2":{"157":3,"158":1,"196":1,"251":5,"252":2,"291":2,"292":2,"293":2,"300":2}}],["secs",{"2":{"152":2}}],["seconds",{"2":{"234":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":5,"252":3,"253":1,"283":1,"290":1,"291":3,"292":3,"293":3,"297":1,"298":1,"299":1,"300":3,"301":1}}],["secondary",{"2":{"141":1,"142":1,"283":4}}],["second",{"2":{"84":1,"107":1,"109":1,"235":1,"251":1,"280":1}}],["section",{"0":{"136":1,"148":1,"152":1,"153":1},"1":{"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"149":1,"150":1,"151":1,"154":1,"155":1},"2":{"49":2,"52":1,"57":1,"136":1,"137":1,"138":1,"148":2,"149":1,"150":1,"152":1,"153":1,"157":1,"178":1,"238":1,"269":1}}],["sections",{"0":{"5":1},"2":{"5":1,"135":1}}],["suggested",{"2":{"290":4}}],["sum",{"2":{"280":2}}],["summary",{"2":{"6":1,"7":1,"128":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["survive",{"2":{"251":1}}],["sure",{"2":{"4":1,"47":1,"57":1,"158":1,"177":1,"277":1}}],["sudden",{"2":{"215":1,"217":1}}],["sudo",{"2":{"17":1,"166":5,"167":1,"170":2,"241":3}}],["suspected",{"2":{"177":1}}],["superchains",{"2":{"173":1}}],["superchain",{"0":{"173":1},"2":{"173":1}}],["supplied",{"2":{"170":1}}],["supports",{"2":{"86":2,"88":1,"177":1,"191":1}}],["supported",{"2":{"27":1,"51":1,"54":1,"57":3,"89":1,"173":1,"192":1,"233":1}}],["support",{"0":{"201":1},"1":{"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1},"2":{"1":2,"2":1,"28":1,"33":1,"90":1,"135":1,"157":1,"172":1,"173":1,"214":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":2,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["sufficiently",{"2":{"24":1}}],["subkey",{"2":{"305":3}}],["subtract",{"2":{"280":1}}],["subtraces",{"2":{"108":1,"110":2,"112":1,"114":1,"116":1,"118":1,"120":1,"122":1,"124":1}}],["subprotocol",{"2":{"251":2}}],["subpools",{"2":{"15":1}}],["sub",{"2":{"251":6,"280":2}}],["subdirectories",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["submit",{"2":{"172":1}}],["subsequently",{"2":{"70":1}}],["subscriptions",{"2":{"89":1,"251":3}}],["subscription",{"2":{"70":4,"71":3,"72":3}}],["subscribestream",{"2":{"273":6,"274":4,"275":2}}],["subscriberequest",{"2":{"271":2,"273":3,"274":2,"275":1,"276":2}}],["subscribe✅✅✅✅✅eth",{"2":{"210":1}}],["subscribeeth",{"2":{"204":1}}],["subscribe",{"2":{"70":1,"90":1,"271":2,"273":4,"274":4,"275":2,"276":1}}],["subcommand",{"2":{"7":1,"243":1,"244":1,"252":1,"254":1,"255":1,"282":1,"285":1,"296":1,"299":1,"301":1}}],["succeed",{"2":{"233":1}}],["success",{"2":{"106":1}}],["successfully",{"2":{"34":1,"62":1,"66":1}}],["successful",{"2":{"1":1,"52":1}}],["such",{"2":{"0":2,"2":1,"14":1,"24":1,"43":1,"54":1,"70":1,"90":1,"100":1,"103":2,"156":1,"170":1,"172":1,"183":1,"191":1,"234":1,"265":1}}],["suitable",{"2":{"0":1,"6":2,"7":2,"43":2,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["eyre",{"2":{"257":1,"258":1,"259":2,"260":2,"270":1,"273":3,"274":4,"275":2,"276":1,"279":2,"280":2}}],["eye",{"2":{"171":1}}],["equal",{"2":{"235":1}}],["equivalent",{"2":{"176":1}}],["equipped",{"2":{"26":1}}],["eg",{"2":{"233":1}}],["e234b3b4a440",{"2":{"187":1}}],["edition",{"2":{"257":1,"270":1}}],["editing",{"2":{"43":1}}],["ed75fe7d5293",{"2":{"187":1}}],["ephemeral",{"2":{"185":1,"187":1}}],["eels",{"2":{"172":1}}],["efficiency",{"2":{"225":1}}],["efficient",{"2":{"0":1,"1":1}}],["effect",{"2":{"171":1,"251":1}}],["effectively",{"2":{"156":1}}],["effort",{"2":{"137":1,"138":1}}],["eip",{"0":{"227":1,"228":1,"229":1},"2":{"76":1,"77":1,"172":1,"225":3,"226":1,"227":2,"228":3,"229":4}}],["either",{"2":{"17":1,"57":1,"84":1,"90":1,"191":1,"243":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":2,"252":1,"253":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["etl",{"0":{"147":1},"2":{"147":2}}],["ethprimitives",{"2":{"260":2,"274":4,"275":2,"279":2,"280":2}}],["ethpandaops",{"2":{"187":1}}],["ether",{"2":{"251":1}}],["etherscan",{"0":{"161":1},"2":{"161":7,"200":1,"224":1,"251":3,"277":4}}],["ethereumnode",{"2":{"258":2,"259":2,"260":2,"273":6,"274":4,"275":2,"279":2,"280":2}}],["ethereum",{"0":{"156":1},"1":{"157":1,"158":1,"159":1,"160":1,"161":1},"2":{"0":2,"1":5,"2":3,"3":1,"4":4,"24":1,"38":2,"44":1,"73":1,"85":1,"86":1,"87":3,"92":1,"104":1,"156":3,"185":4,"187":2,"189":1,"190":1,"225":2,"226":1,"228":1,"229":1,"257":2,"258":1,"259":1,"260":1,"265":1,"270":1,"273":3,"274":2,"275":1,"279":1,"280":1}}],["eth",{"0":{"85":1,"204":1,"210":1},"2":{"69":1,"84":2,"85":1,"87":2,"89":2,"92":1,"102":1,"103":1,"106":1,"111":1,"232":1,"251":6}}],["etc",{"2":{"38":7,"40":1,"166":1,"170":5,"174":2,"185":1}}],["e",{"2":{"34":1,"49":4,"98":1,"155":4,"170":1,"173":1,"174":2,"185":1,"187":1,"216":1,"240":2,"243":3,"245":3,"247":3,"248":3,"249":3,"250":3,"251":3,"252":3,"253":3,"283":3,"290":3,"291":3,"292":3,"293":3,"297":3,"298":3,"299":3,"300":3,"301":3}}],["esrch",{"2":{"238":1}}],["estimate",{"2":{"251":1}}],["estimategas✅✅✅❌❌eth",{"2":{"210":1}}],["estimategasonly",{"2":{"204":1}}],["establish",{"2":{"151":1}}],["establishes",{"2":{"148":1}}],["essentially",{"2":{"200":1}}],["essential",{"2":{"51":1,"178":1,"183":1}}],["especially",{"2":{"47":1}}],["esbmb3igmjayncbhbmqgb24pidxnzw9yz2lvc0bwyxjhzglnbs54exo+ijmeexyk",{"2":{"21":1}}],["escape",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["echo",{"2":{"17":1,"134":1,"162":1,"166":1}}],["emit",{"2":{"263":1,"274":1}}],["emitted",{"2":{"155":1,"262":1,"263":1}}],["emits",{"2":{"6":1,"7":1,"70":1,"71":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"263":1,"268":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["empty",{"2":{"103":2,"170":1,"259":1}}],["employ",{"2":{"8":1}}],["emulate",{"2":{"12":1}}],["err",{"2":{"238":1}}],["errors",{"2":{"6":1,"7":1,"70":1,"237":2,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["error",{"0":{"57":1,"58":1,"233":1,"237":1,"238":1},"2":{"6":1,"7":1,"32":2,"54":1,"57":1,"71":4,"230":3,"232":1,"233":1,"237":10,"238":3,"242":1,"243":3,"244":1,"245":3,"246":1,"247":3,"248":3,"249":3,"250":3,"251":3,"252":3,"253":3,"254":1,"255":1,"257":1,"281":1,"282":1,"283":3,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":3,"291":3,"292":3,"293":3,"294":1,"295":1,"296":1,"297":3,"298":3,"299":3,"300":3,"301":3,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["era1",{"2":{"247":3}}],["era",{"0":{"247":1},"2":{"7":2,"247":5}}],["erigon",{"2":{"2":1}}],["evaluate",{"2":{"239":1}}],["evolved",{"2":{"225":1}}],["ev",{"2":{"162":1}}],["ever",{"2":{"31":1}}],["everything",{"2":{"18":1}}],["every",{"2":{"2":1,"4":2,"34":1,"155":1,"256":1,"260":1,"280":1}}],["event",{"0":{"71":1},"2":{"70":2,"72":1,"152":1,"260":2,"263":3,"280":1}}],["events",{"2":{"70":4,"71":2,"90":2,"152":1,"259":1,"260":3,"262":1,"274":2,"275":1,"279":1,"280":1}}],["even",{"2":{"14":1,"64":1,"156":1,"157":1}}],["evm",{"2":{"4":2,"79":1,"218":1,"249":3}}],["earliest",{"2":{"107":1,"109":1}}],["easily",{"2":{"92":1,"159":1}}],["easy",{"2":{"1":1,"51":1,"257":1}}],["each",{"2":{"2":1,"28":1,"70":1,"86":1,"89":1,"101":1,"109":1,"113":1,"140":1,"152":1,"185":1,"191":1,"201":2,"225":1,"228":1,"251":2,"260":1,"273":1,"280":1,"288":1,"302":1}}],["ex",{"2":{"273":6,"274":4,"275":2,"276":2}}],["exexservice",{"2":{"273":9,"274":6,"275":3}}],["exexes",{"0":{"262":1},"1":{"263":1},"2":{"262":5,"263":1,"265":1,"266":1,"267":1}}],["exexevent",{"2":{"260":4,"263":2,"274":5,"275":2,"279":2,"280":2}}],["exexnotifications",{"2":{"274":1}}],["exexnotification",{"2":{"260":4,"271":2,"273":9,"274":10,"275":5,"276":5,"279":4}}],["exexcontext",{"2":{"259":2,"260":2,"274":4,"275":2,"279":2,"280":3}}],["exex",{"0":{"259":1,"260":1,"264":1,"272":1,"274":1,"275":1,"279":1},"1":{"265":1,"266":1,"267":1,"273":1,"274":1,"275":1},"2":{"256":1,"257":5,"259":11,"260":11,"261":1,"262":2,"263":2,"267":1,"268":2,"270":16,"271":4,"272":2,"273":8,"274":12,"275":6,"276":2,"277":2,"278":1,"279":7,"280":8}}],["exemptions",{"2":{"251":1}}],["exec",{"2":{"39":1}}],["executor",{"2":{"273":4,"274":2,"275":1}}],["executable",{"2":{"251":2}}],["executables",{"2":{"19":1}}],["executes",{"2":{"107":1,"140":1}}],["execute",{"2":{"83":1,"156":1}}],["executed",{"2":{"23":1,"83":2,"104":1,"109":1,"140":2,"218":1,"248":1}}],["executing",{"2":{"45":1,"140":1}}],["execution",{"0":{"140":1,"264":1,"265":1,"266":1,"267":1,"268":1,"291":1,"309":1},"1":{"265":1,"266":1,"267":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1},"2":{"1":1,"4":1,"79":1,"84":1,"103":2,"106":1,"126":1,"128":1,"129":1,"135":1,"140":6,"156":7,"158":2,"218":1,"229":1,"244":2,"251":2,"257":1,"265":5,"266":2,"291":3,"298":2,"299":2,"300":3,"308":1,"309":4,"310":1,"311":1}}],["exacts",{"2":{"152":1}}],["exacted",{"2":{"150":1}}],["exact",{"2":{"83":1}}],["example",{"0":{"61":1,"63":1,"65":1,"67":1,"69":1,"72":1,"95":1,"97":1,"99":1,"102":1,"108":1,"110":1,"112":1,"114":1,"116":1,"118":1,"120":1,"122":1,"124":1,"132":1,"134":1,"155":1},"2":{"15":1,"17":2,"18":2,"19":1,"32":1,"51":1,"72":1,"161":1,"170":2,"174":1,"196":1,"237":1,"251":1,"260":1,"271":2,"278":1}}],["examples",{"2":{"2":1,"232":1,"260":1,"265":1}}],["exits",{"2":{"259":1}}],["exit",{"2":{"57":1,"258":1,"259":2,"260":1,"273":3,"274":2,"275":1,"279":1,"280":1}}],["exists",{"2":{"62":1,"104":1}}],["exist",{"2":{"52":1,"91":1}}],["existing",{"2":{"40":1,"251":1}}],["exclusive",{"2":{"233":1,"243":3,"245":3,"247":3,"248":3,"249":3,"250":3,"251":4,"252":3,"253":3,"283":3,"290":3,"291":3,"292":3,"293":3,"297":3,"298":3,"299":3,"300":3,"301":3}}],["excluding",{"2":{"79":1}}],["excellent",{"2":{"158":1}}],["except",{"2":{"106":1,"150":1,"228":1,"301":1}}],["exceeding",{"2":{"15":1}}],["excited",{"2":{"48":1}}],["explain",{"2":{"239":1}}],["explicitly",{"2":{"14":1,"17":1,"19":1,"86":1,"90":1,"91":1}}],["expanduse",{"2":{"275":1}}],["expand",{"2":{"58":1}}],["experimental",{"2":{"251":4,"252":3,"291":3,"292":3,"293":3,"300":3}}],["experiencing",{"2":{"234":1,"239":1}}],["experience",{"2":{"48":1,"70":1,"191":1,"225":1}}],["expect",{"2":{"191":1,"259":1,"273":6,"274":7,"275":3}}],["expected",{"2":{"103":3}}],["expects",{"2":{"80":1}}],["expense",{"2":{"43":1}}],["exposure",{"2":{"178":1,"179":1,"180":1,"181":1,"182":1,"183":1}}],["exposing",{"2":{"171":1,"181":1}}],["exposes",{"2":{"162":1,"170":2,"259":1,"271":1}}],["exposed",{"2":{"38":1,"92":1,"157":1,"179":1,"180":1,"182":1,"183":1}}],["expose",{"2":{"37":1,"59":1,"87":1}}],["exported",{"2":{"216":1,"218":1,"221":1,"222":2}}],["exporter",{"2":{"38":2}}],["exporting",{"2":{"171":1,"222":1}}],["export",{"0":{"219":1},"2":{"161":1,"219":2,"277":1}}],["extradata",{"2":{"251":1}}],["extra",{"2":{"243":2,"245":2,"247":2,"248":2,"249":2,"250":2,"251":4,"252":2,"253":2,"283":2,"290":2,"291":2,"292":2,"293":2,"297":2,"298":2,"299":2,"300":2,"301":2}}],["extracting",{"2":{"170":1}}],["extract",{"2":{"147":1,"170":1}}],["extreme",{"2":{"26":1}}],["extremely",{"2":{"12":1,"16":1}}],["extend",{"2":{"260":1}}],["extension",{"0":{"267":1},"2":{"265":1,"266":1}}],["extensions",{"0":{"264":1,"265":1,"266":1,"268":1},"1":{"265":1,"266":1,"267":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1},"2":{"257":1,"265":3,"266":1}}],["extensively",{"2":{"4":1}}],["externally",{"2":{"232":1,"233":1}}],["external",{"2":{"181":1,"182":1,"268":1}}],["externality",{"2":{"104":1}}],["enforced",{"2":{"251":2}}],["enforce",{"2":{"251":1}}],["enhance",{"2":{"225":1}}],["enclave",{"2":{"185":1,"187":3}}],["encoding",{"2":{"222":1,"276":2}}],["encoded",{"2":{"7":2,"74":1,"75":1,"76":1,"77":1,"80":1,"247":1,"248":1,"249":1,"251":2}}],["encountered",{"2":{"237":2}}],["encounter",{"2":{"16":1,"103":1,"214":1,"237":1,"238":1}}],["enrs",{"2":{"148":1}}],["ensure",{"2":{"103":1,"156":1,"157":1,"177":1,"233":1}}],["ensures",{"2":{"2":1}}],["enode",{"2":{"60":1,"61":1,"63":1,"65":1,"67":1,"69":2,"70":1,"71":2,"72":2,"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["enough",{"2":{"2":1}}],["env",{"2":{"51":2,"187":1,"277":1}}],["environment",{"2":{"5":1,"12":1,"18":1,"56":1,"161":1,"185":1,"187":1,"233":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":2,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["environments",{"2":{"0":1,"16":1,"91":1}}],["envision",{"2":{"2":2}}],["entries",{"2":{"243":2,"251":3,"282":3,"284":1,"286":3,"303":1,"304":1}}],["entry",{"2":{"243":1,"288":1}}],["entity",{"2":{"177":1}}],["entire",{"2":{"3":3,"140":1,"243":1,"251":1,"283":1,"288":1}}],["entering",{"2":{"251":1}}],["enter",{"2":{"51":1,"170":1,"251":1}}],["ends",{"2":{"251":1}}],["endpoint",{"2":{"103":1,"158":2,"162":3,"170":2,"177":4,"251":1}}],["endpoints",{"2":{"103":2}}],["endurance",{"2":{"43":2}}],["end",{"2":{"21":1,"79":1,"185":1,"187":1,"273":1,"274":2,"275":1,"281":3,"300":1}}],["enabling",{"0":{"14":1},"2":{"28":1,"172":1,"227":1}}],["enable=memory",{"2":{"17":1}}],["enabled",{"2":{"17":1,"18":3,"86":2,"91":1,"100":1,"101":1,"162":1,"177":3,"249":1,"286":1,"301":1}}],["enables",{"2":{"14":1,"54":2,"90":1,"177":1,"181":1,"183":1,"243":8,"245":8,"247":8,"248":8,"249":8,"250":8,"251":10,"252":8,"253":8,"283":8,"290":8,"291":8,"292":8,"293":8,"297":8,"298":8,"299":8,"300":8,"301":8}}],["enable",{"2":{"12":1,"14":3,"17":1,"28":1,"54":1,"89":1,"90":2,"92":1,"157":1,"177":2,"179":1,"189":1,"251":13,"252":2,"291":2,"292":2,"293":2,"300":3}}],["enginekind=reth",{"2":{"177":1,"224":1}}],["engineer",{"2":{"3":1}}],["engine",{"0":{"183":1},"2":{"1":1,"33":1,"38":1,"157":1,"160":1,"172":1,"187":2,"251":27}}],["elapsed=6",{"2":{"234":1}}],["elasticity",{"2":{"172":1}}],["elements",{"2":{"15":1}}],["el",{"2":{"1":1,"157":1,"172":2,"177":1,"185":1,"186":5,"187":4}}],["avoid",{"2":{"251":1,"302":1}}],["availability",{"2":{"103":1}}],["available",{"2":{"12":2,"15":1,"17":1,"18":1,"19":1,"38":1,"103":1,"176":2,"191":1,"192":1,"202":1,"245":1,"251":2}}],["amd64",{"2":{"166":1,"167":1,"170":1}}],["amp",{"0":{"162":1,"163":1,"191":1},"1":{"163":1,"164":2,"165":2,"166":2,"167":2,"168":2,"169":2,"170":2,"171":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1},"2":{"157":1,"170":1,"175":4,"187":1,"214":1,"229":1,"244":1,"245":1,"260":2,"273":4,"274":4,"275":2,"276":1,"277":2,"279":3,"280":2,"293":1}}],["amounts",{"2":{"106":1,"199":1}}],["amount",{"2":{"6":1,"7":1,"17":1,"46":1,"137":1,"138":1,"140":1,"141":1,"142":1,"145":1,"146":1,"151":1,"152":2,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":3,"252":2,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":2,"292":2,"293":2,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":2,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":3,"313":1}}],["aka",{"2":{"156":1}}],["a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c",{"2":{"61":1,"63":1,"65":1,"67":1}}],["await",{"2":{"258":2,"259":2,"260":4,"273":11,"274":12,"275":6,"276":3,"279":4,"280":2}}],["away",{"2":{"47":1}}],["awesome",{"2":{"134":1}}],["aws",{"2":{"48":1}}],["affect",{"2":{"251":1}}],["affected",{"2":{"27":1,"70":1}}],["after",{"2":{"38":1,"40":1,"51":2,"52":1,"89":1,"103":1,"119":1,"120":1,"156":1,"192":1,"200":1,"248":1,"251":2,"292":1,"293":1,"308":1,"309":1,"310":1,"311":1}}],["aarch64",{"0":{"24":1},"2":{"28":1}}],["ability",{"2":{"251":1}}],["abcd",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["absolutely",{"2":{"259":1}}],["absolute",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["above",{"2":{"37":1,"39":1,"44":1,"148":1,"228":1}}],["about",{"0":{"1":1},"2":{"2":2,"5":2,"44":1,"68":2,"70":3,"87":1,"93":1,"100":1,"170":1,"172":1,"178":1,"185":1,"187":1,"190":1,"191":1,"251":1,"262":2,"265":1,"270":1,"279":1}}],["able",{"2":{"23":1,"32":3,"89":1,"273":1,"279":1}}],["adjusted",{"2":{"172":1,"228":1}}],["adjusting",{"2":{"17":1}}],["advances",{"2":{"161":1,"251":1}}],["advised",{"2":{"59":1}}],["advisable",{"2":{"43":1,"51":1,"87":1}}],["ad",{"0":{"105":1},"2":{"104":1,"105":2}}],["admin",{"0":{"59":1,"60":1,"62":1,"64":1,"66":1,"68":1,"70":2},"1":{"60":1,"61":2,"62":1,"63":2,"64":1,"65":2,"66":1,"67":2,"68":1,"69":2,"70":1,"71":3,"72":3},"2":{"38":1,"40":2,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":3,"71":1,"72":3,"87":2,"89":1,"92":2,"170":1,"251":2}}],["addr`",{"2":{"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["addr=0",{"2":{"177":1}}],["addr",{"2":{"71":1,"72":1,"89":2,"90":1,"157":2,"196":1,"251":15,"252":9,"291":9,"292":9,"293":9,"300":9}}],["addresses",{"2":{"119":2,"155":1,"226":1,"227":1,"251":3}}],["address",{"2":{"28":5,"32":1,"70":1,"89":2,"90":1,"106":1,"127":2,"139":1,"141":2,"142":2,"155":2,"157":1,"200":1,"228":1,"249":2,"251":9,"252":6,"291":6,"292":6,"293":6,"300":6}}],["added",{"2":{"64":1,"260":2,"270":1,"280":1}}],["adds",{"2":{"64":1}}],["addtrustedpeer",{"0":{"64":1},"1":{"65":1},"2":{"64":1,"65":1}}],["add",{"2":{"60":1,"71":1,"72":1,"158":1,"166":1,"170":1,"196":1,"251":1,"257":1,"267":1,"271":1,"273":3,"274":2,"275":1,"279":1,"280":1,"302":1}}],["addpeer",{"0":{"60":1},"1":{"61":1},"2":{"60":1,"61":1}}],["adding",{"0":{"280":1},"2":{"59":1,"157":1,"162":1,"177":1}}],["additional",{"0":{"28":1,"29":1,"189":1},"1":{"190":1},"2":{"6":1,"14":1,"137":2,"138":1,"177":1,"235":1,"249":1,"251":3}}],["adswiqrq+3zfwy6k+ln+a7eqxtvqf78lpguczl4gjgibawulcqghagiiagyvcgki",{"2":{"21":1}}],["against",{"2":{"48":1,"251":1}}],["again",{"2":{"12":1}}],["aggressive",{"2":{"4":1,"54":1}}],["authority",{"2":{"251":1}}],["authenticate",{"2":{"251":1}}],["authenticated",{"2":{"157":1,"251":2}}],["authentication",{"2":{"251":1}}],["auth",{"2":{"251":9}}],["authrpc",{"2":{"157":6,"177":2,"196":3,"251":4}}],["automatically",{"2":{"66":1,"251":1}}],["auto",{"2":{"6":1,"7":1,"157":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["aur",{"2":{"19":2}}],["audit",{"2":{"4":2}}],["attention",{"2":{"286":1}}],["attempt",{"2":{"83":2,"148":2,"151":1}}],["at",{"2":{"4":1,"9":1,"15":1,"18":1,"38":1,"42":1,"43":2,"44":3,"46":1,"49":1,"54":1,"59":1,"91":2,"92":1,"117":1,"121":1,"137":6,"138":3,"157":2,"160":1,"162":2,"170":2,"172":1,"185":1,"191":1,"197":1,"198":1,"200":1,"215":1,"216":1,"218":1,"223":2,"228":1,"249":2,"251":10,"252":5,"260":1,"270":1,"291":5,"292":5,"293":6,"300":7}}],["arc",{"2":{"273":6,"274":8,"275":4}}],["arch",{"2":{"19":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["archival",{"2":{"174":1,"177":1}}],["archives",{"2":{"19":2}}],["archive",{"0":{"194":1,"198":1},"2":{"3":4,"42":1,"44":1,"154":1,"157":2,"191":1,"192":3,"195":1,"198":2,"245":2}}],["architecture",{"0":{"23":1},"2":{"2":1,"8":1,"28":3,"30":1,"170":1}}],["artifacts",{"2":{"187":1}}],["artificially",{"2":{"16":1}}],["args",{"2":{"187":1,"258":1,"259":1,"260":1,"273":3,"274":2,"275":1,"279":1,"280":1}}],["arguments",{"2":{"177":1,"189":1,"281":1,"286":1,"294":1,"295":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"312":1,"313":1}}],["argument",{"2":{"60":1,"84":2,"158":1,"173":1}}],["arrived",{"2":{"260":1}}],["arriving",{"2":{"159":1}}],["array",{"2":{"77":1,"78":1,"107":1,"227":1,"251":1,"290":1}}],["around",{"2":{"44":1,"52":1,"54":1,"138":1,"140":1,"235":1}}],["arm64",{"2":{"34":1}}],["armbian",{"2":{"31":1,"32":4}}],["arm",{"0":{"22":1,"25":1},"1":{"23":1,"24":1,"25":1,"26":2,"27":2,"28":2,"29":2,"30":1,"31":1,"32":1},"2":{"22":1,"26":1,"27":4,"28":1,"29":2,"31":1}}],["are",{"0":{"2":1,"265":1,"266":1},"2":{"2":2,"4":2,"5":1,"9":1,"12":1,"14":1,"15":2,"16":1,"19":2,"21":1,"22":1,"26":1,"30":1,"33":1,"34":1,"36":1,"41":1,"42":2,"44":4,"45":3,"46":1,"48":2,"49":3,"51":1,"54":2,"57":2,"86":2,"87":4,"89":1,"90":1,"103":3,"104":1,"105":1,"106":2,"119":2,"126":1,"128":1,"129":1,"140":3,"148":1,"150":1,"152":1,"156":3,"159":1,"160":1,"170":1,"172":1,"173":1,"177":1,"183":1,"188":1,"191":1,"197":1,"201":1,"215":2,"218":1,"222":1,"225":1,"234":1,"235":1,"238":2,"239":1,"243":1,"245":1,"246":1,"247":4,"248":3,"249":2,"250":1,"251":7,"252":3,"253":1,"262":2,"265":2,"266":2,"279":1,"281":2,"282":1,"283":2,"284":1,"285":1,"286":2,"287":1,"288":1,"289":1,"290":1,"291":3,"292":3,"293":3,"297":1,"298":1,"299":1,"300":3,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["aims",{"2":{"2":1}}],["acquire",{"2":{"279":1}}],["acts",{"2":{"262":1}}],["actually",{"2":{"260":1}}],["actual",{"2":{"229":1}}],["action",{"2":{"108":1,"110":2,"112":1,"114":1,"116":1,"118":1,"120":1,"122":1,"124":1}}],["active",{"2":{"251":3}}],["actively",{"2":{"0":1,"48":1}}],["activated",{"2":{"54":1}}],["activate",{"2":{"54":1}}],["activities",{"2":{"0":1,"70":1}}],["across",{"2":{"13":1}}],["accumulated",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["accurate",{"2":{"103":1}}],["accounthashing",{"2":{"308":1}}],["accounthistory",{"2":{"251":3}}],["accounting",{"2":{"280":1}}],["account",{"0":{"141":1,"145":1,"308":1},"2":{"135":2,"140":1,"141":2,"142":1,"143":1,"145":3,"155":4,"172":1,"200":2,"201":1,"249":1,"251":6,"298":5,"299":1,"300":5,"308":2}}],["accounts✅✅✅✅✅eth",{"2":{"210":1}}],["accountseth",{"2":{"204":1}}],["accounts",{"2":{"87":1,"140":2,"141":4,"223":1,"249":1,"251":1}}],["accordingly",{"2":{"32":1}}],["according",{"2":{"7":1,"28":1,"234":1,"253":1}}],["accepting",{"2":{"251":1}}],["accept",{"2":{"251":3,"252":1,"291":1,"292":1,"293":1,"300":1}}],["accepted",{"2":{"60":1}}],["accepts",{"2":{"60":1,"81":1,"82":1,"274":1}}],["accesslist",{"2":{"227":2,"228":1}}],["accessed",{"2":{"226":1,"227":1}}],["accessible",{"2":{"38":2,"52":1,"103":1}}],["accessing",{"2":{"1":1,"232":1,"233":1,"238":2}}],["access",{"0":{"238":1},"2":{"3":2,"87":2,"89":2,"91":1,"226":1,"227":1,"230":1,"232":1,"279":1}}],["achieve",{"2":{"2":1,"32":1}}],["a",{"0":{"160":1,"176":1,"184":1,"214":1,"257":1,"270":1,"279":1},"1":{"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"271":1},"2":{"1":4,"2":6,"3":4,"6":3,"7":5,"9":1,"12":7,"13":1,"14":6,"15":5,"16":6,"17":5,"18":1,"20":4,"22":1,"23":1,"24":1,"26":3,"27":2,"28":7,"32":4,"33":1,"34":1,"37":2,"38":2,"39":1,"43":4,"44":5,"45":3,"46":1,"47":5,"48":4,"49":2,"51":1,"53":1,"54":3,"57":1,"60":2,"62":2,"64":2,"66":1,"70":1,"72":1,"79":1,"80":1,"81":1,"82":1,"84":1,"89":6,"90":2,"91":2,"92":4,"94":1,"103":1,"104":1,"107":4,"109":4,"111":1,"113":1,"115":1,"119":3,"128":1,"135":1,"136":1,"137":6,"138":6,"140":3,"141":1,"142":1,"145":1,"146":1,"147":2,"148":2,"150":3,"151":2,"152":2,"156":4,"157":2,"158":1,"160":6,"161":2,"162":7,"163":1,"166":1,"170":3,"171":3,"172":3,"174":2,"176":2,"177":1,"182":1,"184":1,"185":5,"186":3,"187":3,"188":1,"189":3,"191":2,"192":2,"195":2,"196":2,"214":2,"215":1,"216":1,"221":1,"222":2,"223":1,"224":1,"228":1,"229":2,"232":3,"233":2,"237":2,"238":2,"241":2,"242":1,"243":9,"244":1,"245":7,"246":3,"247":8,"248":8,"249":8,"250":6,"251":30,"252":13,"253":5,"254":1,"255":7,"256":3,"257":2,"258":2,"259":1,"260":7,"261":1,"262":1,"263":1,"265":2,"266":1,"268":2,"270":3,"271":6,"273":3,"274":1,"276":1,"277":1,"279":7,"280":4,"281":4,"282":3,"283":6,"284":3,"285":6,"286":4,"287":3,"288":5,"289":3,"290":6,"291":13,"292":13,"293":13,"294":1,"295":1,"296":1,"297":5,"298":6,"299":8,"300":15,"301":6,"302":6,"303":3,"304":3,"305":4,"306":4,"307":1,"308":4,"309":4,"310":4,"311":4,"312":3,"313":3}}],["apt",{"2":{"51":1,"166":6}}],["april",{"2":{"44":1,"197":1}}],["applied",{"2":{"109":1}}],["application",{"2":{"16":1,"89":1,"135":1,"157":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["applications",{"2":{"3":1,"6":2,"7":2,"26":1,"43":1,"49":1,"181":1,"182":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["appends",{"2":{"249":1}}],["append",{"2":{"51":1}}],["appear",{"2":{"49":1,"290":1}}],["approach",{"2":{"32":1}}],["apache",{"2":{"1":1,"2":2}}],["api`",{"2":{"251":2}}],["apis",{"0":{"105":1,"106":1},"2":{"86":1,"87":1,"90":1,"92":2,"104":2,"105":2,"106":3,"157":1,"177":1,"251":1}}],["api",{"0":{"183":1},"2":{"1":1,"38":1,"59":1,"73":1,"85":1,"86":1,"87":8,"89":4,"90":1,"92":1,"93":1,"100":1,"104":3,"125":1,"130":1,"157":3,"159":1,"161":5,"166":1,"167":1,"172":1,"251":14,"259":1,"260":1,"270":1,"274":2,"275":1,"277":3,"279":1,"280":1}}],["aliases",{"2":{"251":1}}],["alongside",{"2":{"160":1,"187":1,"227":1,"228":1,"229":1,"262":1,"266":1}}],["along",{"2":{"156":1}}],["already",{"2":{"51":1,"81":1,"82":1,"143":1,"150":1,"185":1,"222":1,"251":1,"258":2,"300":1}}],["alternatively",{"2":{"52":1,"89":1}}],["alternative",{"2":{"44":1}}],["although",{"2":{"12":1,"54":1}}],["always",{"2":{"6":2,"7":2,"64":1,"148":1,"172":1,"177":1,"187":1,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["allowed",{"2":{"251":1}}],["allow",{"2":{"89":1,"105":1,"106":1,"172":1,"214":1,"251":2,"265":1}}],["allowing",{"2":{"43":1,"229":2,"251":1}}],["allows",{"2":{"1":1,"3":1,"16":1,"40":1,"46":1,"59":1,"64":1,"87":3,"92":1,"125":1,"180":1,"182":1,"249":1,"251":3,"252":1,"291":1,"292":1,"293":1,"300":1}}],["allocated",{"2":{"15":1,"58":1,"152":1}}],["allocator",{"2":{"13":1,"14":1,"54":1}}],["allocation",{"0":{"18":1},"2":{"11":1,"13":1,"26":1}}],["alloy",{"2":{"2":1,"280":1}}],["all",{"2":{"1":1,"3":1,"4":1,"6":1,"7":1,"12":1,"47":1,"48":1,"51":1,"68":1,"70":1,"80":2,"86":2,"89":4,"91":1,"92":1,"106":1,"109":1,"113":1,"119":1,"123":1,"126":1,"128":1,"140":1,"141":1,"142":1,"150":1,"155":9,"171":1,"173":2,"185":1,"187":1,"191":1,"192":1,"197":1,"200":3,"238":1,"241":1,"242":1,"243":5,"244":1,"245":2,"246":1,"247":2,"248":2,"249":2,"250":2,"251":11,"252":3,"253":2,"254":1,"255":1,"259":1,"262":2,"268":1,"271":1,"274":3,"276":1,"279":1,"281":1,"282":4,"283":3,"284":2,"285":1,"286":1,"287":1,"288":2,"289":1,"290":2,"291":3,"292":3,"293":3,"294":1,"295":1,"296":1,"297":2,"298":2,"299":2,"300":3,"301":3,"302":2,"303":2,"304":2,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["also",{"2":{"0":1,"1":1,"2":3,"3":1,"4":1,"12":1,"13":1,"15":1,"20":1,"37":1,"38":1,"43":2,"48":1,"54":1,"89":1,"138":2,"140":3,"152":1,"155":1,"177":2,"191":1,"214":1,"249":1,"251":3,"252":3,"259":1,"270":3,"279":2,"280":1,"291":3,"292":3,"293":3,"300":3}}],["async",{"2":{"258":1,"259":5,"260":3,"270":1,"273":13,"274":13,"275":7,"276":1,"279":5,"280":2}}],["asynchronous",{"2":{"103":1}}],["assert",{"2":{"279":1}}],["assertion",{"2":{"238":2,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["assembly",{"2":{"54":1}}],["associated",{"2":{"229":1,"260":1}}],["assuming",{"2":{"158":1,"183":1}}],["assumes",{"2":{"185":1}}],["assume",{"2":{"156":1}}],["assumption",{"2":{"28":1}}],["asm",{"2":{"54":3,"57":3}}],["asc",{"2":{"20":2}}],["as",{"0":{"161":1},"2":{"0":4,"1":5,"2":1,"3":4,"4":1,"6":2,"7":2,"12":1,"14":2,"16":2,"17":1,"19":1,"26":1,"42":1,"43":1,"44":2,"45":1,"46":1,"48":1,"49":2,"52":1,"54":1,"59":1,"68":2,"70":1,"79":1,"83":1,"84":3,"90":2,"92":1,"100":1,"103":2,"126":2,"127":2,"128":2,"129":2,"137":3,"138":3,"141":1,"142":1,"143":1,"147":1,"150":1,"154":1,"156":2,"160":1,"162":2,"170":5,"172":3,"177":1,"182":1,"183":1,"185":1,"191":3,"192":1,"195":2,"196":1,"197":1,"200":1,"201":1,"214":1,"215":1,"218":1,"232":1,"234":1,"236":1,"242":2,"243":2,"244":4,"245":2,"246":2,"247":2,"248":2,"249":3,"250":2,"251":4,"252":3,"253":2,"254":2,"255":2,"257":1,"259":1,"262":2,"265":1,"266":1,"280":3,"281":2,"282":2,"283":2,"284":2,"285":2,"286":3,"287":2,"288":3,"289":2,"290":3,"291":5,"292":3,"293":3,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":3,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["anchor",{"2":{"273":2,"274":4,"275":2}}],["announcement",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["answer",{"2":{"230":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["ansi",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["another",{"2":{"187":1}}],["analysis",{"2":{"49":1,"180":2}}],["analyst",{"2":{"3":1}}],["analyze",{"2":{"18":1}}],["analyzing",{"2":{"13":1}}],["antifragility",{"2":{"2":1}}],["antifragile",{"2":{"2":1}}],["anything",{"2":{"273":2}}],["any|none|upnp|publicip|extip",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["anymore",{"2":{"208":1,"251":1}}],["any",{"2":{"2":1,"5":1,"7":1,"12":1,"52":1,"83":1,"87":1,"89":2,"92":1,"104":1,"137":1,"153":1,"156":1,"157":1,"158":1,"170":1,"185":1,"190":1,"215":1,"237":1,"251":1,"252":1,"253":1,"258":1,"263":1,"291":1,"292":1,"293":1,"300":1}}],["anyone",{"2":{"2":1}}],["an",{"0":{"267":1},"2":{"0":1,"1":1,"3":1,"4":2,"9":1,"12":2,"14":1,"15":2,"17":1,"18":1,"19":2,"27":1,"32":2,"43":2,"44":2,"47":2,"49":1,"51":1,"74":1,"76":1,"77":1,"78":1,"80":1,"84":1,"86":1,"89":1,"92":1,"103":2,"107":1,"144":1,"145":1,"146":1,"147":1,"156":2,"160":1,"161":1,"170":2,"171":1,"174":2,"181":1,"185":2,"186":1,"187":2,"191":1,"192":1,"227":2,"228":1,"232":1,"237":6,"238":1,"243":1,"245":1,"247":1,"248":1,"249":2,"250":1,"251":5,"252":1,"253":1,"259":4,"260":1,"262":1,"263":3,"265":1,"266":1,"268":2,"271":1,"279":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["and",{"0":{"43":1,"186":1,"234":1,"241":1,"272":1},"1":{"235":1,"236":1,"273":1,"274":1,"275":1},"2":{"0":5,"1":9,"2":8,"3":5,"4":2,"5":2,"6":3,"7":3,"8":3,"12":6,"13":2,"14":2,"15":1,"16":1,"17":1,"18":4,"19":1,"22":1,"23":1,"24":1,"27":1,"28":2,"30":1,"32":6,"34":1,"35":1,"37":3,"38":2,"41":3,"42":2,"43":9,"44":2,"47":5,"48":1,"49":1,"50":1,"51":1,"52":3,"54":4,"59":1,"60":1,"68":1,"70":2,"71":1,"75":1,"81":1,"82":1,"86":3,"87":1,"88":1,"89":4,"90":2,"91":3,"101":1,"103":3,"106":3,"107":3,"109":2,"136":1,"137":2,"138":2,"140":4,"141":1,"142":3,"143":2,"148":2,"150":2,"152":1,"155":1,"156":9,"157":8,"158":2,"159":2,"160":3,"162":2,"163":2,"170":9,"171":3,"172":5,"177":5,"178":1,"179":3,"180":3,"182":1,"183":1,"185":8,"187":5,"188":1,"189":1,"191":6,"192":1,"195":1,"196":1,"200":1,"203":1,"204":4,"214":1,"215":1,"218":2,"219":2,"224":1,"225":3,"226":1,"227":2,"228":2,"229":2,"230":1,"232":1,"233":2,"235":2,"237":1,"238":2,"239":1,"242":3,"243":6,"244":3,"245":4,"246":3,"247":6,"248":5,"249":7,"250":4,"251":20,"252":5,"253":4,"254":3,"255":3,"257":1,"258":3,"259":1,"260":5,"261":1,"262":4,"265":1,"266":1,"267":1,"268":2,"270":2,"271":1,"272":1,"273":7,"274":2,"276":2,"277":3,"279":5,"280":4,"281":4,"282":3,"283":4,"284":4,"285":3,"286":6,"287":3,"288":5,"289":4,"290":4,"291":6,"292":5,"293":5,"294":3,"295":3,"296":3,"297":4,"298":5,"299":4,"300":8,"301":5,"302":3,"303":3,"304":3,"305":3,"306":3,"307":3,"308":3,"309":3,"310":3,"311":3,"312":3,"313":3}}],["i2",{"2":{"240":2}}],["i0",{"2":{"240":2}}],["irrecoverable",{"2":{"237":3}}],["icon",{"2":{"170":1}}],["icbnmxmxau3yz",{"2":{"21":1}}],["ignoreprice",{"2":{"251":1}}],["ignored",{"2":{"249":2}}],["ignore",{"2":{"152":1,"251":2}}],["ipv6`",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["ipv6",{"2":{"251":8,"252":8,"291":8,"292":8,"293":8,"300":8}}],["ipv4",{"2":{"251":4,"252":4,"291":4,"292":4,"293":4,"300":4}}],["ipcpath",{"2":{"91":1,"251":2}}],["ipcdisable",{"2":{"91":1,"251":1}}],["ipc",{"0":{"91":1},"2":{"86":1,"88":1,"91":6,"251":9}}],["ip",{"2":{"68":1,"69":1,"70":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["i",{"0":{"48":1,"267":1},"2":{"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1,"155":4,"187":1,"235":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["iozone",{"2":{"230":1,"240":2}}],["io",{"2":{"34":3,"37":1,"158":1,"166":1,"167":1,"170":1,"186":2,"200":1,"219":3,"222":1,"224":1,"245":2}}],["immediately",{"2":{"89":1}}],["image",{"0":{"35":1,"36":1},"1":{"37":1,"38":1},"2":{"32":2,"33":3,"34":2,"35":1,"36":1,"37":2,"176":1,"186":6,"187":1}}],["images",{"2":{"31":1,"34":1,"41":1}}],["im6d1n9d7fje9fhh4gjnwzufzvtmjhx6byoo",{"2":{"21":1}}],["impacts",{"2":{"140":1}}],["impact",{"2":{"136":1,"152":1,"251":1}}],["imposed",{"2":{"32":1}}],["imposes",{"2":{"26":1,"54":1}}],["importing",{"2":{"40":1,"160":1,"218":1}}],["imported",{"2":{"20":1,"215":3,"218":2,"222":2,"249":1}}],["important",{"2":{"15":1,"42":1,"49":1,"89":1,"103":1,"259":1,"260":1,"280":1}}],["imports",{"2":{"6":2,"221":1,"222":1,"223":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["import",{"0":{"218":1,"220":1,"221":1,"222":1,"223":1,"247":1,"248":1},"1":{"221":1,"222":1,"223":1},"2":{"2":1,"6":2,"7":2,"170":2,"216":1,"221":2,"222":2,"223":1,"247":5,"248":6,"249":2,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["impl",{"2":{"273":3,"274":2,"275":1,"279":1,"280":2}}],["implicitly",{"2":{"14":1}}],["implications",{"2":{"2":1}}],["implement",{"2":{"279":1}}],["implemented",{"2":{"42":1,"54":1}}],["implements",{"2":{"4":1,"279":1}}],["implementations",{"2":{"1":1}}],["implementation",{"2":{"0":1,"1":2,"2":1,"4":1,"54":1,"160":1,"176":1,"189":1,"257":1}}],["improvements",{"2":{"225":2}}],["improves",{"2":{"54":1}}],["improve",{"2":{"1":1,"14":1,"54":1,"177":1,"224":1}}],["identity",{"2":{"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["identify",{"2":{"12":1}}],["id",{"2":{"21":1,"61":2,"63":2,"65":2,"67":2,"69":3,"70":3,"71":1,"72":6,"95":2,"97":2,"98":1,"99":2,"102":2,"108":2,"110":2,"112":2,"114":2,"116":2,"118":2,"120":2,"122":2,"124":2,"132":2,"134":2,"144":1,"251":2,"252":1,"291":1,"292":1,"293":1,"294":2,"295":2,"300":1}}],["if",{"2":{"2":1,"3":1,"6":1,"7":1,"9":1,"12":1,"15":1,"17":2,"18":3,"19":2,"27":1,"28":1,"30":1,"31":1,"32":1,"34":1,"37":1,"38":3,"39":1,"41":1,"47":1,"48":1,"51":2,"52":2,"54":1,"57":6,"62":1,"64":1,"66":1,"89":1,"103":1,"137":1,"138":1,"148":2,"150":2,"151":1,"156":1,"157":1,"158":1,"160":1,"170":3,"171":1,"177":1,"186":1,"199":1,"208":2,"222":1,"224":1,"233":1,"234":2,"237":3,"238":2,"239":2,"242":1,"243":1,"244":1,"245":2,"246":1,"247":1,"248":1,"249":1,"250":1,"251":16,"252":8,"253":1,"254":1,"255":1,"259":1,"260":3,"263":1,"266":1,"274":2,"275":1,"279":2,"280":9,"281":1,"282":1,"283":2,"284":1,"285":1,"286":2,"287":1,"288":1,"289":1,"290":1,"291":8,"292":8,"293":8,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":9,"301":2,"302":2,"303":1,"304":1,"305":1,"306":1,"307":1,"308":2,"309":2,"310":2,"311":2,"312":1,"313":1}}],["items",{"2":{"286":1}}],["iter",{"2":{"280":2}}],["iterators",{"2":{"251":1}}],["itself",{"2":{"68":1,"100":1,"170":1}}],["its",{"2":{"3":1,"12":1,"13":3,"27":1,"40":1,"68":1,"70":1,"87":1,"170":1,"171":1,"192":1,"233":1,"265":1}}],["it",{"2":{"1":2,"2":1,"3":2,"4":1,"6":2,"7":2,"12":1,"13":1,"14":1,"15":1,"16":1,"17":2,"28":1,"32":2,"33":1,"35":2,"37":2,"39":1,"40":1,"43":2,"44":2,"46":2,"51":2,"52":1,"54":1,"57":1,"59":2,"64":2,"66":2,"68":1,"80":1,"83":3,"87":1,"90":2,"103":3,"107":1,"135":1,"148":1,"150":1,"151":1,"152":1,"156":1,"157":1,"160":2,"162":3,"170":2,"180":2,"181":1,"182":1,"183":2,"200":2,"201":1,"214":2,"216":1,"232":2,"233":1,"234":1,"235":1,"236":1,"237":2,"238":1,"239":2,"242":2,"243":3,"244":2,"245":3,"246":2,"247":3,"248":3,"249":5,"250":3,"251":8,"252":6,"253":3,"254":2,"255":3,"258":1,"259":4,"260":5,"262":1,"263":1,"265":1,"266":1,"267":2,"270":1,"271":1,"273":6,"274":2,"276":1,"277":1,"279":3,"280":2,"281":2,"282":2,"283":3,"284":2,"285":2,"286":3,"287":2,"288":3,"289":2,"290":3,"291":6,"292":6,"293":6,"294":2,"295":2,"296":2,"297":3,"298":3,"299":3,"300":6,"301":4,"302":4,"303":2,"304":2,"305":2,"306":2,"307":2,"308":3,"309":3,"310":3,"311":3,"312":2,"313":2}}],["inner",{"2":{"276":1}}],["innovate",{"2":{"2":1}}],["infinite",{"2":{"259":1}}],["infrastructure",{"2":{"188":1,"265":1}}],["informational",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["information",{"2":{"16":1,"27":1,"56":1,"68":2,"70":1,"87":2,"93":1,"100":1,"106":2,"178":1,"179":1,"238":1,"288":1}}],["info",{"0":{"149":1},"2":{"6":1,"7":1,"54":1,"135":1,"149":1,"172":1,"187":3,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"258":4,"260":4,"273":2,"274":6,"275":3,"276":4,"279":4,"280":2,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["inbound",{"2":{"149":2,"251":3,"252":3,"291":3,"292":3,"293":3,"300":3}}],["input",{"2":{"106":1,"110":2,"118":1,"120":1,"122":1,"124":1,"251":2}}],["investigating",{"2":{"239":1}}],["involves",{"2":{"140":1}}],["invoked",{"2":{"80":1}}],["invocationrpc",{"2":{"60":1,"62":1,"64":1,"66":1,"68":1,"70":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"94":1,"96":1,"98":1,"101":1,"107":1,"109":1,"111":1,"113":1,"115":1,"117":1,"119":1,"121":1,"123":1,"126":1,"127":1,"128":1,"129":1,"131":1,"133":1}}],["invalid",{"2":{"18":3,"251":4}}],["incentivizing",{"2":{"228":1}}],["inception",{"2":{"226":1}}],["incorporate",{"2":{"226":1,"227":1}}],["incoming",{"2":{"152":1,"273":2,"274":1}}],["incremental",{"2":{"244":1,"293":1}}],["incrementally",{"2":{"143":1}}],["increases",{"2":{"138":1,"150":1}}],["increase",{"2":{"58":1,"137":2,"138":1,"276":1}}],["increased",{"2":{"43":1}}],["increasing",{"2":{"57":1,"152":1}}],["inclusion",{"2":{"126":1,"128":1,"129":1,"177":1}}],["including",{"2":{"2":1,"3":1,"8":1,"54":1,"59":1,"70":1,"73":1,"87":2,"104":1,"105":1,"160":2,"172":1,"185":1,"214":1,"249":1,"262":1}}],["included",{"2":{"20":1,"80":1,"301":1,"313":1}}],["include",{"2":{"2":1,"49":2,"68":1,"176":1,"189":1,"226":1,"227":1,"228":2,"229":1,"271":1}}],["includes",{"2":{"1":1,"14":2,"54":1,"106":1,"228":1}}],["inserting",{"2":{"249":1}}],["insertion",{"2":{"234":1}}],["inserts",{"0":{"234":1},"1":{"235":1,"236":1},"2":{"230":1}}],["insert",{"2":{"147":1,"280":1}}],["inspect✅✅✅✅✅txpool",{"2":{"213":1}}],["inspecttxpool",{"2":{"207":1}}],["inspecting",{"2":{"159":1}}],["inspect",{"0":{"128":1},"2":{"73":1,"87":3,"104":1,"125":1,"128":1,"187":1}}],["insight",{"2":{"104":1}}],["insights",{"2":{"27":1}}],["inside",{"0":{"39":1},"2":{"38":1,"39":2,"232":1,"261":1,"278":1,"279":4}}],["insufficient",{"2":{"28":1}}],["instruct",{"2":{"271":1}}],["instructions",{"2":{"30":1,"51":1,"58":1,"157":1,"158":1}}],["instantly",{"2":{"279":1,"280":1}}],["instantiate",{"2":{"185":1,"187":1}}],["instantiating",{"2":{"185":1}}],["instance`",{"2":{"251":2}}],["instances",{"2":{"251":1,"258":1,"302":1}}],["instance",{"2":{"58":1,"103":1,"170":1,"174":1,"189":1,"251":3,"302":3}}],["installing",{"0":{"175":1,"176":1},"2":{"163":1}}],["installer",{"2":{"51":1,"170":2}}],["installed",{"2":{"34":1,"41":1,"51":2,"52":1,"56":1,"57":1,"157":1,"158":1,"170":1,"185":1,"214":1,"262":1}}],["installation",{"0":{"41":1,"170":1},"1":{"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1},"2":{"51":3,"52":1,"53":1,"157":1,"158":1,"170":1}}],["install",{"2":{"5":1,"19":3,"32":1,"51":6,"52":2,"57":1,"164":2,"166":4,"167":3,"169":2,"170":1,"175":3,"176":1,"185":2,"251":1,"259":2,"260":1,"269":1,"274":2,"275":1,"279":2,"280":1}}],["instead",{"2":{"14":1,"57":1,"141":1,"142":1,"228":1,"232":1,"251":1,"266":1,"279":2,"286":2,"305":1,"306":1}}],["initiated",{"2":{"265":1,"273":1}}],["initializing",{"2":{"258":2}}],["initialize",{"2":{"7":2,"249":2,"250":1,"279":1}}],["initially",{"2":{"229":1}}],["initial",{"2":{"152":1,"192":1,"200":1,"236":1,"240":4}}],["init",{"0":{"249":1,"250":1},"2":{"7":2,"216":1,"223":1,"249":4,"250":2,"258":2,"276":1}}],["indefinitely",{"2":{"262":1}}],["independently",{"2":{"153":1,"201":1}}],["indexes",{"2":{"143":1,"201":1}}],["indexers",{"2":{"265":1}}],["indexer",{"2":{"3":1}}],["index",{"0":{"145":1,"146":1},"2":{"135":2,"144":1,"145":2,"146":2}}],["indexing",{"2":{"0":1,"145":1,"146":1}}],["indices",{"2":{"121":1}}],["indicative",{"2":{"103":1}}],["indicating",{"2":{"60":1,"62":1,"64":1,"94":1,"251":1}}],["individual",{"2":{"7":1,"135":1,"136":1,"255":1,"288":1}}],["individuals",{"2":{"2":1}}],["industry",{"2":{"13":1}}],["introductory",{"2":{"270":1}}],["introduction",{"2":{"12":1}}],["introduce",{"2":{"251":1}}],["introduced",{"2":{"227":1,"228":1,"229":1}}],["intrinsic",{"2":{"103":1}}],["intended",{"2":{"180":1}}],["intend",{"2":{"156":1,"158":1,"214":1}}],["intensive",{"2":{"43":1,"140":1}}],["intention",{"2":{"17":1}}],["integrity",{"2":{"20":1,"177":1,"237":1}}],["interesting",{"2":{"261":1}}],["interested",{"2":{"9":1}}],["interfere",{"2":{"258":1}}],["interface",{"2":{"181":1,"182":1,"251":3,"252":2,"291":2,"292":2,"293":2,"300":3}}],["intercepted",{"2":{"251":1}}],["internet",{"2":{"47":4}}],["internal",{"2":{"15":1,"40":1,"138":1,"152":2,"180":2,"183":2,"237":2}}],["interval",{"2":{"18":4,"148":1,"155":2,"200":1,"251":13,"252":6,"291":9,"292":6,"293":6,"300":6}}],["interpret",{"2":{"12":1,"14":1}}],["interactive",{"2":{"284":1}}],["interaction",{"2":{"179":1}}],["interacting",{"0":{"39":1,"92":1},"2":{"1":1,"103":1}}],["interact",{"2":{"1":1,"3":1,"39":2,"86":1,"87":1,"92":2,"181":1,"187":1}}],["into",{"0":{"279":1},"2":{"2":1,"22":1,"27":1,"32":1,"52":2,"86":1,"87":1,"104":1,"147":1,"156":1,"192":2,"255":1,"259":1,"262":1,"266":2,"267":1,"276":1,"279":2,"299":1}}],["in",{"0":{"14":1,"40":1,"184":1,"292":1},"1":{"185":1,"186":1,"187":1,"188":1,"189":1,"190":1},"2":{"0":3,"3":2,"4":3,"6":4,"7":4,"9":3,"12":2,"13":2,"15":1,"16":2,"17":3,"24":1,"28":2,"32":1,"33":1,"38":1,"39":1,"40":1,"45":1,"46":1,"49":3,"53":1,"54":3,"57":2,"58":1,"68":1,"70":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"90":1,"91":1,"104":1,"106":1,"113":1,"119":1,"126":1,"128":1,"129":1,"135":2,"136":1,"137":2,"138":3,"140":2,"141":1,"142":1,"143":2,"147":3,"148":2,"152":1,"155":2,"156":6,"157":4,"159":2,"160":2,"162":2,"170":9,"171":2,"172":2,"173":2,"175":1,"177":1,"179":1,"185":2,"186":3,"187":3,"191":1,"192":1,"195":1,"201":1,"202":1,"214":2,"218":1,"219":1,"221":1,"222":2,"223":2,"226":1,"227":1,"228":2,"229":3,"233":2,"234":1,"235":1,"237":1,"238":1,"241":1,"242":4,"243":9,"244":6,"245":9,"246":6,"247":9,"248":9,"249":11,"250":9,"251":53,"252":17,"253":9,"254":4,"255":4,"257":1,"258":1,"259":1,"260":4,"262":1,"263":1,"265":2,"268":1,"270":2,"271":2,"272":1,"273":3,"274":1,"277":3,"278":1,"279":3,"280":3,"281":6,"282":6,"283":8,"284":6,"285":6,"286":9,"287":6,"288":7,"289":6,"290":11,"291":17,"292":20,"293":17,"294":4,"295":4,"296":4,"297":9,"298":9,"299":9,"300":19,"301":9,"302":7,"303":6,"304":6,"305":6,"306":6,"307":4,"308":6,"309":6,"310":6,"311":6,"312":6,"313":6}}],["isolated",{"2":{"185":1,"187":1}}],["isp",{"2":{"47":1}}],["issue",{"0":{"26":1},"2":{"32":1,"103":1,"215":1,"217":1,"234":1,"237":1}}],["issues",{"2":{"16":1,"52":1,"230":1,"232":1,"234":1,"239":2}}],["isn",{"2":{"15":1,"54":1}}],["is",{"0":{"1":1,"3":1,"4":1,"56":1,"159":1},"2":{"0":4,"1":5,"2":2,"3":3,"4":1,"5":1,"6":3,"7":3,"9":1,"12":2,"13":2,"15":2,"16":3,"17":3,"18":5,"20":1,"24":2,"27":1,"28":5,"32":4,"38":6,"39":1,"42":1,"43":2,"44":3,"45":2,"46":2,"47":2,"48":1,"51":1,"54":4,"57":3,"58":1,"59":1,"70":1,"81":1,"82":1,"84":1,"86":1,"87":1,"89":7,"90":3,"91":3,"94":1,"103":7,"107":5,"109":4,"134":1,"135":2,"136":1,"137":1,"138":2,"140":1,"141":2,"142":2,"148":3,"153":1,"155":1,"156":3,"157":4,"160":1,"162":2,"170":3,"172":1,"176":1,"177":5,"180":2,"181":1,"183":1,"185":1,"187":3,"192":1,"199":1,"200":5,"208":2,"215":1,"216":1,"222":1,"223":1,"224":1,"228":4,"229":4,"232":2,"233":1,"234":1,"235":1,"237":1,"238":3,"239":1,"242":3,"243":4,"244":3,"245":5,"246":4,"247":4,"248":4,"249":4,"250":4,"251":27,"252":14,"253":4,"254":3,"255":3,"256":1,"259":1,"260":3,"262":2,"263":1,"265":2,"270":2,"274":1,"279":2,"280":2,"281":4,"282":4,"283":4,"284":4,"285":4,"286":4,"287":4,"288":4,"289":4,"290":4,"291":14,"292":14,"293":14,"294":3,"295":3,"296":3,"297":4,"298":4,"299":4,"300":14,"301":6,"302":8,"303":4,"304":4,"305":4,"306":4,"307":3,"308":4,"309":4,"310":4,"311":4,"312":4,"313":5}}],["fn",{"2":{"258":1,"259":2,"260":2,"273":6,"274":6,"275":3,"276":1,"279":2,"280":3}}],["fcus",{"2":{"251":1}}],["fcu",{"2":{"251":2}}],["f0a7d5343346",{"2":{"187":1}}],["f21d5ca3061f",{"2":{"187":1}}],["f81cd467efe3",{"2":{"187":1}}],["fdb202429b26",{"2":{"187":1}}],["flushes",{"2":{"147":1}}],["flushed",{"2":{"147":1}}],["flight",{"2":{"137":1,"138":1}}],["flashbots",{"2":{"251":2}}],["flashbot",{"2":{"189":1}}],["flashed",{"2":{"32":1}}],["flags",{"2":{"54":1,"86":1,"157":2,"185":1,"187":1,"189":1}}],["flag",{"2":{"54":3,"162":2,"170":1,"172":1,"177":3,"196":1,"238":1,"251":7,"252":1,"270":1,"291":1,"292":1,"293":1,"300":1}}],["flexible",{"2":{"42":1}}],["f",{"2":{"38":5,"40":1,"54":1,"166":1,"167":1,"284":1,"308":1,"309":1,"310":1,"311":1}}],["fs",{"2":{"17":2}}],["feehistory✅✅✅✅✅eth",{"2":{"210":1}}],["feehistoryeth",{"2":{"204":1}}],["fee",{"2":{"172":1,"226":1,"227":1,"228":8,"229":4,"251":5,"290":4}}],["fees",{"2":{"172":1,"228":1,"229":1}}],["fedora",{"0":{"167":1}}],["fetches",{"2":{"137":1,"138":1}}],["fetched",{"2":{"20":1,"251":1}}],["fetch",{"2":{"53":1,"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["february",{"2":{"44":1}}],["few",{"2":{"15":1,"22":1,"214":1}}],["features",{"2":{"14":4,"28":1,"32":1,"42":1,"54":6,"191":1,"225":1,"270":2}}],["feature",{"2":{"14":5,"18":2,"32":1,"54":1,"172":1}}],["fmt",{"2":{"6":2,"7":2,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["fields",{"2":{"249":1,"271":1,"279":1,"280":1}}],["field",{"2":{"107":2,"170":1,"186":1,"280":2}}],["fixed",{"2":{"224":1,"251":2,"252":1,"291":1,"292":1,"293":1,"300":1}}],["fix",{"2":{"32":1,"234":1,"273":1}}],["first",{"2":{"23":1,"39":1,"47":1,"51":1,"52":1,"84":1,"107":1,"109":2,"140":1,"157":1,"158":1,"172":1,"175":1,"177":1,"186":1,"192":1,"218":1,"223":1,"241":1,"249":2,"257":1,"260":1,"279":1,"280":14,"286":1}}],["filter`",{"2":{"155":1,"251":1}}],["filters",{"2":{"119":1}}],["filtering",{"0":{"106":1},"2":{"104":1,"106":3,"155":1}}],["filter",{"0":{"119":1},"1":{"120":1},"2":{"6":9,"7":9,"106":2,"119":3,"120":1,"155":1,"200":1,"242":9,"243":9,"244":9,"245":9,"246":9,"247":9,"248":9,"249":9,"250":9,"251":14,"252":9,"253":9,"254":9,"255":9,"281":9,"282":9,"283":9,"284":9,"285":9,"286":9,"287":9,"288":9,"289":9,"290":9,"291":9,"292":9,"293":9,"294":9,"295":9,"296":9,"297":9,"298":9,"299":9,"300":9,"301":9,"302":9,"303":9,"304":9,"305":9,"306":9,"307":9,"308":9,"309":9,"310":9,"311":9,"312":9,"313":9}}],["filename",{"2":{"251":2}}],["filenames",{"2":{"20":1}}],["files",{"2":{"6":3,"7":3,"18":1,"187":2,"240":1,"242":3,"243":6,"244":3,"245":6,"246":3,"247":9,"248":6,"249":6,"250":6,"251":6,"252":6,"253":6,"254":3,"255":3,"258":1,"281":3,"282":3,"283":4,"284":3,"285":3,"286":3,"287":3,"288":4,"289":3,"290":6,"291":6,"292":6,"293":6,"294":3,"295":3,"296":3,"297":6,"298":6,"299":6,"300":6,"301":6,"302":3,"303":3,"304":3,"305":3,"306":3,"307":3,"308":3,"309":3,"310":3,"311":3,"312":3,"313":3}}],["file",{"0":{"304":1,"306":1},"2":{"6":11,"7":12,"20":1,"38":2,"135":2,"147":2,"157":1,"162":1,"170":2,"186":2,"187":4,"195":1,"221":1,"222":1,"232":1,"237":1,"242":11,"243":12,"244":9,"245":12,"246":10,"247":12,"248":16,"249":18,"250":13,"251":17,"252":16,"253":12,"254":9,"255":9,"271":2,"272":1,"281":10,"282":12,"283":10,"284":10,"285":12,"286":10,"287":10,"288":11,"289":10,"290":13,"291":16,"292":16,"293":16,"294":9,"295":9,"296":9,"297":12,"298":12,"299":12,"300":16,"301":12,"302":10,"303":10,"304":17,"305":10,"306":17,"307":9,"308":10,"309":10,"310":10,"311":10,"312":10,"313":10}}],["finishedheight",{"2":{"260":3,"263":3,"274":3,"275":1,"279":1,"280":2}}],["finished",{"2":{"103":1,"260":1}}],["finish",{"2":{"32":1,"293":1}}],["final",{"2":{"18":1,"84":1,"162":1,"187":1}}],["finally",{"2":{"17":1,"54":1,"83":1,"162":1,"170":2,"171":1,"260":1,"280":1}}],["finalized",{"2":{"107":1,"109":1,"216":1}}],["finalize",{"2":{"2":1}}],["find",{"2":{"4":1,"8":1,"170":2}}],["funds",{"2":{"172":1}}],["function",{"2":{"259":2,"273":1,"279":3}}],["functions",{"2":{"87":1,"104":1,"130":1}}],["functionality",{"2":{"28":1,"184":1}}],["futureext",{"2":{"279":1,"280":1}}],["futures",{"2":{"257":1,"260":1,"262":2,"270":1,"274":2,"275":1,"279":2,"280":1}}],["future",{"2":{"126":1,"128":1,"129":1,"214":1,"259":1,"273":1,"279":7,"280":3}}],["fuzz",{"2":{"4":1,"189":1}}],["fullnodecomponents",{"2":{"259":2,"260":2,"274":4,"275":2,"279":3,"280":4}}],["fully",{"2":{"103":1,"192":1,"199":1}}],["full",{"0":{"191":1,"196":1,"200":1,"202":1,"217":1,"275":1},"1":{"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":2,"204":2,"205":2,"206":2,"207":2,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1},"2":{"0":1,"1":1,"3":4,"28":1,"44":1,"48":1,"54":1,"80":1,"104":1,"137":1,"138":1,"155":1,"157":4,"187":1,"191":3,"192":2,"196":3,"200":3,"202":1,"214":1,"215":1,"222":1,"233":1,"238":1,"243":1,"245":1,"251":8,"262":1,"270":1,"271":1,"287":1}}],["familiar",{"2":{"279":1}}],["fatal",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["faulty",{"2":{"237":1}}],["facilitates",{"2":{"183":1}}],["faced",{"2":{"12":1}}],["faces",{"2":{"2":1}}],["fake",{"2":{"161":1,"251":2}}],["fallback",{"2":{"251":2}}],["fall",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["falls",{"2":{"150":1}}],["false",{"2":{"148":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["failures",{"2":{"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["failure",{"2":{"229":1}}],["fail",{"2":{"80":1,"249":1}}],["fails",{"2":{"57":3,"151":1}}],["failed",{"0":{"32":1},"2":{"57":1,"150":1,"151":1,"238":3,"273":5,"274":6,"275":3}}],["far",{"2":{"42":1,"48":1}}],["faster",{"2":{"43":1,"137":1,"138":1}}],["fast",{"2":{"0":1,"2":3,"54":1}}],["framework",{"2":{"31":1,"32":2}}],["frequency",{"2":{"241":1,"251":3}}],["frequent",{"2":{"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1,"147":1}}],["frequently",{"2":{"15":1}}],["freshly",{"2":{"235":1}}],["freelist",{"2":{"234":2,"235":1}}],["freed",{"2":{"199":1}}],["frees",{"2":{"15":1}}],["free",{"2":{"2":2,"17":3,"279":1}}],["fromaddress",{"2":{"119":1}}],["fromblock",{"2":{"119":1,"120":1}}],["from",{"0":{"50":1,"224":1,"236":1},"1":{"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1},"2":{"2":1,"4":1,"6":2,"7":4,"15":1,"17":1,"19":2,"20":1,"24":1,"30":1,"32":1,"33":1,"35":1,"38":1,"41":1,"47":1,"57":1,"62":1,"66":1,"70":1,"107":1,"110":4,"118":1,"119":2,"120":1,"122":1,"124":1,"137":1,"138":1,"141":1,"142":1,"143":1,"155":6,"158":1,"162":1,"163":1,"170":4,"172":2,"176":2,"187":1,"192":1,"194":1,"195":1,"196":1,"200":4,"216":2,"218":1,"219":2,"221":1,"222":1,"224":2,"229":2,"230":1,"237":1,"238":1,"245":1,"247":3,"248":2,"249":1,"250":1,"251":10,"252":1,"255":3,"259":1,"260":1,"262":1,"265":1,"267":1,"270":1,"276":1,"278":1,"279":2,"280":1,"286":2,"291":1,"292":1,"293":1,"298":1,"299":1,"300":5,"301":3,"308":6,"309":6,"310":6,"311":6,"312":1,"313":1}}],["friendly",{"2":{"0":1,"6":2,"7":2,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["folders",{"2":{"233":1}}],["folderid",{"2":{"135":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["folder",{"2":{"52":1,"232":1,"233":1,"308":1,"309":1,"310":1,"311":1}}],["follows",{"2":{"90":1}}],["follow",{"2":{"51":1,"58":1,"194":1,"196":1}}],["following",{"2":{"4":1,"5":1,"17":1,"18":1,"20":1,"32":2,"38":1,"49":1,"71":1,"119":1,"135":1,"157":1,"162":1,"172":1,"186":1,"187":1,"188":1,"195":1,"200":1,"202":1,"208":1,"226":1,"233":1,"238":1,"249":1,"251":1,"271":1,"302":1}}],["four",{"2":{"43":1,"225":1}}],["found",{"0":{"56":1},"2":{"38":1,"43":1,"44":1,"51":1,"85":1,"219":1,"286":1}}],["foundry",{"2":{"2":1,"5":1,"92":1}}],["focusing",{"2":{"13":1}}],["focused",{"2":{"0":1}}],["force",{"2":{"284":1}}],["forget",{"2":{"270":1,"274":1}}],["forkchoice",{"2":{"177":1}}],["forkchoiceupdated",{"2":{"160":1}}],["fork",{"2":{"158":1,"218":1,"228":1,"229":1,"251":1}}],["formula",{"2":{"172":1}}],["form",{"2":{"109":1,"187":1}}],["formatter",{"2":{"6":1,"7":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["formatting",{"2":{"6":7,"7":7,"242":7,"243":7,"244":7,"245":7,"246":7,"247":7,"248":7,"249":7,"250":7,"251":7,"252":7,"253":7,"254":7,"255":7,"281":7,"282":7,"283":7,"284":7,"285":7,"286":7,"287":7,"288":7,"289":7,"290":7,"291":7,"292":7,"293":7,"294":7,"295":7,"296":7,"297":7,"298":7,"299":7,"300":7,"301":7,"302":7,"303":7,"304":7,"305":7,"306":7,"307":7,"308":7,"309":7,"310":7,"311":7,"312":7,"313":7}}],["format",{"2":{"6":10,"7":10,"53":1,"135":1,"242":10,"243":10,"244":10,"245":10,"246":10,"247":10,"248":10,"249":12,"250":10,"251":11,"252":10,"253":10,"254":10,"255":10,"281":10,"282":10,"283":10,"284":10,"285":10,"286":10,"287":10,"288":10,"289":10,"290":10,"291":10,"292":10,"293":10,"294":10,"295":10,"296":10,"297":10,"298":10,"299":10,"300":10,"301":10,"302":10,"303":10,"304":10,"305":10,"306":10,"307":10,"308":10,"309":10,"310":10,"311":10,"312":10,"313":10}}],["forums",{"2":{"27":1,"29":1}}],["forwarded",{"2":{"177":1}}],["forward",{"2":{"1":1,"265":1}}],["for",{"0":{"3":1,"22":1},"1":{"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1},"2":{"0":4,"2":5,"3":2,"6":14,"7":15,"8":1,"12":3,"13":2,"14":1,"15":3,"16":3,"17":3,"18":1,"19":1,"22":1,"24":1,"26":2,"27":3,"28":2,"30":1,"31":1,"32":2,"33":1,"34":1,"37":3,"38":1,"42":1,"43":3,"44":1,"45":2,"46":1,"47":3,"48":4,"49":1,"51":3,"54":3,"56":1,"57":2,"58":1,"64":1,"70":1,"71":2,"85":1,"87":1,"89":3,"90":1,"91":1,"94":1,"98":1,"103":1,"104":2,"107":1,"113":1,"126":3,"127":1,"128":3,"129":3,"130":1,"136":1,"137":2,"138":3,"139":1,"140":3,"148":3,"150":2,"151":1,"152":1,"153":1,"155":2,"156":1,"157":1,"159":1,"160":2,"166":1,"167":2,"170":9,"172":3,"173":1,"174":1,"176":1,"177":3,"178":1,"179":1,"180":3,"182":1,"183":1,"184":1,"185":3,"188":1,"189":1,"190":1,"191":2,"192":2,"196":1,"197":1,"200":1,"203":7,"204":10,"206":8,"208":1,"215":1,"217":1,"218":1,"222":1,"229":2,"237":1,"238":1,"240":16,"241":1,"242":14,"243":24,"244":14,"245":24,"246":14,"247":24,"248":24,"249":23,"250":23,"251":72,"252":39,"253":23,"254":15,"255":14,"257":2,"258":1,"259":1,"260":4,"263":3,"265":3,"266":1,"267":1,"270":2,"271":1,"273":8,"274":4,"275":2,"279":3,"280":3,"281":14,"282":14,"283":24,"284":14,"285":17,"286":17,"287":14,"288":16,"289":14,"290":23,"291":40,"292":39,"293":39,"294":14,"295":14,"296":14,"297":23,"298":23,"299":23,"300":41,"301":23,"302":17,"303":14,"304":18,"305":17,"306":20,"307":14,"308":14,"309":14,"310":14,"311":14,"312":14,"313":14}}],["r1k",{"2":{"240":2}}],["rdt",{"2":{"238":1}}],["rx",{"2":{"233":1,"273":6,"274":4,"275":2}}],["r",{"2":{"226":1,"232":1,"286":1}}],["rpm",{"2":{"167":1}}],["rpcnotedebug",{"2":{"203":1}}],["rpc",{"0":{"86":1,"92":1,"100":1,"101":1,"181":1,"182":1,"201":1},"1":{"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"101":1,"102":2,"103":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1},"2":{"0":1,"5":1,"46":1,"49":1,"70":1,"86":4,"87":2,"89":4,"92":4,"100":2,"101":2,"102":2,"103":4,"157":1,"159":1,"177":3,"181":1,"182":3,"187":4,"201":1,"202":1,"204":1,"205":1,"206":1,"207":1,"208":3,"209":1,"210":1,"211":1,"212":1,"213":1,"224":1,"251":47,"271":1,"302":2}}],["rhel",{"0":{"167":1}}],["rs",{"0":{"275":1},"2":{"51":1,"89":1,"258":1,"270":6,"271":1,"272":1}}],["rm",{"2":{"34":1,"235":1}}],["rationale",{"2":{"172":1}}],["raw",{"2":{"111":1,"141":1,"142":1,"286":2,"305":1,"306":1}}],["rawtransaction✅✅✅❌❌trace",{"2":{"212":1}}],["rawtransactiononly",{"2":{"206":1}}],["rawtransaction",{"0":{"111":1},"1":{"112":1},"2":{"105":1,"112":1}}],["randao",{"2":{"290":4}}],["random",{"2":{"240":8,"251":1}}],["ranges",{"2":{"187":1}}],["range",{"2":{"140":1,"255":2,"260":5,"276":4,"279":4,"281":2,"299":1,"300":1,"301":1}}],["ran",{"2":{"57":1}}],["raised",{"2":{"32":1}}],["ram",{"0":{"241":1},"2":{"16":2,"42":1,"46":1,"237":1,"241":2}}],["right",{"2":{"31":1,"232":1,"233":1,"308":1,"309":1,"310":1,"311":1}}],["rjem",{"2":{"18":3}}],["rows",{"2":{"286":1}}],["row",{"2":{"286":3}}],["roundtrip",{"2":{"244":1,"291":1}}],["routine",{"2":{"49":1}}],["routines",{"2":{"7":1,"244":1}}],["robust",{"2":{"238":1}}],["rollups",{"2":{"229":1,"265":1}}],["rollup",{"0":{"176":1},"2":{"174":1,"176":2,"177":6}}],["roamingappdata",{"2":{"135":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["room",{"2":{"64":1,"137":1,"148":1}}],["root",{"2":{"12":2,"35":1,"37":1,"38":1,"141":1,"142":1,"143":2,"175":1,"187":1,"244":2,"249":2,"251":7,"271":1,"290":2,"292":1,"293":1}}],["rlpx",{"0":{"296":1,"307":1},"2":{"252":2,"296":3,"307":2}}],["rlp",{"2":{"7":1,"74":1,"75":1,"80":2,"221":1,"222":2,"248":1,"249":1}}],["rc",{"2":{"4":1}}],["rule",{"2":{"15":1}}],["rules",{"2":{"4":1}}],["runbook",{"2":{"171":1}}],["runs",{"2":{"41":1,"191":1,"251":3}}],["runtime",{"2":{"18":1,"59":1}}],["running",{"0":{"156":1,"157":1,"158":1,"160":1,"161":1,"172":1,"174":1,"177":1,"189":1,"277":1},"1":{"157":1,"158":1,"159":1,"160":1,"161":1,"173":1,"174":1,"175":2,"176":2,"177":2,"190":1},"2":{"14":1,"18":1,"26":1,"28":1,"38":2,"39":2,"40":2,"41":1,"42":1,"51":3,"53":1,"57":2,"68":1,"156":2,"158":1,"160":1,"162":1,"170":1,"171":1,"177":2,"185":1,"187":8,"191":2,"192":1,"214":3,"224":1,"234":1,"243":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":2,"252":1,"253":1,"258":1,"259":2,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":2,"301":1,"302":2,"303":1,"304":1,"305":1,"306":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["run",{"0":{"40":1,"184":1,"214":1,"300":1},"1":{"185":1,"186":1,"187":1,"188":1,"189":1,"190":1},"2":{"4":3,"17":1,"18":1,"22":1,"32":1,"34":1,"35":2,"37":3,"38":5,"48":1,"49":1,"51":2,"52":1,"56":1,"57":1,"83":1,"84":1,"92":1,"154":1,"155":1,"156":2,"157":2,"158":1,"159":1,"160":1,"161":1,"162":1,"170":1,"174":1,"175":1,"187":2,"194":1,"195":3,"196":2,"214":2,"222":1,"235":1,"238":1,"239":1,"251":2,"252":1,"255":2,"258":2,"259":1,"260":1,"262":1,"266":1,"267":1,"270":1,"273":4,"274":2,"275":1,"277":4,"279":1,"280":1,"288":1,"291":1,"292":1,"293":1,"300":7,"308":2,"309":2,"310":2,"311":2}}],["rustc",{"2":{"51":1}}],["rustup",{"2":{"51":4,"57":2}}],["rustflags=",{"2":{"14":1,"54":3}}],["rust",{"2":{"0":1,"2":1,"4":1,"51":7,"52":1,"54":2,"57":5,"134":1,"270":1,"271":1,"279":1}}],["redirects",{"2":{"274":1}}],["reorgs",{"2":{"251":1,"262":2,"265":1,"280":1}}],["reorged",{"2":{"251":1,"256":1}}],["reorg",{"2":{"251":5,"260":2,"276":1,"279":1,"280":1}}],["reject",{"2":{"251":1}}],["reqs",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["requested",{"2":{"113":1}}],["requests",{"2":{"89":1,"90":1,"103":2,"137":5,"138":5,"181":1,"247":1,"251":18,"252":5,"291":5,"292":5,"293":5,"300":5}}],["request",{"2":{"4":1,"84":1,"89":2,"137":2,"138":2,"152":3,"251":10,"252":6,"273":10,"274":6,"275":3,"291":5,"292":6,"293":6,"300":5}}],["require",{"2":{"47":1,"188":1,"235":1,"243":1,"245":1,"247":1,"248":2,"249":1,"250":1,"251":1,"252":1,"253":1,"283":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1}}],["requirement",{"2":{"42":1,"43":1}}],["requirements",{"0":{"42":1},"1":{"43":1,"44":1,"45":1,"46":1,"47":1},"2":{"42":2,"44":1,"46":1,"208":1}}],["requires",{"2":{"1":2,"26":1,"28":1,"33":1,"161":1,"218":1,"251":1,"300":1}}],["required",{"2":{"0":1,"14":1,"44":2,"103":1,"156":1,"216":1,"251":1,"269":1}}],["rewrite",{"2":{"300":1}}],["rewriters",{"2":{"240":4}}],["rewriting",{"2":{"43":1}}],["refunded",{"2":{"229":1}}],["refill",{"2":{"148":1}}],["reference",{"2":{"157":1,"176":1,"239":1,"240":2,"241":1,"279":1}}],["refer",{"2":{"39":1}}],["remember",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["remaining",{"2":{"248":1}}],["remains",{"2":{"172":1}}],["reminder",{"2":{"92":1}}],["removes",{"2":{"66":1}}],["removetrustedpeer",{"0":{"66":1},"1":{"67":1},"2":{"66":1,"67":1}}],["removed",{"2":{"62":1,"66":1}}],["removepeer",{"0":{"62":1},"1":{"63":1},"2":{"62":1,"63":1}}],["removing",{"2":{"59":1}}],["remoteexexclient",{"2":{"276":2}}],["remoteexexserver",{"2":{"273":6,"274":4,"275":2}}],["remoteexex",{"2":{"271":2,"273":6,"274":4,"275":2}}],["remote",{"0":{"268":1},"1":{"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1},"2":{"37":1,"60":1,"66":1,"181":1,"182":1,"188":1,"247":2,"266":1,"267":1,"270":3,"271":1,"273":6,"274":8,"275":5,"276":2}}],["retries",{"2":{"251":3,"252":6,"291":3,"292":6,"293":6,"300":3}}],["retrieves",{"2":{"75":1,"127":1}}],["retaining",{"2":{"155":1}}],["returndata",{"2":{"251":1}}],["returning",{"2":{"111":1,"113":1,"115":1,"127":1}}],["returned",{"2":{"106":1,"251":1,"259":1}}],["returns",{"2":{"60":1,"62":1,"64":1,"66":1,"68":1,"70":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"94":1,"96":1,"98":1,"107":1,"117":1,"119":3,"121":1,"123":1,"126":1,"128":1,"129":1,"243":1,"259":2,"271":1,"286":1,"287":1}}],["return",{"2":{"51":1,"80":1,"103":4,"273":1,"279":2}}],["rethtracer",{"2":{"276":2}}],["reth400",{"2":{"48":1}}],["rethdata",{"2":{"37":2}}],["reth$",{"2":{"17":1}}],["rethmemory",{"2":{"17":3}}],["reth",{"0":{"0":1,"2":1,"6":1,"7":1,"10":1,"14":1,"30":1,"39":1,"52":1,"53":1,"135":1,"156":1,"157":1,"172":1,"175":1,"177":1,"184":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"258":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"157":1,"158":1,"159":1,"160":1,"161":1,"173":1,"174":1,"175":1,"176":1,"177":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1},"2":{"0":4,"1":2,"2":5,"3":1,"4":4,"5":1,"6":3,"7":3,"8":2,"9":1,"12":3,"13":1,"14":5,"15":6,"17":2,"18":8,"19":6,"20":4,"22":1,"24":1,"26":1,"28":1,"30":1,"32":1,"33":2,"34":7,"35":2,"37":7,"38":7,"39":9,"40":1,"41":3,"42":1,"44":1,"46":1,"47":1,"48":1,"49":3,"50":2,"51":1,"52":10,"53":4,"54":2,"56":2,"57":1,"58":1,"69":1,"86":3,"88":1,"89":8,"91":3,"92":1,"104":1,"132":1,"135":6,"136":2,"140":1,"148":5,"149":1,"150":1,"151":1,"156":2,"157":10,"158":1,"159":1,"160":2,"161":2,"162":2,"170":3,"171":1,"172":1,"173":1,"174":3,"175":6,"177":7,"183":1,"184":1,"185":3,"186":5,"187":9,"191":4,"192":3,"195":3,"196":2,"198":1,"214":4,"216":2,"218":1,"221":1,"222":1,"223":2,"232":1,"235":12,"236":3,"237":3,"242":2,"243":7,"244":2,"245":7,"246":2,"247":7,"248":7,"249":7,"250":7,"251":13,"252":8,"253":7,"254":2,"255":2,"257":10,"258":5,"259":4,"260":6,"262":2,"263":1,"265":3,"266":2,"268":1,"270":11,"273":9,"274":12,"275":6,"276":2,"277":1,"279":5,"280":5,"281":2,"282":2,"283":3,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":7,"291":8,"292":8,"293":8,"294":2,"295":2,"296":2,"297":7,"298":7,"299":7,"300":8,"301":7,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["re",{"0":{"236":1},"2":{"47":2,"48":1,"52":1,"141":1,"142":1,"143":1,"151":1,"162":1,"163":1,"170":1,"171":2,"230":1,"234":2,"239":1,"260":4,"273":1,"279":1,"300":1}}],["registered",{"2":{"241":2}}],["registry",{"0":{"173":1},"2":{"34":1,"37":1,"173":1}}],["regular",{"2":{"177":1,"251":2}}],["regularly",{"2":{"4":1}}],["relies",{"2":{"265":1}}],["relief",{"2":{"229":1}}],["reliable",{"2":{"47":1}}],["related",{"2":{"180":1,"237":2,"238":1,"239":1}}],["relatively",{"2":{"28":1,"42":1,"136":1}}],["relying",{"2":{"249":1}}],["rely",{"2":{"103":1}}],["relevant",{"2":{"51":1}}],["releases",{"2":{"21":1,"49":1,"54":1,"166":2,"167":2}}],["release",{"0":{"21":1},"2":{"20":4,"32":1,"34":2,"49":1,"52":2,"53":1,"54":2,"167":1,"277":2}}],["rebuilt",{"2":{"18":1}}],["reverse",{"2":{"286":2}}],["reverts",{"2":{"262":2,"280":1}}],["revert",{"2":{"260":2,"276":1,"279":1}}],["reverted",{"2":{"256":1,"260":1,"276":1,"279":1,"280":6}}],["review",{"2":{"27":1}}],["reviewing",{"2":{"12":1}}],["revm",{"2":{"2":1,"4":2}}],["reputation",{"0":{"150":1},"2":{"135":1,"150":3}}],["report",{"2":{"241":1,"251":1,"283":1}}],["reporting",{"2":{"48":1}}],["repo",{"2":{"170":1,"219":1}}],["repos",{"2":{"166":1,"167":1}}],["repository",{"2":{"4":2,"18":1,"32":1,"35":1,"38":2,"52":1,"260":1}}],["replays",{"2":{"113":1,"115":1}}],["replaytransaction✅❌✅❌❌trace",{"2":{"212":1}}],["replaytransactiononly",{"2":{"206":1}}],["replaytransaction",{"0":{"115":1},"1":{"116":1},"2":{"105":1,"115":1,"116":1}}],["replayblocktransactions✅✅✅❌❌trace",{"2":{"212":1}}],["replayblocktransactionsonly",{"2":{"206":1}}],["replayblocktransactions",{"0":{"113":1},"1":{"114":1},"2":{"92":1,"105":1,"113":1,"114":1}}],["replay",{"2":{"81":1,"82":1,"83":1}}],["replaced",{"2":{"158":1,"248":1}}],["replaces",{"2":{"54":2}}],["replace",{"2":{"20":1,"32":1,"39":1,"40":1,"251":1}}],["replicate",{"2":{"16":1}}],["represent",{"2":{"271":1}}],["represents",{"2":{"6":6,"7":6,"242":6,"243":6,"244":6,"245":6,"246":6,"247":6,"248":6,"249":6,"250":6,"251":6,"252":6,"253":6,"254":6,"255":6,"281":6,"282":6,"283":6,"284":6,"285":6,"286":6,"287":6,"288":6,"289":6,"290":6,"291":6,"292":6,"293":6,"294":6,"295":6,"296":6,"297":6,"298":6,"299":6,"300":6,"301":6,"302":6,"303":6,"304":6,"305":6,"306":6,"307":6,"308":6,"309":6,"310":6,"311":6,"312":6,"313":6}}],["reproducible",{"2":{"188":1}}],["reproduce",{"2":{"12":1}}],["rendered",{"2":{"5":1}}],["ress",{"2":{"251":6}}],["resolves",{"2":{"259":1}}],["resolve",{"2":{"251":1}}],["resolution",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["resource",{"2":{"136":1}}],["resources",{"0":{"29":1}}],["reserved",{"2":{"183":1,"251":3}}],["research",{"2":{"43":1,"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["respect",{"2":{"156":1}}],["respective",{"2":{"103":1}}],["respectively",{"2":{"89":1,"157":2}}],["responsible",{"2":{"260":1,"304":4,"306":4}}],["responses",{"0":{"103":1},"2":{"103":3,"137":2,"251":1}}],["response",{"2":{"89":2,"103":1,"162":1,"251":8,"252":3,"273":9,"274":6,"275":3,"291":3,"292":3,"293":3,"300":3}}],["responds",{"2":{"72":1}}],["restarts",{"2":{"251":1}}],["restrict",{"2":{"89":1}}],["restricting",{"2":{"4":1}}],["rest",{"2":{"47":1}}],["resulting",{"2":{"46":1}}],["result",{"2":{"12":1,"45":1,"61":1,"63":1,"65":1,"67":1,"69":1,"71":1,"72":3,"95":1,"97":1,"99":1,"102":1,"103":1,"108":2,"110":3,"112":2,"114":2,"116":2,"118":2,"120":2,"122":2,"124":2,"132":1,"134":1,"185":1,"258":1,"259":2,"260":2,"273":9,"274":8,"275":4,"276":1,"279":2,"280":2}}],["results",{"2":{"4":1,"14":1,"103":1,"139":1,"140":2,"141":1,"142":1,"144":1,"145":1,"146":1,"251":1,"286":1}}],["resync",{"2":{"4":1,"237":1}}],["recipient",{"2":{"290":4}}],["recently",{"2":{"263":1}}],["recent",{"2":{"78":1,"161":1,"216":1,"251":3}}],["receipt",{"2":{"251":1}}],["receiptslogfilter",{"2":{"251":1}}],["receipts",{"0":{"222":1},"2":{"6":2,"77":1,"103":1,"155":11,"200":6,"201":1,"215":1,"218":1,"219":1,"222":6,"249":1,"251":9,"304":1,"306":1}}],["receives",{"2":{"276":1}}],["receiver",{"2":{"273":1}}],["receivers",{"2":{"273":1}}],["receiverstream",{"2":{"273":9,"274":6,"275":3}}],["receive",{"2":{"263":2,"270":1,"273":1}}],["received",{"2":{"70":1,"260":3,"276":3,"279":3,"280":1}}],["receiving",{"2":{"1":1,"158":1}}],["recv",{"2":{"20":1,"260":1,"273":1,"274":2,"275":1,"279":1}}],["reclaimed",{"2":{"15":1,"200":1}}],["recompile",{"2":{"31":1,"32":1}}],["recommendation",{"2":{"179":1,"180":1,"181":1,"182":1,"183":1}}],["recommendations",{"2":{"178":1}}],["recommended",{"0":{"216":1,"217":1},"1":{"218":1,"219":1,"220":1,"221":1,"222":1,"223":1},"2":{"14":1,"42":2,"43":2,"44":4,"46":1,"47":1,"54":2,"103":1,"181":1,"215":3,"217":1,"232":1,"251":1}}],["recommend",{"2":{"0":1,"41":1,"48":2}}],["recovers",{"2":{"139":1}}],["recoverytransaction",{"2":{"209":1,"210":1,"211":1,"212":1,"213":1}}],["recovery85gbtransaction",{"2":{"199":1}}],["recovery",{"0":{"139":1},"2":{"7":1,"45":1,"135":1,"139":2,"155":2,"200":2,"201":1,"251":3,"254":1,"301":1}}],["recover",{"0":{"254":1,"297":1},"2":{"7":1,"139":1,"254":3,"297":3}}],["records",{"2":{"6":2,"7":2,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":3,"282":2,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["real",{"2":{"182":1,"277":1}}],["reached",{"2":{"301":2,"312":1,"313":1}}],["reach",{"2":{"28":1,"52":1,"190":1}}],["reasonable",{"2":{"136":1,"137":1,"138":1}}],["reasonably",{"2":{"28":1}}],["reason",{"2":{"16":1,"70":1,"71":1,"140":1,"151":1,"218":1}}],["reasons",{"2":{"0":1,"182":1}}],["readers",{"2":{"240":4}}],["readme",{"2":{"238":1}}],["reading",{"2":{"140":1}}],["read",{"2":{"43":2,"185":1,"233":3,"237":2,"243":3,"245":3,"247":5,"248":4,"249":3,"250":3,"251":4,"252":4,"253":3,"265":1,"270":1,"279":1,"283":3,"286":1,"290":3,"291":4,"292":4,"293":4,"297":3,"298":3,"299":3,"300":4,"301":3}}],["readable",{"2":{"6":2,"7":2,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"281":2,"282":2,"283":2,"284":2,"285":2,"286":3,"287":2,"288":2,"289":2,"290":2,"291":2,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2,"302":2,"303":2,"304":2,"305":3,"306":3,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["ready",{"2":{"0":1,"52":1,"273":1,"279":5,"280":3}}],["dns",{"2":{"251":5,"252":5,"291":5,"292":5,"293":5,"300":5}}],["dnf",{"2":{"167":1}}],["ddr4",{"2":{"241":2}}],["dd7tvuidaqghihgegbykacawiqrq+3zfwy6k+ln+a7eqxtvqf78lpguczl4gjgib",{"2":{"21":1}}],["dynamically",{"2":{"228":1}}],["dffa1bcd1da1",{"2":{"187":1}}],["dl",{"2":{"167":1}}],["dry",{"2":{"308":2,"309":2,"310":2,"311":2}}],["driving",{"2":{"265":1}}],["drive",{"2":{"43":1,"44":3,"235":1}}],["drives",{"2":{"43":8,"44":3}}],["driven",{"2":{"1":1,"262":1}}],["drops",{"2":{"284":1}}],["dropped",{"2":{"150":1}}],["drop",{"0":{"284":1,"298":1},"2":{"71":2,"236":2,"243":1,"255":2,"284":2,"298":3}}],["dram",{"2":{"48":1}}],["d",{"2":{"37":1,"38":1,"40":1,"166":2,"167":1,"251":2,"252":2,"291":2,"292":2,"293":2,"300":2,"308":1,"309":1,"310":1,"311":1}}],["dummy",{"2":{"249":1}}],["dumping",{"2":{"308":1,"309":1,"310":1,"311":1}}],["dumped",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["dumps",{"2":{"7":1,"246":1,"255":1,"299":1}}],["dump",{"0":{"246":1,"299":1,"308":1,"309":1,"310":1,"311":1},"2":{"7":2,"162":1,"219":1,"223":3,"246":2,"249":4,"255":1,"286":1,"299":2,"308":2,"309":2,"310":2,"311":2}}],["duration`",{"2":{"251":1}}],["duration",{"2":{"140":2,"148":2,"251":2}}],["durations",{"0":{"151":1},"2":{"135":1,"151":1}}],["durable",{"2":{"43":1}}],["during",{"0":{"103":1},"2":{"45":1,"51":1,"53":1,"57":1,"79":1,"103":1,"251":1}}],["due",{"2":{"32":1,"33":1,"45":1,"47":1,"54":1,"103":1,"181":1}}],["da0d9d24b340",{"2":{"187":1}}],["dat",{"2":{"235":6,"237":1}}],["date",{"2":{"162":1}}],["datasources",{"2":{"40":1}}],["datadirs",{"2":{"219":1}}],["datadir",{"2":{"6":2,"216":2,"218":2,"219":1,"232":1,"233":2,"243":3,"245":3,"247":3,"248":3,"249":3,"250":3,"251":6,"252":3,"253":3,"258":2,"281":1,"282":1,"283":5,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":3,"291":3,"292":3,"293":3,"297":3,"298":3,"299":3,"300":3,"301":3,"303":1,"304":1,"305":1,"306":1,"308":4,"309":4,"310":4,"311":4,"312":1,"313":1}}],["data",{"2":{"3":3,"15":2,"28":1,"37":1,"43":4,"47":1,"49":1,"103":3,"106":2,"133":1,"135":3,"147":3,"153":1,"155":1,"157":1,"170":4,"179":1,"180":1,"185":1,"187":1,"191":1,"192":3,"200":1,"201":1,"215":1,"218":1,"226":1,"229":1,"232":1,"243":4,"244":1,"245":4,"247":4,"248":4,"249":5,"250":4,"251":15,"252":5,"253":4,"258":3,"260":1,"262":1,"266":1,"271":1,"273":1,"274":2,"275":1,"276":1,"279":1,"283":1,"286":1,"290":4,"291":6,"292":5,"293":5,"297":4,"298":4,"299":4,"300":5,"301":4}}],["databases",{"2":{"243":1,"283":1}}],["database",{"0":{"32":1,"231":1,"234":1,"235":1,"237":1,"238":1},"1":{"232":1,"233":1,"234":1,"235":2,"236":2,"237":1,"238":1},"2":{"2":1,"7":3,"26":1,"28":1,"32":2,"51":1,"81":1,"82":1,"223":1,"230":5,"233":1,"234":1,"235":5,"236":1,"237":8,"238":2,"243":10,"245":5,"247":5,"248":5,"249":6,"250":6,"251":6,"252":5,"253":5,"255":3,"282":1,"283":6,"284":2,"285":1,"286":1,"287":1,"288":2,"289":1,"290":5,"291":5,"292":5,"293":5,"297":5,"298":6,"299":6,"300":8,"301":8,"303":1,"305":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["days",{"2":{"44":1,"49":2}}],["daakcrcqxtvqf78lplr7ap42qr+rgsdneh73y2yd26sjpuvroq",{"2":{"21":1}}],["dangling",{"2":{"254":1,"297":1}}],["dan",{"2":{"18":1}}],["dashboards",{"2":{"38":1,"40":1,"170":1}}],["dashboard",{"2":{"15":1,"163":1,"170":3,"171":1,"198":1,"234":2}}],["db",{"0":{"243":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"303":1,"304":1,"305":1,"306":1},"2":{"7":1,"232":3,"233":1,"234":1,"235":5,"236":1,"237":3,"243":7,"245":5,"247":5,"248":5,"249":5,"250":5,"251":7,"252":5,"253":5,"258":2,"281":2,"282":2,"283":7,"284":2,"285":2,"286":2,"287":2,"288":3,"289":2,"290":5,"291":5,"292":5,"293":5,"297":5,"298":5,"299":5,"300":5,"301":5,"303":2,"304":2,"305":2,"306":2}}],["derivations",{"2":{"265":1}}],["derives",{"2":{"265":1}}],["derived",{"2":{"251":1}}],["deleting",{"2":{"254":1,"255":1,"297":1,"301":1}}],["deletes",{"2":{"243":2,"282":3,"284":1,"303":1,"304":1}}],["delete",{"2":{"235":1}}],["dead",{"2":{"273":1,"274":1}}],["deadline",{"2":{"251":2}}],["deal",{"2":{"230":1}}],["degraded",{"2":{"239":2}}],["degree",{"2":{"137":1,"138":1}}],["deducted",{"2":{"229":1}}],["decoded",{"2":{"286":1,"305":1,"306":1}}],["decoding",{"2":{"276":2}}],["declaring",{"2":{"227":1}}],["decisions",{"2":{"156":1}}],["decide",{"2":{"156":1}}],["dencun",{"2":{"229":1}}],["denominator",{"2":{"172":1}}],["density",{"2":{"43":3}}],["deb",{"2":{"166":2}}],["debian",{"0":{"166":1}}],["debugging",{"2":{"7":2,"12":1,"54":1,"83":1,"160":1,"243":1,"252":1}}],["debug",{"0":{"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"203":1,"209":1,"244":1,"290":1,"291":1,"292":1,"293":1},"1":{"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1},"2":{"6":2,"7":4,"14":3,"16":1,"18":1,"54":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":2,"81":3,"82":3,"83":2,"84":2,"87":1,"89":1,"92":2,"104":2,"160":1,"161":3,"216":1,"224":1,"235":1,"242":2,"243":7,"244":9,"245":7,"246":2,"247":7,"248":7,"249":7,"250":7,"251":22,"252":7,"253":7,"254":2,"255":2,"277":1,"281":2,"282":2,"283":7,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":10,"291":10,"292":10,"293":10,"294":2,"295":2,"296":2,"297":7,"298":7,"299":7,"300":7,"301":7,"302":2,"303":2,"304":2,"305":2,"306":2,"307":2,"308":2,"309":2,"310":2,"311":2,"312":2,"313":2}}],["deeper",{"2":{"104":1}}],["demanding",{"2":{"43":1}}],["demographic",{"2":{"2":1}}],["deployment",{"2":{"200":1}}],["deployed",{"2":{"185":1,"188":1}}],["depth",{"2":{"172":1,"251":3,"292":3,"293":3}}],["deposit",{"2":{"158":1,"172":4,"200":3,"203":1,"204":4}}],["deps",{"2":{"40":1}}],["dependency",{"2":{"257":1,"270":1}}],["dependencies",{"0":{"51":1},"2":{"23":1,"45":1,"51":1,"52":1,"257":1,"269":1,"270":3}}],["dependent",{"2":{"135":1}}],["dependable",{"2":{"47":1}}],["depending",{"2":{"44":1,"47":1,"86":1,"151":1,"170":1,"235":1}}],["depend",{"2":{"16":1,"42":1}}],["detailed",{"2":{"288":3}}],["details",{"2":{"27":1,"54":1,"70":1,"126":2,"127":1,"128":1,"129":1}}],["deterministically",{"2":{"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["determines",{"2":{"251":2,"252":1,"291":1,"292":1,"293":1,"300":1}}],["determine",{"2":{"27":1,"43":1,"140":1,"156":1,"263":1}}],["detected",{"2":{"237":1}}],["destructive",{"2":{"300":1}}],["destructions",{"2":{"106":1}}],["deserialize",{"2":{"276":1}}],["deserves",{"2":{"263":1}}],["describe",{"2":{"202":1,"208":1}}],["descriptive",{"2":{"162":1}}],["description",{"0":{"26":1},"2":{"241":1}}],["desktop=no",{"2":{"32":1}}],["designated",{"2":{"180":1}}],["design",{"2":{"26":1}}],["devp2p",{"2":{"251":6,"252":6,"291":6,"292":6,"293":6,"300":6}}],["dev",{"2":{"32":1,"51":1,"243":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":7,"252":1,"253":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["device=",{"2":{"32":1}}],["device",{"2":{"32":3,"241":1}}],["devices",{"0":{"22":1},"1":{"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1},"2":{"16":1,"22":1,"48":1}}],["developer",{"2":{"9":1,"29":1}}],["developers",{"0":{"9":1},"2":{"0":1,"2":2,"4":1,"8":1,"16":3,"265":1}}],["development",{"2":{"5":1,"16":1}}],["define",{"0":{"186":1},"2":{"271":2,"274":1}}],["defined",{"2":{"4":1}}],["definition",{"2":{"185":1}}],["definitions",{"0":{"271":1},"2":{"183":1,"270":1}}],["defaults",{"2":{"136":1,"138":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":2,"252":1,"253":1,"290":1,"291":2,"292":1,"293":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1}}],["default=",{"2":{"17":1}}],["default",{"0":{"154":1,"258":1},"2":{"6":9,"7":9,"38":2,"51":1,"52":1,"54":4,"58":1,"89":2,"90":1,"91":1,"135":1,"153":1,"157":3,"170":4,"177":1,"180":1,"181":1,"182":1,"183":1,"191":1,"194":1,"242":11,"243":12,"244":9,"245":14,"246":10,"247":12,"248":12,"249":12,"250":12,"251":110,"252":40,"253":12,"254":9,"255":9,"258":2,"259":1,"260":1,"273":3,"274":2,"275":1,"279":1,"280":1,"281":10,"282":10,"283":10,"284":10,"285":10,"286":15,"287":10,"288":10,"289":10,"290":12,"291":40,"292":40,"293":40,"294":9,"295":9,"296":9,"297":12,"298":12,"299":12,"300":39,"301":12,"302":15,"303":10,"304":10,"305":10,"306":10,"307":9,"308":10,"309":10,"310":10,"311":10,"312":10,"313":10}}],["down",{"2":{"262":2}}],["downloads",{"2":{"137":1,"138":1,"245":1}}],["downloading",{"2":{"45":1,"47":1}}],["downloaded",{"2":{"20":1,"216":1,"219":1}}],["downloader",{"2":{"15":1,"137":7,"138":7}}],["download",{"0":{"245":1},"2":{"7":2,"19":1,"32":1,"138":1,"166":2,"167":3,"170":4,"187":1,"245":4,"252":2,"294":1,"295":1}}],["do",{"0":{"262":1,"267":1},"1":{"263":1},"2":{"157":1,"162":1,"226":2,"227":1,"249":1,"251":1,"252":1,"261":1,"267":1,"280":1,"291":1,"292":1,"293":1,"300":1}}],["domain",{"2":{"89":2}}],["dominates",{"2":{"2":1}}],["doing",{"2":{"87":1}}],["don",{"2":{"31":1,"156":1,"158":1,"228":1,"270":1,"274":1}}],["done",{"2":{"18":1,"47":1,"158":1,"162":1,"279":1}}],["docker",{"0":{"33":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"185":1,"232":1,"238":1},"1":{"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":1,"186":1,"187":1},"2":{"33":4,"34":5,"35":2,"36":3,"37":2,"38":6,"39":2,"40":4,"41":3,"57":1,"176":1,"185":6,"187":1,"188":1,"230":2,"232":2,"238":1,"251":1,"252":1,"291":1,"292":1,"293":1,"300":1}}],["docs",{"2":{"8":2,"9":2,"39":1,"187":1,"188":1}}],["document",{"2":{"4":1}}],["documented",{"2":{"2":1,"32":1,"172":1}}],["documentation",{"2":{"0":1,"8":1,"16":1,"24":1,"27":2,"28":1,"29":1,"52":1,"85":1,"269":1}}],["doesn",{"2":{"208":1,"273":1}}],["does",{"2":{"2":1,"14":2,"47":2,"49":1,"50":1,"66":1,"251":1,"259":1,"260":1,"273":1}}],["dimm",{"2":{"241":2}}],["diagnostics",{"2":{"104":1,"105":1,"300":1}}],["dive",{"2":{"267":1}}],["diversity",{"2":{"2":1}}],["divided",{"2":{"28":1}}],["dictates",{"2":{"28":1}}],["diffed",{"2":{"283":1}}],["differences",{"2":{"157":1}}],["difference",{"2":{"43":1,"105":1}}],["different",{"2":{"12":1,"153":1,"171":1,"199":2,"201":1,"214":1,"235":1,"237":1}}],["differ",{"2":{"30":1}}],["diff",{"0":{"283":1},"2":{"172":2,"243":2,"283":5}}],["difficulty",{"2":{"69":1,"249":3}}],["difficult",{"2":{"12":1,"16":1}}],["disallowed",{"2":{"251":1}}],["disallow",{"2":{"251":1}}],["disable",{"2":{"158":1,"177":1,"251":17,"252":8,"291":8,"292":8,"293":8,"300":8}}],["disables",{"2":{"54":1,"177":2,"201":1,"248":1,"251":2}}],["disabled",{"2":{"6":1,"7":1,"91":1,"177":2,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["disabling",{"2":{"17":1}}],["distributed",{"2":{"172":1}}],["distributes",{"2":{"12":1}}],["distributions",{"2":{"170":1}}],["distance`",{"2":{"251":1}}],["distance",{"2":{"155":4,"200":2,"251":6}}],["discv5",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["discv4",{"2":{"251":2,"252":2,"291":2,"292":2,"293":2,"300":2}}],["discarding",{"2":{"143":1,"155":1}}],["discouraged",{"2":{"232":1}}],["discount",{"2":{"48":1}}],["discord",{"2":{"190":1}}],["discovered",{"2":{"157":1}}],["discovery",{"2":{"69":1,"157":1,"177":7,"187":8,"251":37,"252":36,"291":36,"292":36,"293":36,"300":36}}],["disconnections",{"2":{"70":1}}],["disconnect",{"2":{"66":1,"70":1,"71":1,"150":1}}],["disconnects",{"2":{"62":1}}],["discussions",{"2":{"27":1}}],["disks",{"2":{"44":1}}],["disk",{"0":{"44":1,"240":1},"2":{"42":1,"43":2,"46":1,"58":3,"137":2,"138":2,"139":2,"140":3,"141":2,"142":2,"144":2,"145":2,"146":2,"147":1,"199":1,"200":1,"230":1,"235":1,"240":2,"251":1}}],["displays",{"2":{"52":1}}],["display",{"2":{"6":1,"7":1,"119":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["dir",{"2":{"6":1,"7":1,"242":1,"243":3,"244":1,"245":3,"246":1,"247":3,"248":3,"249":3,"250":3,"251":7,"252":4,"253":3,"254":1,"255":1,"281":1,"282":1,"283":2,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":3,"291":4,"292":4,"293":4,"294":1,"295":1,"296":1,"297":3,"298":3,"299":3,"300":4,"301":3,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["direct",{"2":{"136":1}}],["directory",{"2":{"6":1,"7":2,"38":1,"52":1,"53":1,"56":1,"135":2,"157":1,"186":1,"242":1,"243":2,"244":1,"245":2,"246":1,"247":5,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":1,"255":1,"271":2,"281":1,"282":1,"283":2,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":2,"291":2,"292":2,"293":2,"294":1,"295":1,"296":1,"297":2,"298":2,"299":2,"300":2,"301":2,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1}}],["directly",{"2":{"2":1,"52":1,"216":1,"279":3,"284":1}}]],"serializationVersion":2}
